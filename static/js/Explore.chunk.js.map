{"version":3,"file":"static/js/Explore.chunk.js","sources":["/Users/brianlovin/Sites/spectrum/src/components/scrollRow/index.js","/Users/brianlovin/Sites/spectrum/src/components/scrollRow/style.js","/Users/brianlovin/Sites/spectrum/src/components/segmentedControl/index.js","/Users/brianlovin/Sites/spectrum/src/views/explore/collections.js","/Users/brianlovin/Sites/spectrum/src/views/explore/components/communitySearchWrapper.js","/Users/brianlovin/Sites/spectrum/src/views/explore/components/search.js","/Users/brianlovin/Sites/spectrum/src/views/explore/index.js","/Users/brianlovin/Sites/spectrum/src/views/explore/queries.js","/Users/brianlovin/Sites/spectrum/src/views/explore/style.js","/Users/brianlovin/Sites/spectrum/src/views/explore/view.js"],"sourcesContent":["import React, { Component } from 'react';\nimport { ScrollableFlexRow } from './style';\n\nclass ScrollRow extends Component {\n  state = {\n    scrollPos: null,\n  };\n\n  componentDidMount = () => {\n    const node = this.hscroll;\n    node.scrollLeft = this.state.scrollPos;\n\n    let x, left, down;\n    node.addEventListener('mousemove', e => {\n      if (down) {\n        let newX = e.pageX;\n        node.scrollLeft = left - newX + x;\n      }\n    });\n\n    node.addEventListener('mousedown', e => {\n      e.preventDefault();\n\n      down = true;\n      x = e.pageX;\n      left = node.scrollLeft;\n    });\n\n    node.addEventListener('mouseup', e => {\n      down = false;\n\n      if (e.target.id) {\n        this.setState({\n          scrollPos: left - e.pageX + x,\n        });\n      }\n    });\n\n    node.addEventListener('mouseleave', e => {\n      down = false;\n    });\n  };\n\n  render() {\n    return (\n      <ScrollableFlexRow\n        className={this.props.className}\n        innerRef={comp => this.hscroll = comp}\n      >\n        {this.props.children}\n      </ScrollableFlexRow>\n    );\n  }\n}\n\nexport default ScrollRow;\n\n\n\n// WEBPACK FOOTER //\n// src/components/scrollRow/index.js","import styled from 'styled-components';\nimport { FlexRow } from '../globals';\n\nexport const ScrollableFlexRow = styled(FlexRow)`\n\toverflow-x: scroll;\n\tflex-wrap: nowrap;\n\tbackground: transparent;\n\tcursor: pointer;\n\tcursor: hand;\n\tcursor: grab;\n\n\t&:active {\n\t\tcursor: grabbing;\n\t}\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/scrollRow/style.js","// @flow\nimport styled, { css } from 'styled-components';\nimport { FlexRow } from '../globals';\n\nexport const SegmentedControl = styled(FlexRow)`\n  align-self: stretch;\n  margin: 0 32px;\n  margin-top: 16px;\n  border-bottom: 2px solid ${props => props.theme.bg.border};\n  align-items: stretch;\n  min-height: 48px;\n\n  @media (max-width: 768px) {\n    background-color: ${props => props.theme.bg.default};\n    align-self: stretch;\n    margin: 0;\n    margin-bottom: 2px;\n  }\n`;\n\nexport const Segment = styled(FlexRow)`\n  padding: 8px 24px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  line-height: 1;\n  font-size: 18px;\n  font-weight: 500;\n  color: ${props =>\n    props.selected ? props.theme.text.default : props.theme.text.alt};\n  cursor: pointer;\n  position: relative;\n  top: 2px;\n  border-bottom: 2px solid\n    ${props => (props.selected ? props.theme.text.default : 'transparent')};\n\n  .icon {\n    margin-right: 8px;\n  }\n\n  ${props =>\n    props.selected &&\n    css`\n      border-bottom: 2px solid ${props => props.theme.bg.reverse};\n    `};\n\n  &:hover {\n    color: ${props => props.theme.text.default};\n  }\n\n  @media (max-width: 768px) {\n    flex: auto;\n    justify-content: center;\n    margin-top: 32px;\n    text-align: center;\n\n    .icon {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const DesktopSegment = styled(Segment)`\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const MobileSegment = styled(Segment)`\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/segmentedControl/index.js","export const collections = [\n  {\n    title: 'Top Communities',\n    curatedContentType: 'top-communities-by-members',\n  },\n  {\n    title: 'Design',\n    curatedContentType: 'design-communities',\n    categories: [\n      {\n        title: 'Shop Talk',\n        communities: [\n          'product-design',\n          'icon-design',\n          'typography',\n          'illustrators',\n          'design-management',\n        ],\n      },\n      {\n        title: 'Resources',\n        communities: [\n          'specfm',\n          'up-coming',\n          'sketchcasts',\n          'google-design',\n          // 'breadtime',\n          'design-code',\n          // 'playbook',\n          'vectors',\n          // 'smashingmag',\n          'designhunt',\n        ],\n      },\n      {\n        title: 'Tools',\n        communities: [\n          'figma',\n          'sketch',\n          'framer',\n          'abstract',\n          'invision',\n          'principle',\n          'compositor',\n          // 'xd',\n          'origami-studio',\n          'webflow',\n          'fuse',\n        ],\n      },\n    ],\n  },\n  {\n    title: 'Web development',\n    curatedContentType: 'development-communities',\n    categories: [\n      {\n        title: 'Web Frameworks',\n        communities: [\n          'react',\n          'node',\n          'vue-js',\n          'angular',\n          'ember-js',\n          'laravel',\n          'elixir',\n          'styled-components',\n          'graphql',\n          'css-in-js',\n          'electron',\n        ],\n      },\n      {\n        title: 'Native',\n        communities: ['android', 'swiftdev', 'react-native'],\n      },\n      {\n        title: 'Resources',\n        communities: ['frontend', 'specfm'],\n      },\n      {\n        title: 'Tools',\n        communities: [\n          'zeit',\n          'realm',\n          'expo',\n          'compositor',\n          'codepen',\n          'bootstrap',\n          'tachyons',\n        ],\n      },\n    ],\n  },\n  // {\n  //   title: 'For Product Managers',\n  //   categories: [\n  //     {\n  //       title: 'Product Talk',\n  //       communities: ['product-management', 'user-research'],\n  //     },\n  //     {\n  //       title: 'Tools',\n  //       communities: ['superhuman', 'deckset'],\n  //     },\n  //   ],\n  // },\n  {\n    title: 'Tech',\n    curatedContentType: 'tech-communities',\n    categories: [\n      {\n        title: 'Get the latest news',\n        communities: ['tech-tea'],\n      },\n      {\n        title: 'Get on the blockchain',\n        communities: ['balancemymoney', 'crypto', 'btc', 'ethereum'],\n      },\n      {\n        title: 'Explore the future of interfaces',\n        communities: ['augmented-reality', 'voice-interfaces'],\n      },\n    ],\n  },\n  {\n    title: 'Life',\n    curatedContentType: 'life-communities',\n    categories: [\n      {\n        title: 'Do good, feel good',\n        communities: [\n          'for-good',\n          'mental-health',\n          'dev-fit',\n          // '5calls'\n        ],\n      },\n      {\n        title: 'Share your hobbies',\n        communities: [\n          'music',\n          // 'photography',\n          // 'movies-tv',\n          'tabletop-rpg',\n          'gaming',\n        ],\n      },\n      {\n        title: 'Find a new gig',\n        communities: ['careers', 'job-opportunities', 'need-some-work'],\n      },\n    ],\n  },\n];\n\n\n\n// WEBPACK FOOTER //\n// src/views/explore/collections.js","// @flow\nimport React from 'react';\nimport styled from 'styled-components';\nimport Link from 'src/components/link';\nimport { Transition, zIndex, Shadow, hexa } from '../../../components/globals';\nimport ViewSegment from '../../../components/viewSegment';\nimport { Button } from '../../../components/buttons';\nimport { CLIENT_URL } from '../../../api/constants';\nimport { Tagline, Copy, Content } from '../../splash/style';\n\n// $FlowFixMe\nconst CommunitySearchWrapper = props => {\n  const ThisContent = styled(Content)`\n    flex-direction: column;\n    width: 640px;\n    align-content: center;\n    align-self: center;\n    margin-top: 40px;\n    margin-bottom: 0;\n    padding: 16px;\n\n    @media (max-width: 640px) {\n      margin-top: 80px;\n      margin-bottom: 0;\n      width: 100%;\n    }\n  `;\n\n  const PrimaryCTA = styled(Button)`\n    padding: 12px 16px;\n    font-weight: 700;\n    font-size: 14px;\n    border-radius: 12px;\n    background-color: ${props => props.theme.bg.default};\n    background-image: none;\n    color: ${props => props.theme.brand.alt};\n    transition: ${Transition.hover.off};\n    z-index: ${zIndex.card};\n\n    &:hover {\n      background-color: ${props => props.theme.bg.default};\n      color: ${props => props.theme.brand.default};\n      box-shadow: ${Shadow.high} ${props => hexa(props.theme.bg.reverse, 0.5)};\n      transition: ${Transition.hover.on};\n    }\n  `;\n\n  const SecondaryContent = styled(ThisContent)`\n    margin-top: 0;\n    margin-bottom: 0;\n  `;\n\n  const ThisTagline = styled(Tagline)`margin-bottom: 0;`;\n\n  const SecondaryTagline = styled(ThisTagline)`\n    font-size: 20px;\n    font-weight: 900;\n    margin-top: 0;\n    margin-bottom: 2px;\n  `;\n\n  const ThisCopy = styled(Copy)`\n    font-size: 16px;\n    margin-bottom: 16px;\n    font-weight: 500;\n    text-align: center;\n    max-width: 640px;\n\n    @media (max-width: 768px) {\n      text-align: left;\n    }\n  `;\n\n  const SecondaryCopy = styled(ThisCopy)`margin-bottom: 16px;`;\n\n  return (\n    <ViewSegment goop={3} background=\"constellations\">\n      <ThisContent>\n        <ThisTagline>Find a community for you!</ThisTagline>\n        <ThisCopy>\n          Try searching for topics like \"crypto\" or for products like \"React\"\n        </ThisCopy>\n        {props.children}\n        <SecondaryContent>\n          <SecondaryTagline>...or create your own community</SecondaryTagline>\n          <SecondaryCopy>\n            Building communities on Spectrum is easy and free!\n          </SecondaryCopy>\n          {props.currentUser ? (\n            <Link to={`/new/community`}>\n              <PrimaryCTA>Get Started</PrimaryCTA>\n            </Link>\n          ) : (\n            <Link to={`/login?r=${CLIENT_URL}/new/community`}>\n              <PrimaryCTA>Get Started</PrimaryCTA>\n            </Link>\n          )}\n        </SecondaryContent>\n      </ThisContent>\n    </ViewSegment>\n  );\n};\n\nexport default CommunitySearchWrapper;\n\n\n\n// WEBPACK FOOTER //\n// src/views/explore/components/communitySearchWrapper.js","import React, { Component } from 'react';\n// $FlowFixMe\nimport { withApollo } from 'react-apollo';\n// $FlowFixMe\nimport { withRouter } from 'react-router';\n// $FlowFixMe\nimport compose from 'recompose/compose';\n// $FlowFixMe\nimport Link from 'src/components/link';\nimport { Button } from '../../../components/buttons';\nimport { findDOMNode } from 'react-dom';\nimport { throttle } from '../../../helpers/utils';\nimport { SEARCH_COMMUNITIES_QUERY } from '../../../api/community';\nimport { Spinner } from '../../../components/globals';\nimport {\n  SearchWrapper,\n  SearchInput,\n  SearchInputWrapper,\n  SearchSpinnerContainer,\n  SearchResultsDropdown,\n  SearchResult,\n  SearchResultTextContainer,\n  SearchResultNull,\n  SearchResultImage,\n  SearchResultMetaWrapper,\n  SearchResultName,\n  SearchResultMetadata,\n  SearchLink,\n  SearchIcon,\n} from '../style';\n\nclass Search extends Component {\n  state: {\n    searchString: string,\n    searchResults: Array<any>,\n    searchIsLoading: boolean,\n    focusedSearchResult: string,\n    isFocused: boolean,\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      searchString: '',\n      searchResults: [],\n      searchIsLoading: false,\n      focusedSearchResult: '',\n      isFocused: true,\n    };\n\n    // only kick off search query every 200ms\n    this.search = throttle(this.search, 500);\n  }\n\n  search = (searchString: string) => {\n    const { client } = this.props;\n\n    // start the input loading spinner\n    this.setState({\n      searchIsLoading: true,\n    });\n\n    // trigger the query\n    client\n      .query({\n        query: SEARCH_COMMUNITIES_QUERY,\n        variables: { string: searchString, amount: 30 },\n      })\n      .then(({ data: { searchCommunities } }) => {\n        const searchResults = searchCommunities;\n        const sorted = searchResults.slice().sort((a, b) => {\n          return b.metaData.members - a.metaData.members;\n        });\n\n        if (!sorted || sorted.length === 0) {\n          return this.setState({\n            searchResults: [],\n            searchIsLoading: false,\n            focusedSearchResult: '',\n          });\n        } else {\n          return this.setState({\n            searchResults: sorted,\n            searchIsLoading: false,\n            focusedSearchResult: sorted[0].id,\n          });\n        }\n      });\n  };\n\n  handleKeyPress = (e: any) => {\n    // destructure the whole state object\n    const { searchResults, focusedSearchResult } = this.state;\n\n    const input = findDOMNode(this.refs.input);\n    const searchResultIds =\n      searchResults && searchResults.map(community => community.id);\n    const indexOfFocusedSearchResult = searchResultIds.indexOf(\n      focusedSearchResult\n    );\n\n    // if person presses escape\n    if (e.keyCode === 27) {\n      this.setState({\n        searchResults: [],\n        searchIsLoading: false,\n        searchString: '',\n      });\n\n      input.focus();\n      return;\n    }\n\n    // if user presses enter\n    if (e.keyCode === 13) {\n      if (\n        searchResults.length === 0 ||\n        searchResults[indexOfFocusedSearchResult] === undefined\n      )\n        return;\n      const slug = searchResults[indexOfFocusedSearchResult].slug;\n      return this.props.history.push(`/${slug}`);\n    }\n\n    // if person presses down\n    if (e.keyCode === 40) {\n      if (indexOfFocusedSearchResult === searchResults.length - 1) return;\n      if (searchResults.length <= 1) return;\n\n      return this.setState({\n        focusedSearchResult: searchResults[indexOfFocusedSearchResult + 1].id,\n      });\n    }\n\n    // if person presses up\n    if (e.keyCode === 38) {\n      if (indexOfFocusedSearchResult === 0) return;\n      if (searchResults.length <= 1) return;\n\n      return this.setState({\n        focusedSearchResult: searchResults[indexOfFocusedSearchResult - 1].id,\n      });\n    }\n  };\n\n  handleChange = (e: any) => {\n    const string = e.target.value.toLowerCase().trim();\n\n    // set the searchstring to state\n    this.setState({\n      searchString: e.target.value,\n    });\n\n    // trigger a new search based on the search input\n    this.search(string);\n  };\n\n  componentDidMount() {\n    document.addEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keydown', this.handleKeyPress, false);\n  }\n\n  onFocus = (e: any) => {\n    const val = e.target.val;\n    if (!val || val.length === 0) return;\n\n    const string = val.toLowerCase().trim();\n    this.search(string);\n\n    return this.setState({\n      isFocused: true,\n    });\n  };\n\n  render() {\n    const {\n      searchString,\n      searchIsLoading,\n      searchResults,\n      focusedSearchResult,\n      isFocused,\n    } = this.state;\n\n    return (\n      <SearchWrapper>\n        {searchIsLoading && (\n          <SearchSpinnerContainer>\n            <Spinner size={16} color={'brand.default'} />\n          </SearchSpinnerContainer>\n        )}\n        <SearchInputWrapper>\n          <SearchIcon glyph=\"search\" onClick={this.onFocus} />\n          <SearchInput\n            ref=\"input\"\n            type=\"text\"\n            value={searchString}\n            placeholder=\"Search for communities or topics...\"\n            onChange={this.handleChange}\n            onFocus={this.onFocus}\n          />\n        </SearchInputWrapper>\n\n        {// user has typed in a search string\n        searchString && (\n          <SearchResultsDropdown>\n            {searchResults.length > 0 &&\n              searchResults.map(community => {\n                return (\n                  <SearchResult\n                    focused={focusedSearchResult === community.id}\n                    key={community.id}\n                  >\n                    <SearchLink to={`/${community.slug}`}>\n                      <SearchResultImage\n                        community={community}\n                        src={community.profilePhoto}\n                      />\n                      <SearchResultTextContainer>\n                        <SearchResultMetaWrapper>\n                          <SearchResultName>{community.name}</SearchResultName>\n                          {community.metaData && (\n                            <SearchResultMetadata>\n                              {community.metaData.members} members\n                            </SearchResultMetadata>\n                          )}\n                        </SearchResultMetaWrapper>\n                      </SearchResultTextContainer>\n                    </SearchLink>\n                  </SearchResult>\n                );\n              })}\n\n            {searchResults.length === 0 &&\n              isFocused && (\n                <SearchResult>\n                  <SearchResultTextContainer>\n                    <SearchResultNull>\n                      <p>No communities found matching \"{searchString}\"</p>\n                      <Link to={'/new/community'}>\n                        <Button>Create a Community</Button>\n                      </Link>\n                    </SearchResultNull>\n                  </SearchResultTextContainer>\n                </SearchResult>\n              )}\n          </SearchResultsDropdown>\n        )}\n      </SearchWrapper>\n    );\n  }\n}\n\nexport default compose(withApollo, withRouter)(Search);\n\n\n\n// WEBPACK FOOTER //\n// src/views/explore/components/search.js","import React from 'react';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport generateMetaInfo from 'shared/generate-meta-info';\nimport Titlebar from '../titlebar';\nimport AppViewWrapper from '../../components/appViewWrapper';\nimport Head from '../../components/head';\nimport Search from './components/search';\nimport CommunitySearchWrapper from './components/communitySearchWrapper';\nimport { Wrapper } from './style';\nimport { Charts } from './view';\n\nconst ExplorePure = props => {\n  const { title, description } = generateMetaInfo({\n    type: 'explore',\n  });\n\n  // previous features include: Vectors, Frontend Cafe, Abstract, Work in Progress, Mental Health\n  // const featureSlug = 'crypto';\n  // const featureNotes = `Crypto is a place to discuss crypto-currencies and tokens. As blockchain technology becomes more and more mainstream, communities like Crypto allow more people to get involved, learn, and share what they know. We're all for that, so if you're an existing investor, a newcomer to crypto-currencies, or just interested in learning about blockchain, check out Crypto!`;\n\n  return (\n    <AppViewWrapper>\n      <Wrapper>\n        <Head title={title} description={description} />\n        <Titlebar title={'Explore'} noComposer />\n        <CommunitySearchWrapper\n          currentUser={props.currentUser}\n          redirectPath={window.location}\n        >\n          <Search />\n        </CommunitySearchWrapper>\n        <Charts />\n      </Wrapper>\n    </AppViewWrapper>\n  );\n};\n\nconst map = state => ({ currentUser: state.users.currentUser });\nexport default compose(connect(map))(ExplorePure);\n\n\n\n// WEBPACK FOOTER //\n// src/views/explore/index.js","//@flow\n// $FlowFixMe\nimport { graphql, gql } from 'react-apollo';\nimport { communityInfoFragment } from '../../api/fragments/community/communityInfo';\n\nexport const getCommunity = graphql(\n  gql`\n\t\tquery getCommunity($slug: String) {\n\t\t\tcommunity(slug: $slug) {\n        ...communityInfo\n      }\n\t\t}\n    ${communityInfoFragment}\n\t`,\n  {\n    options: ({ slug }) => ({\n      variables: {\n        slug,\n      },\n      fetchPolicy: 'cache-and-network',\n    }),\n  }\n);\n\n/*\n  Gets top communities for the onboarding flow.\n*/\nexport const getTopCommunities = graphql(\n  gql`\n\t\t{\n\t\t  topCommunities {\n        ...communityInfo\n      }\n    }\n    ${communityInfoFragment}\n\t`,\n  {\n    props: ({ data: { error, loading, topCommunities } }) => ({\n      data: {\n        error,\n        loading,\n        topCommunities,\n      },\n    }),\n  }\n);\n\nconst GET_COMMUNITIES_OPTIONS = {\n  options: ({ curatedContentType }) => ({\n    variables: {\n      curatedContentType,\n    },\n    fetchPolicy: 'cache-and-network',\n  }),\n};\n\nconst GET_COMMUNITIES_QUERY = gql`\n  query getCommunitiesCollection($curatedContentType: String) {\n    communities(curatedContentType: $curatedContentType) {\n      ...communityInfo\n    }\n  }\n  ${communityInfoFragment}\n`;\n\nexport const getCommunitiesCollectionQuery = graphql(\n  GET_COMMUNITIES_QUERY,\n  GET_COMMUNITIES_OPTIONS\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/explore/queries.js","// @flow\n// $FlowFixMe\nimport styled from 'styled-components';\n// $FlowFixMe\nimport Link from 'src/components/link';\nimport {\n  FlexCol,\n  FlexRow,\n  H1,\n  H2,\n  H3,\n  P,\n  Transition,\n  Gradient,\n  Shadow,\n  hexa,\n  Truncate,\n  zIndex,\n} from '../../components/globals';\nimport Card from '../../components/card';\nimport { StyledCard } from '../../components/listItems/style';\nimport Icon from '../../components/icons';\nimport Avatar from '../../components/avatar';\nimport ScrollRow from '../../components/scrollRow';\n\nimport { Button } from '../../components/buttons';\n\nexport const Wrapper = styled(FlexCol)`\n  flex: 1 0 auto;\n  width: 100%;\n  background-color: ${({ theme }) => theme.bg.default};\n  overflow: auto;\n  overflow-x: hidden;\n  z-index: ${zIndex.base};\n  align-self: stretch;\n`;\n\nexport const ViewTitle = styled(H1)`\n  margin-left: 48px;\n  margin-top: 48px;\n  font-size: 32px;\n  font-weight: 900;\n  color: ${({ theme }) => theme.text.reverse};\n  position: relative;\n  z-index: ${zIndex.base};\n\n  @media (max-width: 768px) {\n    margin-left: 16px;\n    margin-top: 16px;\n  }\n`;\n\nexport const ViewSubtitle = styled(H2)`\n  margin-left: 48px;\n  color: ${({ theme }) => theme.text.reverse};\n  position: relative;\n  z-index: ${zIndex.base};\n\n  @media (max-width: 768px) {\n    margin-left: 16px;\n    font-size: 16px;\n    line-height: 20px;\n  }\n`;\n\nexport const ListCard = styled(StyledCard)`\n  padding: 0;\n  @media (max-width: 768px) {\n    display: flex;\n    margin-bottom: 32px;\n  }\n`;\n\nexport const Section = styled(FlexCol)`\n  padding: 32px;\n  padding-top: 0;\n  display: flex;\n  flex: none;\n  justify-content: space-between;\n  position: relative;\n  z-index: ${zIndex.base};\n  align-self: stretch;\n\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport const SectionWrapper = styled(FlexRow)`\n  flex: none;\n  align-items: flex-start;\n  justify-content: center;\n\n  @media (max-width: 768px) {\n    flex-direction: column;\n  }\n`;\n\nexport const ViewHeader = styled(Section)`\n  flex: none;\n  padding: 120px 0 0 0;\n  justify-content: flex-end;\n  background-color: ${({ theme }) => theme.space.dark};\n  background-image: ${({ theme }) =>\n    `radial-gradient(farthest-corner at 50% 100%, ${hexa(\n      theme.brand.alt,\n      0.75\n    )}, ${theme.space.dark} )`};\n\n  @media (max-width: 768px) {\n    padding: 48px 24px 0 24px;\n  }\n`;\n\nexport const SectionWithGradientTransition = styled(Section)`\n  background-image: ${({ theme }) =>\n    `linear-gradient(${theme.bg.default}, ${theme.bg.wash})`};\n\n  @media (max-width: 768px) {\n    padding: 32px;\n  }\n`;\n\nexport const SectionTitle = styled(H2)`\n  color: ${({ theme }) => theme.text.default};\n  margin-left: 16px;\n  font-size: 32px;\n  margin-bottom: 16px;\n  font-weight: 800;\n\n  @media (max-width: 768px) {\n    font-size: 24px;\n  }\n`;\n\nexport const SectionSubtitle = styled(H3)`\n  color: ${({ theme }) => theme.text.default};\n  margin-bottom: 8px;\n  margin-left: 48px;\n\n  @media (max-width: 768px) {\n    margin-left: 16px;\n  }\n`;\n\nexport const Row = styled(ScrollRow)`\n  max-width: 100%;\n  width: 100%;\n  flex: 0 0 320px;\n  padding: 8px 16px 32px 16px;\n  overflow-x: scroll;\n  align-items: flex-start;\n\n  &:after,\n  &:before {\n    content: '';\n    display: inline-block;\n    flex: 0 0 32px;\n    align-self: stretch;\n    background-color: transparent;\n  }\n`;\n\nexport const Item = styled(FlexCol)`\n  padding: 16px;\n  flex: 0 0 280px;\n  flex-order: ${props => (props.active ? '2' : '1')};\n  background-color: ${({ theme }) => theme.bg.default};\n  color: ${({ theme }) => theme.text.default};\n  border-radius: 16px;\n  margin-right: 24px;\n  justify-content: space-between;\n  position: relative;\n  opacity: ${props => (props.active ? '0.85' : '1')};\n  box-shadow: ${Shadow.low} ${props => hexa(props.theme.text.placeholder, 1)};\n  transition: ${Transition.hover.off};\n\n  &:hover {\n    box-shadow: ${Shadow.high} ${props =>\n        hexa(props.theme.text.placeholder, 1)};\n    transition: ${Transition.hover.on};\n    opacity: 1;\n  }\n`;\n\nexport const ItemTitle = styled(H2)`\n  font-weight: 700;\n  color: ${({ theme }) => theme.text.default};\n`;\n\nexport const ItemCopy = styled(P)`\n  color: ${({ theme }) => theme.text.default};\n  margin: 8px 0;\n`;\n\nexport const ItemMeta = styled(ItemCopy)`\n  font-weight: 900;\n  color: ${({ theme }) => theme.text.placeholder};\n`;\n\nexport const ButtonContainer = styled(FlexRow)`\n  justify-content: ${props => (props.center ? 'center' : 'flex-end')};\n  align-items: center;\n\n  > div {\n    margin-right: 8px;\n  }\n`;\n\nexport const ItemButton = styled(Button)`\n  font-weight: 700;\n  color: ${({ theme }) => theme.text.reverse};\n  background-color: ${props =>\n    props.joined ? props.theme.bg.inactive : props.theme.brand.default};\n  background-image: ${props =>\n    props.joined\n      ? 'none'\n      : Gradient(props.theme.brand.alt, props.theme.brand.default)};\n  box-shadow: none;\n  transition: ${Transition.hover.on};\n\n  &:hover {\n    box-shadow: none;\n  }\n`;\n\nexport const Constellations = styled.div`\n  background-color: transparent;\n  background: url(/img/constellations.svg) center top no-repeat;\n  position: absolute;\n  background-size: cover 100%;\n  z-index: ${zIndex.background};\n  height: calc(100% + 4px);\n  width: 110%;\n  top: -10px;\n  bottom: 0;\n  left: 0;\n  right: 0;\n  pointer-events: none;\n`;\n\nexport const ErrorState = styled(FlexCol)`\n  width: 100%;\n  margin-top: 32px;\n  h2 {\n    text-align: center;\n    opacity: 0.5;\n  }\n\n  p {\n    text-align: center;\n    opacity: 0.5;\n  }\n  &:not(:first-of-type) {\n    display: none;\n  }\n`;\n\nexport const SearchWrapper = styled(Card)`\n  position: relative;\n  margin-bottom: 0;\n  padding: 12px 16px;\n  box-shadow: ${Shadow.low} ${props => hexa(props.theme.bg.reverse, 0.15)};\n  transition: ${Transition.hover.off};\n  z-index: ${zIndex.search};\n\n  &:hover {\n    box-shadow: ${Shadow.high} ${props => hexa(props.theme.bg.reverse, 0.25)};\n    transition: ${Transition.hover.on};\n  }\n`;\n\nexport const SearchInputWrapper = styled(FlexRow)`\n  flex: auto;\n  color: ${props => props.theme.text.placeholder};\n`;\n\nexport const SearchIcon = styled(Icon)``;\n\nexport const SearchInput = styled.input`\n  font-size: 16px;\n  padding: 4px 20px;\n  flex: auto;\n  position: relative;\n  z-index: ${zIndex.search};\n\n  &:hover {\n  }\n`;\n\nexport const SearchSpinnerContainer = styled.span`\n  position: absolute;\n  top: 12px;\n  right: 12px;\n  width: 32px;\n  height: 32px;\n  z-index: ${zIndex.search + 1};\n`;\n\nexport const SearchResultsDropdown = styled.ul`\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: ${Shadow.mid} ${props => hexa(props.theme.bg.reverse, 0.1)};\n  position: absolute;\n  top: 64px;\n  left: 0;\n  display: inline-block;\n  width: 100%;\n  flex: auto;\n  max-height: 400px;\n  overflow-y: auto;\n  background: ${props => props.theme.bg.default};\n\n  @media (max-width: 768px) {\n    border-radius: 0 0 8px 8px;\n  }\n`;\n\nexport const SearchResultTextContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n`;\n\nexport const SearchResult = styled.li`\n  display: flex;\n  background: ${props =>\n    props.focused ? props.theme.brand.alt : props.theme.bg.default};\n  border-bottom: 2px solid\n    ${props => (props.focused ? 'transparent' : props.theme.bg.border)};\n\n  &:hover {\n    background: ${props => props.theme.brand.alt};\n    cursor: pointer;\n\n    h2 {\n      color: ${props => props.theme.text.reverse};\n    }\n\n    p {\n      color: ${props => props.theme.text.reverse};\n    }\n  }\n\n  h2 {\n    color: ${props =>\n      props.focused ? props.theme.text.reverse : props.theme.text.default};\n  }\n\n  p {\n    color: ${props =>\n      props.focused ? props.theme.text.reverse : props.theme.text.alt};\n  }\n\n  &:only-child {\n    border-bottom: none;\n  }\n\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const SearchLink = styled(Link)`\n  display: flex;\n  align-items: center;\n  width: 100%;\n  ${Truncate()} padding: 8px 16px 8px 8px;\n`;\n\nexport const SearchResultImage = styled(Avatar)``;\n\nexport const SearchResultMetaWrapper = styled(FlexCol)`margin-left: 16px;`;\n\nexport const SearchResultName = styled.h2`\n  font-size: 16px;\n  font-weight: 700;\n  line-height: 1.4;\n`;\n\nexport const SearchResultMetadata = styled.p`\n  font-size: 14px;\n  font-weight: 400;\n  line-height: 1.4;\n`;\n\nexport const SearchResultNull = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 24px;\n  background-color: ${props => props.theme.bg.default};\n  border: 0;\n\n  &:hover {\n    border: 0;\n\n    p {\n      color: ${props => props.theme.text.alt};\n    }\n  }\n\n  a {\n    margin-top: 16px;\n  }\n\n  p {\n    text-align: center;\n    font-size: 14px;\n    font-weight: 400;\n    color: ${props => props.theme.text.alt};\n    text-align: center;\n    font-size: 18px;\n    font-weight: 600;\n  }\n`;\n\nexport const ListWithTitle = styled(FlexCol)`flex: auto;`;\n\nexport const ListTitle = styled(H2)`\n  border-bottom: 1px solid ${props => props.theme.bg.border};\n  padding-bottom: 8px;\n  padding-left: 16px;\n  font-weight: 500;\n  font-size: 18px;\n  margin-top: 32px;\n\n  @media (max-width: 768px) {\n    padding-left: 32px;\n  }\n`;\n\nexport const ListWrapper = styled(FlexRow)`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(240px, 1fr));\n  align-items: stretch;\n`;\n\nexport const ListItem = styled(FlexRow)``;\n\nexport const Collections = styled.div`\n  display: flex;\n  flex-direction: column;\n  flex: auto;\n`;\n\nexport const CollectionWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  padding: 0 32px;\n  flex: auto;\n\n  @media (max-width: 768px) {\n    padding: 0;\n  }\n`;\n\nexport const CategoryWrapper = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  flex: none;\n`;\n\nexport const LoadingContainer = styled.div`padding: 32px;`;\n\n\n\n// WEBPACK FOOTER //\n// src/views/explore/style.js","// @flow\nimport * as React from 'react';\nimport styled from 'styled-components';\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { CommunityProfile } from '../../components/profile';\nimport { collections } from './collections';\nimport viewNetworkHandler from '../../components/viewNetworkHandler';\nimport {\n  ListWithTitle,\n  ListTitle,\n  ListWrapper,\n  CategoryWrapper,\n  Collections,\n  CollectionWrapper,\n  LoadingContainer,\n} from './style';\nimport { getCommunitiesCollectionQuery } from './queries';\nimport { Loading } from '../../components/loading';\nimport { SegmentedControl, Segment } from '../../components/segmentedControl';\n\nexport const Charts = () => {\n  const ChartGrid = styled.div`\n    display: flex;\n    flex-direction: column;\n    flex: auto;\n  `;\n\n  return <ChartGrid>{collections && <CollectionSwitcher />}</ChartGrid>;\n};\n\ntype Props = {};\ntype State = {\n  selectedView: string,\n};\n\nclass CollectionSwitcher extends React.Component<Props, State> {\n  state = {\n    selectedView: 'top-communities-by-members',\n  };\n\n  handleSegmentClick(selectedView) {\n    if (this.state.selectedView === selectedView) return;\n    return this.setState({ selectedView });\n  }\n\n  render() {\n    const ThisSegment = styled(Segment)`\n      @media (max-width: 768px) {\n        &:first-of-type {\n          color: ${props => props.theme.text.alt};\n          border-bottom: 2px solid ${props => props.theme.bg.border};\n        }\n        &:not(:first-of-type) {\n          display: none;\n        }\n      }\n    `;\n\n    return (\n      <Collections>\n        <SegmentedControl>\n          {collections.map((collection, i) => (\n            <ThisSegment\n              key={i}\n              onClick={() =>\n                this.handleSegmentClick(collection.curatedContentType)}\n              selected={\n                collection.curatedContentType === this.state.selectedView\n              }\n            >\n              {collection.title}\n            </ThisSegment>\n          ))}\n        </SegmentedControl>\n\n        <CollectionWrapper>\n          {collections.map((collection, index) => {\n            return (\n              <CategoryWrapper key={index}>\n                {collection.curatedContentType === this.state.selectedView && (\n                  <Category\n                    categories={collection.categories}\n                    curatedContentType={collection.curatedContentType}\n                  />\n                )}\n              </CategoryWrapper>\n            );\n          })}\n        </CollectionWrapper>\n      </Collections>\n    );\n  }\n}\n\ntype CategoryListProps = {\n  title: string,\n  currentUser?: Object,\n  slugs: Array<string>,\n  data: {\n    communities?: Array<Object>,\n  },\n  isLoading: boolean,\n  categories?: Array<any>,\n};\nclass CategoryList extends React.Component<CategoryListProps> {\n  render() {\n    const {\n      data: { communities },\n      title,\n      slugs,\n      isLoading,\n      currentUser,\n      categories,\n    } = this.props;\n\n    if (communities) {\n      let filteredCommunities = communities;\n      if (slugs) {\n        filteredCommunities = communities.filter(c => {\n          if (slugs.indexOf(c.slug) > -1) return c;\n          return null;\n        });\n      }\n\n      if (!categories) {\n        return (\n          <ListWithTitle>\n            {title ? <ListTitle>{title}</ListTitle> : null}\n            <ListWrapper>\n              {filteredCommunities.map((community, i) => (\n                // $FlowFixMe\n                <CommunityProfile\n                  key={i}\n                  profileSize={'upsell'}\n                  data={{ community }}\n                  currentUser={currentUser}\n                />\n              ))}\n            </ListWrapper>\n          </ListWithTitle>\n        );\n      }\n\n      return (\n        <div>\n          {categories.map((cat, i) => {\n            if (cat.communities) {\n              filteredCommunities = communities.filter(c => {\n                if (cat.communities.indexOf(c.slug) > -1) return c;\n                return null;\n              });\n            }\n            return (\n              <ListWithTitle key={i}>\n                {cat.title ? <ListTitle>{cat.title}</ListTitle> : null}\n                <ListWrapper>\n                  {filteredCommunities.map((community, i) => (\n                    // $FlowFixMe\n                    <CommunityProfile\n                      key={i}\n                      profileSize={'upsell'}\n                      data={{ community }}\n                      currentUser={currentUser}\n                    />\n                  ))}\n                </ListWrapper>\n              </ListWithTitle>\n            );\n          })}\n        </div>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <LoadingContainer>\n          <Loading />\n        </LoadingContainer>\n      );\n    }\n\n    return null;\n  }\n}\n\nconst map = state => ({ currentUser: state.users.currentUser });\nexport const Category = compose(\n  // $FlowIssue\n  connect(map),\n  getCommunitiesCollectionQuery,\n  viewNetworkHandler\n)(CategoryList);\n\n\n\n// WEBPACK FOOTER //\n// src/views/explore/view.js"],"mappings":"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","sourceRoot":""}