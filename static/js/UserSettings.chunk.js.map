{"version":3,"file":"static/js/UserSettings.chunk.js","sources":["/Users/brianlovin/Sites/spectrum/node_modules/validator/lib/isByteLength.js","/Users/brianlovin/Sites/spectrum/node_modules/validator/lib/isEmail.js","/Users/brianlovin/Sites/spectrum/src/api/web-push-subscriptions.js","/Users/brianlovin/Sites/spectrum/src/components/editForm/index.js","/Users/brianlovin/Sites/spectrum/src/components/editForm/style.js","/Users/brianlovin/Sites/spectrum/src/components/editForm/user.js","/Users/brianlovin/Sites/spectrum/src/views/userSettings/components/emailSettings.js","/Users/brianlovin/Sites/spectrum/src/views/userSettings/components/invoices.js","/Users/brianlovin/Sites/spectrum/src/views/userSettings/components/notificationSettings.js","/Users/brianlovin/Sites/spectrum/src/views/userSettings/components/recurringPaymentsList.js","/Users/brianlovin/Sites/spectrum/src/views/userSettings/index.js","/Users/brianlovin/Sites/spectrum/src/views/userSettings/queries.js","/Users/brianlovin/Sites/spectrum/src/views/userSettings/style.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isByteLength;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString2.default)(str);\n  var min = void 0;\n  var max = void 0;\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/validator/lib/isByteLength.js\n// module id = ./node_modules/validator/lib/isByteLength.js\n// module chunks = 1 2 3 4 6 7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _isByteLength = require('./isByteLength');\n\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\nfunction isEmail(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(displayName);\n    if (display_email) {\n      str = display_email[1];\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n\n  var lower_domain = domain.toLowerCase();\n  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n    user = user.replace(/\\./g, '').toLowerCase();\n  }\n\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 254 })) {\n    return false;\n  }\n\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\n    return false;\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n\n  var user_parts = user.split('.');\n  for (var i = 0; i < user_parts.length; i++) {\n    if (!pattern.test(user_parts[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/validator/lib/isEmail.js\n// module id = ./node_modules/validator/lib/isEmail.js\n// module chunks = 1 2 3 4 6 7","// @flow\r\nimport { graphql, gql } from 'react-apollo';\r\n\r\nconst SUBSCRIBE_TO_WEB_PUSH_MUTATION = gql`\r\n  mutation subscribeToWebPush($subscription: WebPushSubscription!) {\r\n    subscribeWebPush(subscription: $subscription)\r\n  }\r\n`;\r\n\r\nconst SUBSCRIBE_TO_WEB_PUSH_OPTIONS = {\r\n  props: ({ mutate }) => ({\r\n    subscribeToWebPush: subscription => {\r\n      if (!subscription) return;\r\n      const json = subscription.toJSON();\r\n      return mutate({\r\n        variables: {\r\n          subscription: {\r\n            endpoint: json.endpoint,\r\n            keys: {\r\n              p256dh: json.keys.p256dh,\r\n              auth: json.keys.auth,\r\n            },\r\n          },\r\n        },\r\n      });\r\n    },\r\n  }),\r\n};\r\n\r\nexport const subscribeToWebPush = graphql(\r\n  SUBSCRIBE_TO_WEB_PUSH_MUTATION,\r\n  SUBSCRIBE_TO_WEB_PUSH_OPTIONS\r\n);\r\n\n\n\n// WEBPACK FOOTER //\n// src/api/web-push-subscriptions.js","// @flow\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport User from './user';\n\nconst EditFormPure = (props: Object): React$Element<any> => {\n  const { type } = props;\n  switch (type) {\n    default:\n    case 'user': {\n      return <User {...props} />;\n    }\n  }\n};\n\ntype FormProps = {\n  data?: Object,\n};\n\nexport const EditForm = compose()(EditFormPure);\nexport const UserEditForm = (props: FormProps) => (\n  <EditForm type=\"user\" {...props} />\n);\n\n\n\n// WEBPACK FOOTER //\n// src/components/editForm/index.js","import styled from 'styled-components';\nimport Card from '../card';\nimport { FlexRow, FlexCol, Truncate } from '../globals';\n\nexport const StyledCard = styled(Card)`padding: 16px;`;\n\nexport const Form = styled.form`\n  display: inline-block;\n  flex-direction: column;\n  align-self: stretch;\n  flex: none;\n  max-width: 100%;\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 20px;\n  color: ${props => props.theme.text.default};\n  font-weight: 800;\n  line-height: 1.2;\n  flex: 1 0 auto;\n  ${Truncate};\n`;\n\nexport const Subtitle = styled.h4`\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  line-height: 1.3;\n  width: 100%;\n  ${Truncate};\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: ${props => props.theme.text.default};\n  padding: 8px 0 16px;\n  line-height: 1.4;\n\n  a {\n    color: ${props => props.theme.brand.default};\n  }\n`;\n\nexport const TertiaryActionContainer = styled(FlexRow)`\n  justify-content: flex-start;\n  flex-grow: 1;\n`;\n\nexport const Actions = styled(FlexRow)`\n  margin-top: 24px;\n  justify-content: flex-start;\n  flex-direction: row-reverse;\n  border-top: 1px solid ${props => props.theme.bg.border};\n  padding-top: 16px;\n\n  button + button {\n    margin-left: 8px;\n  }\n`;\n\nexport const PhotoPreview = styled.div`\n  position: relative;\n  width: 48px;\n  height: 48px;\n  object-fit: cover;\n  border-radius: 4px;\n  background-image: url('${props => props.src}')\n`;\n\nexport const GeneralNotice = styled.span`\n  padding: 8px 12px;\n  font-size: 12px;\n  font-weight: 500;\n  color: ${props => props.theme.text.alt};\n  background: ${props => props.theme.bg.wash};\n  border-radius: 4px;\n  margin-top: 24px;\n  line-height: 1.4;\n  display: inline-block;\n`;\n\nexport const ImageInputWrapper = styled(FlexCol)`\n  position: relative;\n  flex: 0 0 auto;\n  margin-top: 8px;\n  margin-bottom: 24px;\n\n  > label:nth-of-type(2) {\n    position: absolute;\n    bottom: -24px;\n    left: 24px;\n  }\n`;\n\nexport const Location = styled(FlexRow)`\n  font-weight: 500;\n  color: ${({ theme }) => theme.text.alt};\n  font-size: 14px;\n  margin-bottom: 8px;\n\n  > div {\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > span {\n    padding: 0 4px;\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > a:hover {\n    color: ${({ theme }) => theme.brand.alt};\n    text-decoration: underline;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Loading = styled.span`\n  display: inline-block;\n  position: absolute;\n  right: 19px;\n  top: 45px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/editForm/style.js","import React, { Component } from 'react';\n//$FlowFixMe\nimport { withRouter } from 'react-router';\n// $FlowFixMe\nimport slugg from 'slugg';\n// $FlowFixMe\nimport { withApollo } from 'react-apollo';\n//$FlowFixMe\nimport compose from 'recompose/compose';\n//$FlowFixMe\nimport { connect } from 'react-redux';\n// $FlowFixMe\nimport Link from 'src/components/link';\nimport { track } from '../../helpers/events';\nimport { throttle } from '../../helpers/utils';\nimport { Button } from '../buttons';\nimport Icon from '../../components/icons';\nimport {\n  Input,\n  TextArea,\n  Error,\n  PhotoInput,\n  CoverInput,\n} from '../formElements';\nimport {\n  StyledCard,\n  Form,\n  FormTitle,\n  Actions,\n  ImageInputWrapper,\n  Location,\n  Loading,\n} from './style';\nimport { Spinner } from '../../components/globals';\nimport { editUserMutation, CHECK_UNIQUE_USERNAME_QUERY } from '../../api/user';\nimport { addToastWithTimeout } from '../../actions/toasts';\nimport {\n  PRO_USER_MAX_IMAGE_SIZE_STRING,\n  PRO_USER_MAX_IMAGE_SIZE_BYTES,\n  FREE_USER_MAX_IMAGE_SIZE_BYTES,\n  FREE_USER_MAX_IMAGE_SIZE_STRING,\n} from '../../helpers/images';\nimport { Notice } from '../../components/listItems/style';\n\nclass UserWithData extends Component {\n  state: {\n    website: string,\n    name: string,\n    username: string,\n    description: string,\n    image: string,\n    coverPhoto: string,\n    file: ?Object,\n    coverFile: ?Object,\n    descriptionError: boolean,\n    nameError: boolean,\n    createError: boolean,\n    isLoading: boolean,\n    photoSizeError: string,\n    proGifError: boolean,\n    usernameError: string,\n    isUsernameSearching: boolean,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const user = this.props.currentUser;\n\n    this.state = {\n      website: user.website ? user.website : '',\n      name: user.name ? user.name : '',\n      username: user.username ? user.username : '',\n      description: user.description ? user.description : '',\n      image: user.profilePhoto,\n      coverPhoto: user.coverPhoto,\n      file: null,\n      coverFile: null,\n      descriptionError: false,\n      nameError: false,\n      createError: false,\n      isLoading: false,\n      photoSizeError: '',\n      proGifError: false,\n      usernameError: '',\n      isUsernameSearching: false,\n    };\n\n    this.search = throttle(this.search, 500);\n  }\n\n  changeName = e => {\n    const name = e.target.value;\n    if (name.length > 50) {\n      this.setState({\n        name,\n        nameError: true,\n      });\n\n      return;\n    }\n    this.setState({\n      name,\n      nameError: false,\n    });\n  };\n\n  changeDescription = e => {\n    const description = e.target.value;\n    if (description.length >= 140) {\n      this.setState({\n        descriptionError: true,\n      });\n      return;\n    }\n\n    this.setState({\n      description,\n      descriptionError: false,\n    });\n  };\n\n  changeWebsite = e => {\n    const website = e.target.value;\n    this.setState({\n      website,\n    });\n  };\n\n  setProfilePhoto = e => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    this.setState({\n      isLoading: true,\n    });\n\n    if (!file) return;\n\n    if (\n      file &&\n      file.size > FREE_USER_MAX_IMAGE_SIZE_BYTES &&\n      !this.props.currentUser.isPro\n    ) {\n      return this.setState({\n        photoSizeError: `Upgrade to Pro to upload files up to ${PRO_USER_MAX_IMAGE_SIZE_STRING}. Otherwise, try uploading a photo less than ${FREE_USER_MAX_IMAGE_SIZE_STRING}.`,\n        isLoading: false,\n      });\n    }\n\n    if (\n      file &&\n      file.size > PRO_USER_MAX_IMAGE_SIZE_BYTES &&\n      this.props.currentUser.isPro\n    ) {\n      return this.setState({\n        photoSizeError: `Try uploading a file less than ${PRO_USER_MAX_IMAGE_SIZE_STRING}.`,\n        isLoading: false,\n      });\n    }\n\n    if (file && file.type === 'image/gif' && !this.props.currentUser.isPro) {\n      return this.setState({\n        isLoading: false,\n        proGifError: true,\n      });\n    }\n\n    reader.onloadend = () => {\n      track('user', 'profile photo uploaded', null);\n\n      this.setState({\n        file: file,\n        image: reader.result,\n        photoSizeError: '',\n        proGifError: false,\n        isLoading: false,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  setCoverPhoto = e => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    if (!file) return;\n\n    this.setState({\n      isLoading: true,\n    });\n\n    if (\n      file &&\n      file.size > FREE_USER_MAX_IMAGE_SIZE_BYTES &&\n      !this.props.currentUser.isPro\n    ) {\n      return this.setState({\n        photoSizeError: `Upgrade to Pro to upload files up to ${PRO_USER_MAX_IMAGE_SIZE_STRING}. Otherwise, try uploading a photo less than ${FREE_USER_MAX_IMAGE_SIZE_STRING}.`,\n        isLoading: false,\n      });\n    }\n\n    if (\n      file &&\n      file.size > PRO_USER_MAX_IMAGE_SIZE_BYTES &&\n      this.props.currentUser.isPro\n    ) {\n      return this.setState({\n        photoSizeError: `Try uploading a file less than ${PRO_USER_MAX_IMAGE_SIZE_STRING}.`,\n        isLoading: false,\n      });\n    }\n\n    if (file && file.type === 'image/gif' && !this.props.currentUser.isPro) {\n      return this.setState({\n        isLoading: false,\n        proGifError: true,\n      });\n    }\n\n    reader.onloadend = () => {\n      track('user', 'cover photo uploaded', null);\n\n      this.setState({\n        coverFile: file,\n        coverPhoto: reader.result,\n        photoSizeError: '',\n        proGifError: false,\n        isLoading: false,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  save = e => {\n    e.preventDefault();\n\n    track('user', 'edited', null);\n\n    const {\n      name,\n      description,\n      website,\n      file,\n      coverFile,\n      photoSizeError,\n      username,\n      usernameError,\n    } = this.state;\n\n    const input = {\n      name,\n      description,\n      website,\n      file,\n      coverFile,\n      username,\n    };\n\n    if (photoSizeError || usernameError) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true,\n    });\n\n    this.props\n      .editUser(input)\n      .then(({ data: { editUser } }) => {\n        const user = editUser;\n\n        this.setState({\n          isLoading: false,\n        });\n\n        // the mutation returns a user object. if it exists,\n        if (user !== undefined) {\n          this.props.dispatch(addToastWithTimeout('success', 'Changes saved!'));\n          this.setState({\n            file: null,\n          });\n          window.location.href = `/users/${user.username}`;\n        }\n      })\n      .catch(err => {\n        this.setState({\n          isLoading: false,\n        });\n\n        this.props.dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  changeUsername = e => {\n    let username = e.target.value.trim();\n    username = slugg(username);\n\n    this.setState({\n      usernameError: '',\n      username,\n    });\n\n    if (username.length > 20) {\n      return this.setState({\n        usernameError: 'Usernames can be up to 20 characters',\n      });\n    } else if (username.length === 0) {\n      this.setState({\n        usernameError: 'Be sure to set a username so that people can find you!',\n      });\n    } else {\n      this.setState({\n        usernameError: '',\n      });\n    }\n\n    this.search(username);\n  };\n\n  search = username => {\n    if (username.length > 20) {\n      return this.setState({\n        usernameError: 'Usernames can be up to 20 characters',\n        isUsernameSearching: false,\n      });\n    } else if (username.length === 0) {\n      return this.setState({\n        usernameError: 'Be sure to set a username so that people can find you!',\n        isUsernameSearching: false,\n      });\n    } else {\n      this.setState({\n        usernameError: '',\n        isUsernameSearching: true,\n      });\n\n      // check the db to see if this channel slug exists\n      this.props.client\n        .query({\n          query: CHECK_UNIQUE_USERNAME_QUERY,\n          variables: {\n            username,\n          },\n        })\n        .then(({ data, data: { user } }) => {\n          if (this.state.username.length > 20) {\n            return this.setState({\n              usernameError: 'Usernames can be up to 20 characters',\n              isUsernameSearching: false,\n            });\n          } else if (user && user.id) {\n            return this.setState({\n              usernameError: 'This username is already taken, sorry!',\n              isUsernameSearching: false,\n            });\n          } else {\n            return this.setState({\n              usernameError: '',\n              isUsernameSearching: false,\n            });\n          }\n        });\n    }\n  };\n\n  render() {\n    const {\n      name,\n      username,\n      description,\n      website,\n      image,\n      coverPhoto,\n      descriptionError,\n      createError,\n      nameError,\n      isLoading,\n      photoSizeError,\n      proGifError,\n      usernameError,\n      isUsernameSearching,\n    } = this.state;\n\n    return (\n      <StyledCard>\n        <Location>\n          <Icon glyph=\"view-back\" size={16} />\n          <Link to={`/users/${username}`}>Return to Profile</Link>\n        </Location>\n        <FormTitle>Profile Settings</FormTitle>\n        <Form onSubmit={this.save}>\n          <ImageInputWrapper>\n            <CoverInput\n              onChange={this.setCoverPhoto}\n              defaultValue={coverPhoto}\n              preview={true}\n              allowGif\n            />\n            <PhotoInput\n              onChange={this.setProfilePhoto}\n              defaultValue={image}\n              user\n              allowGif\n            />\n          </ImageInputWrapper>\n\n          {photoSizeError && (\n            <Notice style={{ marginTop: '32px' }}>{photoSizeError}</Notice>\n          )}\n\n          {proGifError && (\n            <Notice style={{ marginTop: '32px' }}>\n              Upgrade to Pro to use a gif as your profile or cover photo{' '}\n              <span role=\"img\" aria-label=\"finger pointing right emoji\">\n                👉\n              </span>\n            </Notice>\n          )}\n\n          <Input\n            type=\"text\"\n            defaultValue={name}\n            onChange={this.changeName}\n            placeholder={\"What's your name?\"}\n          >\n            Name\n          </Input>\n\n          {nameError && <Error>Names can be up to 50 characters.</Error>}\n\n          <Input\n            type={'text'}\n            defaultValue={username}\n            onChange={this.changeUsername}\n          >\n            Username\n            {isUsernameSearching && (\n              <Loading>\n                <Spinner size={16} color={'brand.default'} />\n              </Loading>\n            )}\n          </Input>\n\n          {usernameError && (\n            <Notice style={{ marginTop: '16px' }}>{usernameError}</Notice>\n          )}\n\n          <TextArea\n            defaultValue={description}\n            onChange={this.changeDescription}\n            placeholder={'Introduce yourself to the class...'}\n          >\n            Bio\n          </TextArea>\n\n          {descriptionError && <Error>Bios can be up to 140 characters.</Error>}\n\n          <Input defaultValue={website} onChange={this.changeWebsite}>\n            Optional: Add your website\n          </Input>\n\n          <Actions>\n            <Button\n              disabled={!name || nameError || !username || usernameError}\n              loading={isLoading}\n              onClick={this.save}\n            >\n              Save\n            </Button>\n          </Actions>\n\n          {createError && (\n            <Error>Please fix any errors above to save your profile.</Error>\n          )}\n        </Form>\n      </StyledCard>\n    );\n  }\n}\n\nconst map = state => ({\n  currentUser: state.users.currentUser,\n});\n\nconst UserSettings = compose(\n  editUserMutation,\n  withRouter,\n  withApollo,\n  connect(map)\n)(UserWithData);\nexport default UserSettings;\n\n\n\n// WEBPACK FOOTER //\n// src/components/editForm/user.js","import React, { Component } from 'react';\n//$FlowFixMe\nimport { connect } from 'react-redux';\n//$FlowFixMe\nimport compose from 'recompose/compose';\nimport { addToastWithTimeout } from '../../../actions/toasts';\nimport {\n  toggleNotificationSettingsMutation,\n  updateUserEmailMutation,\n} from '../../../api/user';\nimport { Checkbox, Input, Error } from '../../../components/formElements';\nimport Icon from '../../../components/icons';\nimport { Button } from '../../../components/buttons';\nimport isEmail from 'validator/lib/isEmail';\nimport {\n  StyledCard,\n  LargeListHeading,\n  ListHeader,\n  ListContainer,\n  Notice,\n  InlineIcon,\n  Description,\n} from '../../../components/listItems/style';\nimport { EmailListItem, CheckboxContent, EmailForm } from '../style';\n\nconst parseNotificationTypes = notifications => {\n  const types = Object.keys(notifications.types).filter(\n    type => type !== '__typename'\n  );\n  return types.map(type => {\n    if (!notifications.types[type]) return {};\n    switch (type) {\n      case 'newMessageInThreads':\n        return {\n          type,\n          emailValue: notifications.types[type].email,\n          label:\n            \"Email me when people respond in the threads and private conversations where I'm active - this includes direct messages.\",\n          display: 'flex-start',\n        };\n      case 'newDirectMessage':\n        return {\n          type,\n          emailValue: notifications.types[type].email,\n          label: 'Email me when I receive new direct messages.',\n          display: 'center',\n        };\n      case 'newThreadCreated':\n        return {\n          type,\n          emailValue: notifications.types[type].email,\n          label:\n            'Email me when a new thread is published in channels where I receive notifications.',\n          display: 'flex-start',\n        };\n      case 'dailyDigest':\n        return {\n          type,\n          emailValue: notifications.types[type].email,\n          label:\n            'Email me every day with the top conversations in my communities.',\n          display: 'center',\n        };\n      case 'weeklyDigest':\n        return {\n          type,\n          emailValue: notifications.types[type].email,\n          label:\n            'Email me once every week with the top conversations in my communities',\n          display: 'center',\n        };\n      case 'newMention':\n        return {\n          type,\n          emailValue: notifications.types[type].email,\n          label: 'Email me if someone @mentions me on Spectrum',\n          display: 'flex-start',\n        };\n      default:\n      case 'null':\n        return {};\n    }\n  });\n};\n\nclass EmailSettings extends Component {\n  state: {\n    email: string,\n    emailError: string,\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      email: '',\n      emailError: '',\n    };\n  }\n\n  handleEmailChange = e => {\n    this.setState({\n      email: e.target.value,\n      emailError: '',\n    });\n  };\n\n  saveEmail = e => {\n    e.preventDefault();\n    const { email } = this.state;\n    const { updateUserEmail } = this.props;\n\n    if (!isEmail(email)) {\n      return this.setState({\n        emailError: 'Please enter a valid email address',\n      });\n    }\n\n    return updateUserEmail(email)\n      .then(({ data: { updateUserEmail } }) => {\n        this.props.dispatch(\n          addToastWithTimeout(\n            'success',\n            `A confirmation email has been sent to ${email}!`\n          )\n        );\n        return this.setState({\n          email: '',\n        });\n      })\n      .catch(err => {\n        this.props.dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  handleChange = e => {\n    let notificationType = e.target.id;\n    let deliveryMethod = 'email';\n    let input = {\n      deliveryMethod,\n      notificationType,\n    };\n\n    this.props\n      .toggleNotificationSettings(input)\n      .then(({ data: { toggleNotificationSettings } }) => {\n        this.props.dispatch(addToastWithTimeout('success', 'Settings saved!'));\n      })\n      .catch(err => {\n        this.props.dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  render() {\n    const {\n      currentUser: { settings: { notifications } },\n      currentUser,\n    } = this.props;\n    const { emailError } = this.state;\n    const settings = parseNotificationTypes(\n      notifications\n    ).filter(notification => notification.hasOwnProperty('emailValue'));\n\n    if (!currentUser.email) {\n      return (\n        <StyledCard\n          smallOnly={this.props.smallOnly}\n          largeOnly={this.props.largeOnly}\n        >\n          <ListHeader>\n            <LargeListHeading>Turn on email notifications</LargeListHeading>\n          </ListHeader>\n          <ListContainer>\n            <Description>\n              You can customize your email notifications to keep up to date on\n              what's important to you on Spectrum. Enter your email below and\n              we'll send you a confirmation link.\n            </Description>\n\n            {currentUser.pendingEmail && (\n              <Notice>\n                A confirmation link was sent to {currentUser.pendingEmail}. You\n                can resend the confirmation below, or enter a new email address.\n              </Notice>\n            )}\n\n            <EmailForm\n              onSubmit={this.saveEmail}\n              style={{ marginTop: '8px', marginBottom: '8px' }}\n            >\n              <Input\n                type=\"email\"\n                defaultValue={null}\n                onChange={this.handleEmailChange}\n                placeholder={'Add your email address'}\n              >\n                Email Address\n              </Input>\n\n              <Button onClick={this.saveEmail}>Save</Button>\n            </EmailForm>\n            {emailError && <Error>{emailError}</Error>}\n          </ListContainer>\n        </StyledCard>\n      );\n    }\n\n    return (\n      <StyledCard\n        smallOnly={this.props.smallOnly}\n        largeOnly={this.props.largeOnly}\n      >\n        <ListHeader>\n          <LargeListHeading>Email Preferences</LargeListHeading>\n        </ListHeader>\n        <ListContainer>\n          {settings.map((setting, i) => {\n            return (\n              <EmailListItem key={i}>\n                <Checkbox\n                  checked={setting.emailValue}\n                  onChange={this.handleChange}\n                  id={setting.type}\n                  align={setting.display}\n                >\n                  <CheckboxContent>\n                    {setting.label}\n                    {setting.type === 'newMessageInThreads' && (\n                      <Notice>\n                        <strong>\n                          Trying to mute a specific conversation?\n                        </strong>{' '}\n                        You can turn off email notifications for individual\n                        threads by clicking on the notification icon{' '}\n                        <InlineIcon>\n                          <Icon glyph=\"notification\" size=\"16\" />\n                        </InlineIcon>{' '}\n                        at the top of a post.\n                      </Notice>\n                    )}\n\n                    {setting.type === 'newThreadCreated' && (\n                      <Notice>\n                        You can turn off email notifications for individual\n                        channels by turning thread notifications off on in the\n                        sidebar of the individual channel's page.\n                      </Notice>\n                    )}\n\n                    {setting.type === 'newMention' && (\n                      <Notice>\n                        If you mute a specific conversation, new @mentions will\n                        not send you an email.\n                      </Notice>\n                    )}\n                  </CheckboxContent>\n                </Checkbox>\n              </EmailListItem>\n            );\n          })}\n        </ListContainer>\n      </StyledCard>\n    );\n  }\n}\n\nexport default compose(\n  toggleNotificationSettingsMutation,\n  updateUserEmailMutation,\n  connect()\n)(EmailSettings);\n\n\n\n// WEBPACK FOOTER //\n// src/views/userSettings/components/emailSettings.js","import React, { Component } from 'react';\n// $FlowFixMe\nimport compose from 'recompose/compose';\n// $FlowFixMe\nimport { connect } from 'react-redux';\nimport { getUserInvoices } from '../../../api/user';\nimport { displayLoadingCard } from '../../../components/loading';\nimport { InvoiceListItem } from '../../../components/listItems';\nimport { sortByDate } from '../../../helpers/utils';\nimport {\n  StyledCard,\n  LargeListHeading,\n  ListContainer,\n} from '../../../components/listItems/style';\n\nclass InvoicesPure extends Component {\n  render() {\n    const { data: { error, user } } = this.props;\n\n    if (!user || user.invoices.length === 0 || error !== undefined) {\n      return null;\n    }\n\n    const { invoices } = user;\n    const sortedInvoices = sortByDate(invoices.slice(), 'paidAt', 'desc');\n\n    return (\n      <StyledCard>\n        <LargeListHeading>Payment History</LargeListHeading>\n\n        <ListContainer style={{ marginTop: '16px' }}>\n          {sortedInvoices &&\n            sortedInvoices.map(invoice => {\n              return <InvoiceListItem invoice={invoice} key={invoice.id} />;\n            })}\n        </ListContainer>\n      </StyledCard>\n    );\n  }\n}\n\nconst Invoices = compose(getUserInvoices, displayLoadingCard, connect())(\n  InvoicesPure\n);\n\nexport default Invoices;\n\n\n\n// WEBPACK FOOTER //\n// src/views/userSettings/components/invoices.js","import React, { Component } from 'react';\n//$FlowFixMe\nimport { connect } from 'react-redux';\nimport compose from 'recompose/compose';\nimport { Checkbox } from '../../../components/formElements';\nimport WebPushManager from '../../../helpers/web-push-manager';\nimport { removeItemFromStorage } from '../../../helpers/localStorage';\nimport { track } from '../../../helpers/events';\nimport { addToastWithTimeout } from '../../../actions/toasts';\nimport { subscribeToWebPush } from '../../../api/web-push-subscriptions';\nimport {\n  StyledCard,\n  LargeListHeading,\n  ListHeader,\n  ListContainer,\n  Notice,\n} from '../../../components/listItems/style';\nimport { EmailListItem } from '../style';\n\nclass NotificationSettings extends Component {\n  state = {\n    webPushBlocked: false,\n    subscription: null,\n  };\n\n  componentDidMount() {\n    WebPushManager.getPermissionState().then(result => {\n      if (result === 'denied') {\n        this.setState({\n          webPushBlocked: true,\n        });\n      }\n    });\n    WebPushManager.getSubscription().then(subscription => {\n      this.setState({\n        subscription: subscription || false,\n      });\n    });\n  }\n\n  subscribeToWebPush = () => {\n    track('browser push notifications', 'prompt triggered');\n    WebPushManager.subscribe()\n      .then(subscription => {\n        track('browser push notifications', 'subscribed');\n        removeItemFromStorage('webPushPromptDismissed');\n        this.setState({\n          subscription,\n          webPushBlocked: false,\n        });\n        return this.props.subscribeToWebPush(subscription);\n      })\n      .catch(err => {\n        track('browser push notifications', 'blocked');\n        console.log('error subscribing to browser notifications', err);\n        return this.props.dispatch(\n          addToastWithTimeout(\n            'error',\n            \"Oops, we couldn't enable browser notifications for you. Please try again!\"\n          )\n        );\n      });\n  };\n\n  unsubscribeFromWebPush = () => {\n    track('browser push notifications', 'unsubscription triggered');\n    WebPushManager.unsubscribe()\n      .then(result => {\n        if (result) {\n          track('browser push notifications', 'unsubscribe');\n          this.setState({\n            subscription: false,\n          });\n        } else {\n          return this.props.dispatch(\n            addToastWithTimeout(\n              'error',\n              \"Oops, we couldn't disable browser notifications for you. Please try again!\"\n            )\n          );\n        }\n      })\n      .catch(err => {\n        console.log('error unsubscribing from browser notifications', err);\n        return this.props.dispatch(\n          addToastWithTimeout(\n            'error',\n            \"Oops, we couldn't disable browser notifications for you. Please try again!\"\n          )\n        );\n      });\n  };\n\n  render() {\n    const { webPushBlocked, subscription } = this.state;\n    const onChange = !subscription\n      ? this.subscribeToWebPush\n      : this.unsubscribeFromWebPush;\n\n    return (\n      <StyledCard\n        smallOnly={this.props.smallOnly}\n        largeOnly={this.props.largeOnly}\n      >\n        <ListHeader>\n          <LargeListHeading>Notification Preferences</LargeListHeading>\n        </ListHeader>\n        <ListContainer>\n          <EmailListItem>\n            {subscription !== null && (\n              <Checkbox\n                checked={!!subscription}\n                disabled={webPushBlocked}\n                onChange={onChange}\n              >\n                Enable browser push notifications\n              </Checkbox>\n            )}\n            {webPushBlocked && (\n              <Notice>\n                <strong>\n                  You have blocked browser push notifications on this device!\n                </strong>{' '}\n                Unblock them by following{' '}\n                <a href=\"https://support.sendpulse.com/456261-How-to-Unblock-Web-Push-Notifications\">\n                  these steps\n                </a>.\n              </Notice>\n            )}\n          </EmailListItem>\n        </ListContainer>\n      </StyledCard>\n    );\n  }\n}\n\nexport default compose(subscribeToWebPush, connect())(NotificationSettings);\n\n\n\n// WEBPACK FOOTER //\n// src/views/userSettings/components/notificationSettings.js","import React from 'react';\n//$FlowFixMe\nimport { connect } from 'react-redux';\n//$FlowFixMe\nimport compose from 'recompose/compose';\nimport { BillingListItem } from '../../../components/listItems';\nimport { IconButton } from '../../../components/buttons';\nimport { UpsellUpgradeToPro } from '../../../components/upsell';\nimport { openModal } from '../../../actions/modals';\nimport { convertTimestampToDate } from '../../../helpers/utils';\nimport { getCurrentUserRecurringPayments } from '../../../api/user';\nimport { displayLoadingCard } from '../../../components/loading';\nimport {\n  StyledCard,\n  LargeListHeading,\n  ListHeader,\n  ListContainer,\n} from '../../../components/listItems/style';\n\nconst RecurringPaymentsList = ({ data: { user }, currentUser, dispatch }) => {\n  const openProModal = () => {\n    dispatch(openModal('UPGRADE_MODAL', { user: currentUser }));\n  };\n\n  if (!user || user === undefined) return null;\n\n  // make sure to only display active subs for now\n  const filteredRecurringPayments =\n    user.recurringPayments && user.recurringPayments.length > 0\n      ? user.recurringPayments.filter(sub => sub.status === 'active')\n      : [];\n\n  if (filteredRecurringPayments.length > 0) {\n    return (\n      <StyledCard>\n        <ListHeader>\n          <LargeListHeading>Pro</LargeListHeading>\n        </ListHeader>\n        <ListContainer>\n          {filteredRecurringPayments.map(payment => {\n            const amount = payment.amount / 100;\n            const timestamp = new Date(payment.createdAt * 1000).getTime();\n            const created = convertTimestampToDate(timestamp);\n            const meta = `$${amount}/month · Upgraded on ${created}`;\n            return (\n              <BillingListItem\n                key={payment.createdAt}\n                contents={{ name: payment.plan }}\n                withDescription={false}\n                meta={meta}\n              >\n                <IconButton glyph=\"settings\" onClick={openProModal} />\n              </BillingListItem>\n            );\n          })}\n        </ListContainer>\n      </StyledCard>\n    );\n  } else {\n    return <UpsellUpgradeToPro />;\n  }\n};\n\nexport default compose(\n  getCurrentUserRecurringPayments,\n  displayLoadingCard,\n  connect()\n)(RecurringPaymentsList);\n\n\n\n// WEBPACK FOOTER //\n// src/views/userSettings/components/recurringPaymentsList.js","import * as React from 'react';\n//$FlowFixMe\nimport compose from 'recompose/compose';\n//$FlowFixMe\nimport { connect } from 'react-redux';\nimport { track } from '../../helpers/events';\nimport AppViewWrapper from '../../components/appViewWrapper';\nimport Column from '../../components/column';\nimport { Loading } from '../../components/loading';\nimport { UserEditForm } from '../../components/editForm';\nimport RecurringPaymentsList from './components/recurringPaymentsList';\nimport EmailSettings from './components/emailSettings';\nimport NotificationSettings from './components/notificationSettings';\nimport Invoices from './components/invoices';\nimport { GetUserProfile } from './queries';\nimport { FlexCol } from '../../components/globals';\nimport ViewError from '../../components/viewError';\nimport Titlebar from '../titlebar';\nimport viewNetworkHandler from '../../components/viewNetworkHandler';\n\ntype Props = {\n  currentUser: Object,\n  data: {\n    user: Object,\n  },\n  isLoading: boolean,\n  hasError: boolean,\n};\n\nclass UserSettings extends React.Component<Props> {\n  componentDidMount() {\n    track('user', 'settings viewed', null);\n  }\n\n  render() {\n    const { data: { user }, data, isLoading, currentUser } = this.props;\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    // if the user has data in the store, but no user was returned from the query, we likely have a mismatch in their localstorage data and session cookie. In this case, when they hit the error view we'll automatically clear the user's localstorage so that on refresh they will be prompted to log in again\n    if (currentUser && !user) {\n      return (\n        <FlexCol style={{ flex: 'auto' }}>\n          <Titlebar\n            title={`No User Found`}\n            provideBack={true}\n            backRoute={`/`}\n            noComposer\n          />\n          <AppViewWrapper>\n            <ViewError\n              heading={'We ran into an error finding this user’s settings.'}\n              subheading={\n                'If you are trying to view your own settings, refresh the page below to log in again.'\n              }\n              clearStorage\n              refresh\n            />\n          </AppViewWrapper>\n        </FlexCol>\n      );\n    }\n\n    // if no data was found but the user is logged in, it means the person was trying to view a user settings page for a user that doesn't exist in the db\n    if (currentUser && !user) {\n      return (\n        <FlexCol style={{ flex: 'auto' }}>\n          <Titlebar\n            title={`User not found`}\n            provideBack={true}\n            backRoute={`/`}\n            noComposer\n          />\n          <AppViewWrapper>\n            <ViewError\n              heading={'We couldn’t find a user with this username.'}\n            />\n          </AppViewWrapper>\n        </FlexCol>\n      );\n    }\n\n    // if the user isn't logged in, or for some reason the user settings that were returned don't match the user id in the store, we show a warning error state\n    if (!currentUser || user.id !== currentUser.id) {\n      return (\n        <FlexCol style={{ flex: 'auto' }}>\n          <Titlebar\n            title={`No Permission`}\n            provideBack={true}\n            backRoute={`/`}\n            noComposer\n          />\n          <AppViewWrapper>\n            <ViewError\n              heading={`These aren’t the settings you’re looking for.`}\n              subheading={`You can only view your own user settings. Head on back.`}\n            />\n          </AppViewWrapper>\n        </FlexCol>\n      );\n    }\n\n    return (\n      <FlexCol style={{ flex: 'auto' }}>\n        <Titlebar\n          title={user.name}\n          subtitle={'Settings'}\n          provideBack={true}\n          backRoute={`/${user.username}`}\n          noComposer\n        />\n        <AppViewWrapper>\n          <Column type=\"secondary\">\n            <UserEditForm user={data} />\n            <EmailSettings smallOnly currentUser={user} />\n          </Column>\n\n          <Column type=\"primary\">\n            <RecurringPaymentsList data={data} currentUser={user} />\n            <EmailSettings largeOnly currentUser={user} />\n            {'serviceWorker' in navigator &&\n              'PushManager' in window && <NotificationSettings largeOnly />}\n            <Invoices />\n          </Column>\n        </AppViewWrapper>\n      </FlexCol>\n    );\n  }\n}\n\nconst map = state => ({\n  currentUser: state.users.currentUser,\n});\n\nexport default compose(connect(map), GetUserProfile, viewNetworkHandler)(\n  UserSettings\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/userSettings/index.js","// $FlowFixMe\nimport { graphql, gql } from 'react-apollo';\nimport { userInfoFragment } from '../../api/fragments/user/userInfo';\nimport { userSettingsFragment } from '../../api/fragments/user/userSettings';\n\nexport const GET_USER_PROFILE_QUERY = gql`\n  query getUserSettings($username: String) {\n    user(username: $username) {\n      ...userInfo\n      isPro\n      email\n      pendingEmail\n      ...userSettings\n    }\n  }\n  ${userInfoFragment}\n  ${userSettingsFragment}\n`;\n\nexport const GET_USER_PROFILE_OPTIONS = {\n  options: ({ match: { params: { username } } }) => ({\n    variables: {\n      username,\n    },\n    fetchPolicy: 'network-only',\n  }),\n};\n\nexport const GetUserProfile = graphql(\n  GET_USER_PROFILE_QUERY,\n  GET_USER_PROFILE_OPTIONS\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/userSettings/queries.js","// @flow\nimport styled from 'styled-components';\n\nexport const EmailListItem = styled.div`\n  padding: 8px 0 16px;\n  border-bottom: 2px solid ${props => props.theme.bg.wash};\n\n  &:last-of-type {\n    border-bottom: none;\n  }\n\n  input {\n    margin-right: 8px;\n  }\n`;\n\nexport const CheckboxContent = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const EmailForm = styled.form`\n  display: flex;\n  align-items: flex-end;\n\n  button {\n    align-self: flex-end;\n    margin-left: 16px;\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/views/userSettings/style.js"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AAKA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAFA;AADA;AADA;AAWA;AAfA;AAAA;AADA;AACA;AAmBA;;;;;;;;;;;;;;;;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAJA;AAMA;AACA;AAKA;AACA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;;;;;;;;;;;;;ACpBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA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A;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAKA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AAEA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AAEA;AACA;AACA;AADA;AAFA;AAMA;AAAA;AACA;AAAA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;;;AAqHA;AAAA;AACA;AADA;AAAA;AACA;AAGA;AAMA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC9eA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AACA;AASA;AACA;AACA;AACA;AACA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AALA;AAOA;AACA;AACA;AAC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","sourceRoot":""}