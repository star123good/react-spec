{"version":3,"file":"static/js/UserView.chunk.js","sources":["/Users/brianlovin/Sites/spectrum/node_modules/validator/lib/isByteLength.js","/Users/brianlovin/Sites/spectrum/node_modules/validator/lib/isEmail.js","/Users/brianlovin/Sites/spectrum/src/api/fragments/user/userThreads.js","/Users/brianlovin/Sites/spectrum/src/api/slackImport.js","/Users/brianlovin/Sites/spectrum/src/components/emailInvitationForm/index.js","/Users/brianlovin/Sites/spectrum/src/components/emailInvitationForm/style.js","/Users/brianlovin/Sites/spectrum/src/components/newActivityIndicator/index.js","/Users/brianlovin/Sites/spectrum/src/components/segmentedControl/index.js","/Users/brianlovin/Sites/spectrum/src/components/threadFeed/index.js","/Users/brianlovin/Sites/spectrum/src/components/threadFeed/style.js","/Users/brianlovin/Sites/spectrum/src/components/threadFeedCard/facePile.js","/Users/brianlovin/Sites/spectrum/src/components/threadFeedCard/formattedThreadLocation.js","/Users/brianlovin/Sites/spectrum/src/components/threadFeedCard/index.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/importSlack.js","/Users/brianlovin/Sites/spectrum/src/views/newCommunity/components/share/index.js","/Users/brianlovin/Sites/spectrum/src/views/newCommunity/components/share/style.js","/Users/brianlovin/Sites/spectrum/src/views/newCommunity/style.js","/Users/brianlovin/Sites/spectrum/src/views/user/components/communityList.js","/Users/brianlovin/Sites/spectrum/src/views/user/components/search.js","/Users/brianlovin/Sites/spectrum/src/views/user/index.js","/Users/brianlovin/Sites/spectrum/src/views/user/queries.js","/Users/brianlovin/Sites/spectrum/src/views/user/style.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isByteLength;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString2.default)(str);\n  var min = void 0;\n  var max = void 0;\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/validator/lib/isByteLength.js\n// module id = ./node_modules/validator/lib/isByteLength.js\n// module chunks = 1 2 3 4 6 7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _isByteLength = require('./isByteLength');\n\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\nfunction isEmail(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(displayName);\n    if (display_email) {\n      str = display_email[1];\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n\n  var lower_domain = domain.toLowerCase();\n  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n    user = user.replace(/\\./g, '').toLowerCase();\n  }\n\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 254 })) {\n    return false;\n  }\n\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\n    return false;\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n\n  var user_parts = user.split('.');\n  for (var i = 0; i < user_parts.length; i++) {\n    if (!pattern.test(user_parts[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/validator/lib/isEmail.js\n// module id = ./node_modules/validator/lib/isEmail.js\n// module chunks = 1 2 3 4 6 7","import { gql } from 'react-apollo';\nimport { threadInfoFragment } from '../thread/threadInfo';\n\nexport const userThreadsFragment = gql`\n  fragment userThreads on User {\n    threadConnection(first: 10, after: $after, kind: $kind) {\n      pageInfo {\n        hasNextPage\n        hasPreviousPage\n      }\n      edges {\n        cursor\n        node {\n          ...threadInfo\n        }\n      }\n    }\n  }\n  ${threadInfoFragment}\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/api/fragments/user/userThreads.js","// @flow\n// $FlowFixMe\nimport { graphql, gql } from 'react-apollo';\n\nconst getSlackImportOptions = {\n  options: ({ id }) => ({\n    variables: {\n      id,\n    },\n  }),\n};\n\nexport const getSlackImport = graphql(\n  gql`\n    query getSlackImport($id: ID!) {\n      community(id: $id) {\n        id\n        slackImport {\n          members\n          teamName\n          sent\n        }\n      }\n    }\n  `,\n  getSlackImportOptions\n);\n\nconst SEND_SLACK_INVITATIONS_MUTATION = gql`\n  mutation sendSlackInvites($input: SendSlackInvitesInput!) {\n    sendSlackInvites(input: $input) {\n      id\n      slackImport {\n        members\n        teamName\n        sent\n      }\n    }\n  }\n`;\nconst SEND_SLACK_INVITATIONS_OPTIONS = {\n  props: ({ input, mutate }) => ({\n    sendSlackInvites: input =>\n      mutate({\n        variables: {\n          input,\n        },\n      }),\n  }),\n};\n\nexport const sendSlackInvitationsMutation = graphql(\n  SEND_SLACK_INVITATIONS_MUTATION,\n  SEND_SLACK_INVITATIONS_OPTIONS\n);\n\n\n\n// WEBPACK FOOTER //\n// src/api/slackImport.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\nimport { addToastWithTimeout } from '../../actions/toasts';\nimport Icon from '../icons';\nimport isEmail from 'validator/lib/isEmail';\nimport { sendCommunityEmailInvitationsMutation } from '../../api/community';\nimport { sendChannelEmailInvitationMutation } from '../../api/channel';\nimport { Button } from '../buttons';\nimport { Error } from '../formElements';\nimport { SectionCardFooter } from '../settingsViews/style';\nimport {\n  EmailInviteForm,\n  EmailInviteInput,\n  AddRow,\n  RemoveRow,\n  CustomMessageToggle,\n  CustomMessageTextAreaStyles,\n} from './style';\n\ntype Props = {\n  id: string,\n  dispatch: Function,\n  currentUser: Object,\n  sendEmailInvites: Function,\n};\n\ntype ContactProps = {\n  email: string,\n  firstName: string,\n  lastName: string,\n  error: boolean,\n};\n\ntype State = {\n  isLoading: boolean,\n  contacts: Array<ContactProps>,\n  hasCustomMessage: boolean,\n  customMessageString: string,\n  customMessageError: boolean,\n};\n\nclass EmailInvitationForm extends React.Component<Props, State> {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      contacts: [\n        {\n          email: '',\n          firstName: '',\n          lastName: '',\n          error: false,\n        },\n        {\n          email: '',\n          firstName: '',\n          lastName: '',\n          error: false,\n        },\n        {\n          email: '',\n          firstName: '',\n          lastName: '',\n          error: false,\n        },\n      ],\n      hasCustomMessage: false,\n      customMessageString: '',\n      customMessageError: false,\n    };\n  }\n\n  getUniqueEmails = array => array.filter((x, i, a) => a.indexOf(x) === i);\n\n  sendInvitations = () => {\n    const {\n      contacts,\n      hasCustomMessage,\n      customMessageError,\n      customMessageString,\n    } = this.state;\n    const { dispatch, currentUser, sendEmailInvites } = this.props;\n\n    this.setState({ isLoading: true });\n\n    let validContacts = contacts\n      .filter(contact => contact.error === false)\n      .filter(contact => contact.email !== currentUser.email)\n      .filter(contact => contact.email.length > 0)\n      .filter(contact => isEmail(contact.email))\n      .map(({ error, ...contact }) => {\n        return { ...contact };\n      });\n\n    let customMessage =\n      hasCustomMessage && !customMessageError ? customMessageString : null;\n\n    // make sure to uniqify the emails so you can't enter on email multiple times\n    validContacts = this.getUniqueEmails(validContacts);\n\n    if (validContacts.length === 0) {\n      this.setState({\n        isLoading: false,\n      });\n\n      return dispatch(\n        addToastWithTimeout('error', 'No emails entered - try again!')\n      );\n    }\n\n    sendEmailInvites({\n      id: this.props.id,\n      contacts: validContacts,\n      customMessage,\n    })\n      .then(({ data: { sendEmailInvites } }) => {\n        this.setState({\n          isLoading: false,\n          contacts: [\n            {\n              email: '',\n              firstName: '',\n              lastName: '',\n              error: false,\n            },\n            {\n              email: '',\n              firstName: '',\n              lastName: '',\n              error: false,\n            },\n            {\n              email: '',\n              firstName: '',\n              lastName: '',\n              error: false,\n            },\n          ],\n          hasCustomMessage: false,\n          customMessageString: '',\n          customMessageError: false,\n        });\n\n        dispatch(\n          addToastWithTimeout(\n            'success',\n            `Invitations sent to ${validContacts.length > 1\n              ? `${validContacts.length} people`\n              : `${validContacts.length} person`}!`\n          )\n        );\n      })\n      .catch(err => {\n        this.setState({\n          isLoading: false,\n        });\n        dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  handleChange = (e, i, key) => {\n    const { contacts } = this.state;\n    contacts[i][key] = e.target.value;\n\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  addRow = () => {\n    const { contacts } = this.state;\n    contacts.push({\n      email: '',\n      firstName: '',\n      lastName: '',\n      error: false,\n    });\n\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  removeRow = index => {\n    const { contacts } = this.state;\n    contacts.splice(index, 1);\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  validate = (e, i) => {\n    const { contacts } = this.state;\n    if (!isEmail(e.target.value)) {\n      contacts[i].error = true;\n    } else {\n      contacts[i].error = false;\n    }\n\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  handleCustomMessageChange = e => {\n    const customMessageString = e.target.value;\n    if (customMessageString.length > 500) {\n      this.setState({\n        customMessageString,\n        customMessageError: true,\n      });\n    } else {\n      this.setState({\n        customMessageString,\n        customMessageError: false,\n      });\n    }\n  };\n\n  toggleCustomMessage = () => {\n    const { hasCustomMessage } = this.state;\n    this.setState({\n      hasCustomMessage: !hasCustomMessage,\n    });\n  };\n\n  render() {\n    const {\n      contacts,\n      isLoading,\n      hasCustomMessage,\n      customMessageString,\n      customMessageError,\n    } = this.state;\n\n    return (\n      <div>\n        {contacts.map((contact, i) => {\n          return (\n            <EmailInviteForm key={i}>\n              <EmailInviteInput\n                error={contact.error}\n                type=\"email\"\n                onBlur={e => this.validate(e, i)}\n                placeholder=\"Email address\"\n                value={contact.email}\n                onChange={e => this.handleChange(e, i, 'email')}\n              />\n              <EmailInviteInput\n                type=\"text\"\n                placeholder=\"First name (optional)\"\n                value={contact.firstName}\n                onChange={e => this.handleChange(e, i, 'firstName')}\n                hideOnMobile\n              />\n              <RemoveRow onClick={() => this.removeRow(i)}>\n                <Icon glyph=\"view-close\" size=\"16\" />\n              </RemoveRow>\n            </EmailInviteForm>\n          );\n        })}\n\n        <AddRow onClick={this.addRow}>+ Add another</AddRow>\n\n        <CustomMessageToggle onClick={this.toggleCustomMessage}>\n          <Icon glyph={hasCustomMessage ? 'view-close' : 'post'} size={20} />\n          {hasCustomMessage\n            ? 'Remove custom message'\n            : 'Optional: Add a custom message to your invitation'}\n        </CustomMessageToggle>\n\n        {hasCustomMessage && (\n          <Textarea\n            autoFocus\n            value={customMessageString}\n            placeholder=\"Write something sweet here...\"\n            style={{\n              ...CustomMessageTextAreaStyles,\n              border: customMessageError\n                ? '2px solid #E3353C'\n                : '2px solid #DFE7EF',\n            }}\n            onChange={this.handleCustomMessageChange}\n          />\n        )}\n\n        {hasCustomMessage &&\n          customMessageError && (\n            <Error>\n              Your custom invitation message can be up to 500 characters.\n            </Error>\n          )}\n\n        <SectionCardFooter>\n          <Button\n            loading={isLoading}\n            onClick={this.sendInvitations}\n            disabled={hasCustomMessage && customMessageError}\n          >\n            Send Invitations\n          </Button>\n        </SectionCardFooter>\n      </div>\n    );\n  }\n}\n\nconst map = state => ({ currentUser: state.users.currentUser });\n\nexport const CommunityInvitationForm = compose(\n  // $FlowIssue\n  connect(map),\n  sendCommunityEmailInvitationsMutation\n)(EmailInvitationForm);\n\nexport const ChannelInvitationForm = compose(\n  // $FlowIssue\n  connect(map),\n  sendChannelEmailInvitationMutation\n)(EmailInvitationForm);\n\n\n\n// WEBPACK FOOTER //\n// src/components/emailInvitationForm/index.js","import styled from 'styled-components';\n\nexport const EmailInviteForm = styled.div`\n  display: flex;\n  align-items: center;\n\n  &:first-of-type {\n    margin-top: 16px;\n  }\n`;\n\nexport const EmailInviteInput = styled.input`\n  display: flex;\n  flex: 1 1 50%;\n  padding: 8px 12px;\n  font-size: 14px;\n  border-radius: 4px;\n  border: 2px solid\n    ${props =>\n      props.error ? props.theme.warn.default : props.theme.bg.border};\n  margin-bottom: 8px;\n  margin-top: 8px;\n  margin-left: 4px;\n  margin-right: 4px;\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  &:focus {\n    border: 2px solid ${props => props.theme.brand.default};\n  }\n\n  @media screen and (max-width: 768px) {\n    display: ${props => (props.hideOnMobile ? 'none' : 'auto')};\n  }\n`;\n\nexport const AddRow = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  padding: 8px;\n  background: ${props => props.theme.bg.wash};\n  margin-top: 8px;\n  margin-bottom: 16px;\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  font-weight: 500;\n  border-radius: 4px;\n\n  &:hover {\n    color: ${props => props.theme.text.default};\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveRow = styled.div`\n  margin-left: 4px;\n  color: ${props => props.theme.text.alt};\n\n  &:hover {\n    cursor: pointer;\n    color: ${props => props.theme.text.default};\n  }\n`;\n\nexport const CustomMessageToggle = styled.h4`\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  margin-top: 16px;\n\n  &:hover {\n    color: ${props => props.theme.brand.default};\n    cursor: pointer;\n  }\n\n  div {\n    position: relative;\n    top: 5px;\n    margin-right: 4px;\n  }\n`;\n\nexport const CustomMessageTextAreaStyles = {\n  width: '100%',\n  borderRadius: '8px',\n  padding: '16px',\n  marginTop: '8px',\n  fontSize: '14px',\n};\n\n\n\n// WEBPACK FOOTER //\n// src/components/emailInvitationForm/style.js","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { clearActivityIndicator } from '../../actions/newActivityIndicator';\nimport styled from 'styled-components';\nimport { Gradient } from '../globals';\n\nconst Pill = styled.div`\n  padding: ${props => (props.refetching ? '8px' : '8px 16px')};\n  border-radius: 20px;\n  color: ${props => props.theme.text.reverse};\n  background: ${props =>\n    Gradient(props.theme.brand.alt, props.theme.brand.default)};};\n  font-size: 14px;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  align-self: center;\n  position: fixed;\n  top: 0;\n  opacity: ${props => (props.active ? '1' : '0')};\n  pointer-events: ${props => (props.active ? 'auto' : 'none')};\n  left: 50%;\n  z-index: 9999;\n  transform: translateX(-50%) translateY(${props =>\n    props.active ? '80px' : '60px'});\n  font-weight: 700;\n  box-shadow: 0 2px 8px rgba(0,0,0,0.3);\n  transition: all 0.2s ease-in-out;\n  cursor: pointer;\n\n  &:hover {\n    transform: translateX(-50%) translateY(78px);\n    transition: all 0.2s ease-in-out;\n  }\n\n  &:active {\n    transform: translateX(-50%) translateY(80px);\n    transition: all 0.1s ease-in-out;\n  }\n\n  @media (max-width: 768px) {\n    transform: translateX(-50%) translateY(${props =>\n      props.active ? '60px' : '40px'});\n\n    &:hover {\n      transform: translateX(-50%) translateY(58px);\n      transition: all 0.2s ease-in-out;\n    }\n\n    &:active {\n      transform: translateX(-50%) translateY(60px);\n      transition: all 0.1s ease-in-out;\n    }\n  }\n`;\n\nconst scrollTo = (element, to, duration) => {\n  if (duration < 0) return;\n  const difference = to - element.scrollTop;\n  const perTick = difference / duration * 2;\n\n  setTimeout(() => {\n    element.scrollTop = element.scrollTop + perTick;\n    scrollTo(element, to, duration - 2);\n  }, 10);\n};\n\nclass Indicator extends Component {\n  state: {\n    elem: any,\n  };\n\n  constructor() {\n    super();\n\n    this.state = {\n      elem: null,\n    };\n  }\n\n  componentDidUpdate(prevProps) {\n    if (prevProps !== this.props) {\n      this.setState({\n        // NOTE(@mxstbr): This is super un-reacty but it works. This refers to\n        // the AppViewWrapper which is the scrolling part of the site.\n        elem: document.getElementById(this.props.elem),\n      });\n    }\n  }\n\n  componentDidMount() {\n    const elem = document.getElementById(this.props.elem);\n    this.setState({\n      // NOTE(@mxstbr): This is super un-reacty but it works. This refers to\n      // the AppViewWrapper which is the scrolling part of the site.\n      elem,\n    });\n\n    // if the component mounted while the user is scrolled to the top, immediately clear the redux store of the activity indicator - since the user can see the top of the feed, they don't need an indicator\n    if (elem.scrollTop < window.innerHeight / 2) {\n      this.props.dispatch(clearActivityIndicator());\n    }\n  }\n\n  componentWillUnmount() {\n    // when the component unmounts, clear the state so that at next mount we will always get a new scrollTop position for the scroll element\n    this.setState({\n      elem: null,\n    });\n  }\n\n  clearActivityIndicator = () => {\n    // if the user clicks on the new activity indicator, scroll them to the top of the feed and dismiss the indicator\n    setTimeout(() => this.props.dispatch(clearActivityIndicator()), 120);\n    scrollTo(this.state.elem, 0, 80);\n  };\n\n  render() {\n    const { elem } = this.state;\n    let active = false;\n\n    // if the scroll element exists, and the user has scrolled at least half of the screen (e.g. the top of the feed is out of view), then the user should see a new activity indicator\n    if (elem) {\n      active = elem.scrollTop > window.innerHeight / 2;\n    }\n\n    return (\n      <Pill active={active} onClick={this.clearActivityIndicator}>\n        New conversations!\n      </Pill>\n    );\n  }\n}\n\nexport default connect()(Indicator);\n\n\n\n// WEBPACK FOOTER //\n// src/components/newActivityIndicator/index.js","// @flow\nimport styled, { css } from 'styled-components';\nimport { FlexRow } from '../globals';\n\nexport const SegmentedControl = styled(FlexRow)`\n  align-self: stretch;\n  margin: 0 32px;\n  margin-top: 16px;\n  border-bottom: 2px solid ${props => props.theme.bg.border};\n  align-items: stretch;\n  min-height: 48px;\n\n  @media (max-width: 768px) {\n    background-color: ${props => props.theme.bg.default};\n    align-self: stretch;\n    margin: 0;\n    margin-bottom: 2px;\n  }\n`;\n\nexport const Segment = styled(FlexRow)`\n  padding: 8px 24px;\n  justify-content: center;\n  align-items: center;\n  text-align: center;\n  line-height: 1;\n  font-size: 18px;\n  font-weight: 500;\n  color: ${props =>\n    props.selected ? props.theme.text.default : props.theme.text.alt};\n  cursor: pointer;\n  position: relative;\n  top: 2px;\n  border-bottom: 2px solid\n    ${props => (props.selected ? props.theme.text.default : 'transparent')};\n\n  .icon {\n    margin-right: 8px;\n  }\n\n  ${props =>\n    props.selected &&\n    css`\n      border-bottom: 2px solid ${props => props.theme.bg.reverse};\n    `};\n\n  &:hover {\n    color: ${props => props.theme.text.default};\n  }\n\n  @media (max-width: 768px) {\n    flex: auto;\n    justify-content: center;\n    margin-top: 32px;\n    text-align: center;\n\n    .icon {\n      margin-right: 0;\n    }\n  }\n`;\n\nexport const DesktopSegment = styled(Segment)`\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const MobileSegment = styled(Segment)`\n  @media (min-width: 768px) {\n    display: none;\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/segmentedControl/index.js","import React, { Component } from 'react';\n//$FlowFixMe\nimport styled from 'styled-components';\n//$FlowFixMe\nimport compose from 'recompose/compose';\n// NOTE(@mxstbr): This is a custom fork published of off this (as of this writing) unmerged PR: https://github.com/CassetteRocks/react-infinite-scroller/pull/38\n// I literally took it, renamed the package.json and published to add support for scrollElement since our scrollable container is further outside\nimport InfiniteList from 'react-infinite-scroller-with-scroll-element';\nimport { connect } from 'react-redux';\nimport { ImportSlackWithoutCard } from '../../views/communitySettings/components/importSlack';\nimport { CommunityInvitationForm } from '../emailInvitationForm';\nimport Share from '../../views/newCommunity/components/share';\nimport ThreadFeedCard from '../threadFeedCard';\nimport { Card } from '../card';\nimport { NullCard } from '../upsell';\nimport { LoadingThread } from '../loading';\nimport { Divider } from './style';\nimport NewActivityIndicator from '../../components/newActivityIndicator';\nimport ViewError from '../viewError';\n\nconst NullState = () => (\n  <NullCard\n    bg=\"post\"\n    heading={`Sorry, no threads here yet...`}\n    copy={`But you could start one!`}\n  />\n);\n\nconst UpsellState = ({ community }) => {\n  return (\n    <NullCard\n      bg=\"onboarding\"\n      repeat\n      heading={'Every community has to start somewhere...'}\n      copy={`${community.name} just needs more friends - invite people to your community to get a conversation started!`}\n    >\n      <Share community={community} onboarding={false} />\n      <Divider />\n      <CommunityInvitationForm id={community.id} />\n      <Divider />\n      <ImportSlackWithoutCard community={community} id={community.id} />\n    </NullCard>\n  );\n};\n\nconst Threads = styled.div`\n  min-width: 100%;\n\n  button {\n    align-self: center;\n    margin: auto;\n  }\n\n  @media (max-width: 768px) {\n  }\n`;\n\n/*\n  The thread feed always expects a prop of 'threads' - this means that in\n  the Apollo query contructor, you will need to map a new prop called 'threads'\n  to return whatever threads we're fetching (community -> threadsConnection)\n\n  See 'views/community/queries.js' for an example of the prop mapping in action\n*/\nclass ThreadFeedPure extends Component {\n  state: {\n    scrollElement: any,\n    subscription: ?Function,\n  };\n\n  constructor() {\n    super();\n    this.state = {\n      scrollElement: null,\n      subscription: null,\n    };\n  }\n\n  subscribe = () => {\n    this.setState({\n      subscription:\n        this.props.data.subscribeToUpdatedThreads &&\n        this.props.data.subscribeToUpdatedThreads(),\n    });\n  };\n\n  unsubscribe = () => {\n    const { subscription } = this.state;\n    if (subscription) {\n      // This unsubscribes the subscription\n      subscription();\n    }\n  };\n\n  shouldComponentUpdate(nextProps) {\n    const curr = this.props;\n    // fetching more\n    if (curr.data.networkStatus === 7 && nextProps.data.networkStatus === 3)\n      return false;\n    return true;\n  }\n\n  componentWillUnmount() {\n    this.unsubscribe();\n  }\n\n  componentDidMount() {\n    this.setState({\n      // NOTE(@mxstbr): This is super un-reacty but it works. This refers to\n      // the AppViewWrapper which is the scrolling part of the site.\n      scrollElement: document.getElementById('scroller-for-thread-feed'),\n    });\n    this.subscribe();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      !prevProps.data.thread &&\n      this.props.data.threads &&\n      this.props.data.threads.length === 0\n    ) {\n      // if there are no threads, tell the parent container so that we can render upsells to community owners in the parent container\n      if (this.props.setThreadsStatus) {\n        this.props.setThreadsStatus();\n      }\n\n      if (this.props.hasThreads) {\n        this.props.hasThreads();\n      }\n\n      if (this.props.hasNoThreads) {\n        this.props.hasNoThreads();\n      }\n    }\n  }\n\n  render() {\n    const {\n      data: { threads, networkStatus, error },\n      viewContext,\n      newActivityIndicator,\n    } = this.props;\n\n    const { scrollElement } = this.state;\n    const dataExists = threads && threads.length > 0;\n    const isCommunityMember =\n      this.props.community &&\n      (this.props.community.communityPermissions.isMember ||\n        this.props.community.communityPermissions.isOwner ||\n        this.props.community.communityPermissions.isModerator) &&\n      !this.props.community.communityPermissions.isBlocked;\n\n    const threadNodes = dataExists\n      ? threads.slice().map(thread => thread.node)\n      : [];\n\n    let filteredThreads = threadNodes;\n    if (\n      this.props.data.community &&\n      this.props.data.community.watercooler &&\n      this.props.data.community.watercooler.id\n    ) {\n      filteredThreads = filteredThreads.filter(\n        t => t.id !== this.props.data.community.watercooler.id\n      );\n    }\n    if (\n      this.props.data.community &&\n      this.props.data.community.pinnedThread &&\n      this.props.data.community.pinnedThread.id\n    ) {\n      filteredThreads = filteredThreads.filter(\n        t => t.id !== this.props.data.community.pinnedThread.id\n      );\n    }\n\n    if (dataExists) {\n      return (\n        <Threads data-e2e-id=\"thread-feed\">\n          {newActivityIndicator && (\n            <NewActivityIndicator elem=\"scroller-for-thread-feed\" />\n          )}\n\n          {this.props.data.community &&\n            this.props.data.community.pinnedThread &&\n            this.props.data.community.pinnedThread.id && (\n              <ThreadFeedCard\n                data={this.props.data.community.pinnedThread}\n                viewContext={viewContext}\n                isPinned={true}\n              />\n            )}\n\n          {this.props.data.community &&\n            this.props.data.community.watercooler &&\n            this.props.data.community.watercooler.id && (\n              <ThreadFeedCard\n                data={this.props.data.community.watercooler}\n                viewContext={viewContext}\n              />\n            )}\n\n          <InfiniteList\n            pageStart={0}\n            loadMore={this.props.data.fetchMore}\n            hasMore={this.props.data.hasNextPage}\n            loader={<LoadingThread />}\n            useWindow={false}\n            initialLoad={false}\n            scrollElement={scrollElement}\n            threshold={750}\n          >\n            {filteredThreads.map(thread => {\n              return (\n                <ThreadFeedCard\n                  key={thread.id}\n                  data={thread}\n                  viewContext={viewContext}\n                />\n              );\n            })}\n          </InfiniteList>\n        </Threads>\n      );\n    }\n\n    if (networkStatus <= 2) {\n      return (\n        <Threads>\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n          <LoadingThread />\n        </Threads>\n      );\n    }\n\n    if (networkStatus === 8 || error) {\n      return (\n        <Card>\n          <ViewError\n            heading={'We ran into an issue loading the feed'}\n            subheading={\n              'Try refreshing the page below. If you’re still seeing this error, you can email us at hi@spectrum.chat.'\n            }\n            refresh\n          />\n        </Card>\n      );\n    }\n\n    if (this.props.isNewAndOwned) {\n      return <UpsellState community={this.props.community} />;\n    } else if (isCommunityMember || this.props.viewContext === 'channel') {\n      return <NullState />;\n    } else {\n      return null;\n    }\n  }\n}\n\nconst map = state => ({\n  newActivityIndicator: state.newActivityIndicator.hasNew,\n});\nconst ThreadFeed = compose(connect(map))(ThreadFeedPure);\n\nexport default ThreadFeed;\n\n\n\n// WEBPACK FOOTER //\n// src/components/threadFeed/index.js","// @flow\n// $FlowFixMe\nimport styled from 'styled-components';\nimport { OutlineButton } from '../buttons';\n\nexport const FetchMoreButton = styled(OutlineButton)`\n  width: 100%;\n  padding: 16px 0;\n\n  @media (max-width: 768px) {\n    padding: 32px 0;\n    border-radius: 0;\n    background: #fff;\n    font-size: 16px;\n    font-weight: 600;\n    color: ${props => props.theme.brand.default};\n    border: none;\n    box-shadow: none;\n    border-top: 2px solid ${props => props.theme.bg.border};\n\n    &:hover {\n      background: ${props => props.theme.bg.wash};\n      border-radius: 0;\n      box-shadow: none;\n    }\n  }\n`;\n\nexport const Divider = styled.div`\n  border-bottom: 2px solid ${props => props.theme.bg.border};\n  width: 100%;\n  display: block;\n  padding-top: 24px;\n  margin-bottom: 24px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/threadFeed/style.js","import React from 'react';\nimport Avatar from '../../components/avatar';\nimport { ParticipantHeads, ParticipantCount, Creator } from './style';\n\nconst messageAvatars = list => {\n  const avatarList = list.slice(0, 5);\n\n  return avatarList.map(participant => (\n    <Avatar\n      size={32}\n      isOnline={participant.isOnline}\n      link={participant.username ? `/users/${participant.username}` : null}\n      src={participant.profilePhoto}\n      role=\"presentation\"\n      key={participant.id}\n      user={participant}\n    />\n  ));\n};\n\nconst FacePile = props => {\n  const { data: { creator, participants } } = props;\n  const participantList = participants.filter(\n    participant => participant.id !== creator.id\n  );\n  const participantCount = participants.length;\n\n  return (\n    <ParticipantHeads>\n      <Creator role=\"presentation\">\n        <Avatar\n          size={32}\n          user={creator}\n          isOnline={creator.isOnline}\n          link={creator.username ? `/users/${creator.username}` : null}\n          src={creator.profilePhoto}\n          role=\"presentation\"\n          key={creator.id}\n        />\n      </Creator>\n      {messageAvatars(participantList)}\n      {participantCount > 6 && (\n        <ParticipantCount>{`+${participantCount - 6}`}</ParticipantCount>\n      )}\n    </ParticipantHeads>\n  );\n};\n\nexport default FacePile;\n\n\n\n// WEBPACK FOOTER //\n// src/components/threadFeedCard/facePile.js","import React from 'react';\n// $FlowFixMe\nimport Link from 'src/components/link';\nimport Icon from '../../components/icons';\nimport Avatar from '../../components/avatar';\nimport {\n  ThreadContext,\n  ThreadContextAvatar,\n  ThreadContextMeta,\n  Location,\n  Lock,\n} from './style';\n\nconst FormattedThreadLocation = props => {\n  const needsCommunityDetails =\n    props.viewContext === 'dashboard' || props.viewContext === 'profile';\n\n  const needsChannelDetails =\n    props.viewContext === 'dashboard' ||\n    props.viewContext === 'profile' ||\n    props.viewContext === 'community';\n\n  return (\n    <ThreadContext>\n      {needsCommunityDetails && (\n        <ThreadContextAvatar>\n          <Avatar\n            community={props.data.community}\n            size={20}\n            radius={8}\n            src={props.data.community.profilePhoto}\n          />\n        </ThreadContextAvatar>\n      )}\n      <ThreadContextMeta>\n        {(needsCommunityDetails || needsChannelDetails) && (\n            <Location>\n              {needsCommunityDetails && (\n                <Link to={`/${props.data.community.slug}`}>\n                  {props.data.community.name}\n                </Link>\n              )}\n              {needsCommunityDetails &&\n                needsChannelDetails && <span>{' / '}</span>}\n              {needsChannelDetails && (\n                <Link\n                  to={`/${props.data.community.slug}/${props.data.channel\n                    .slug}`}\n                >\n                  {props.data.channel.isPrivate && (\n                    <Lock>\n                      <Icon\n                        glyph=\"private\"\n                        tipText={'Private channel'}\n                        tipLocation=\"top-right\"\n                        size={12}\n                      />\n                    </Lock>\n                  )}\n                  {props.data.channel.name}\n                </Link>\n              )}\n            </Location>\n          )}\n      </ThreadContextMeta>\n    </ThreadContext>\n  );\n};\n\nexport default FormattedThreadLocation;\n\n\n\n// WEBPACK FOOTER //\n// src/components/threadFeedCard/formattedThreadLocation.js","// @flow\nimport React from 'react';\nimport truncate from 'shared/truncate';\nimport compose from 'recompose/compose';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport Link from 'src/components/link';\nimport { LinkPreview } from '../../components/linkPreview';\nimport Icon from '../../components/icons';\nimport FacePile from './facePile';\nimport FormattedThreadLocation from './formattedThreadLocation';\nimport {\n  StyledThreadFeedCard,\n  CardContent,\n  CardLink,\n  Title,\n  MessageCount,\n  Attachments,\n  Pinned,\n  PinnedBanner,\n  PinnedIconWrapper,\n  ContentInfo,\n  MetaNew,\n} from './style';\n\nconst ThreadFeedCardPure = (props: Object): React$Element<any> => {\n  const { location: { pathname }, data: { attachments, participants } } = props;\n  const attachmentsExist = attachments && attachments.length > 0;\n  const participantsExist = participants && participants.length > 0;\n\n  return (\n    <StyledThreadFeedCard>\n      <CardLink\n        to={{\n          pathname: pathname,\n          search: `?thread=${props.data.id}`,\n        }}\n      />\n      <CardContent>\n        <FormattedThreadLocation {...props} />\n        <Link\n          to={{\n            pathname: pathname,\n            search: `?thread=${props.data.id}`,\n          }}\n        >\n          <Title>{truncate(props.data.content.title, 80)}</Title>\n          {props.isPinned && (\n            <Pinned>\n              <PinnedBanner />\n              <PinnedIconWrapper>\n                <Icon glyph=\"pin-fill\" size={24} />\n              </PinnedIconWrapper>\n            </Pinned>\n          )}\n        </Link>\n        {attachmentsExist &&\n          attachments.map((attachment, i) => {\n            if (attachment.attachmentType === 'linkPreview') {\n              return (\n                <Attachments key={i}>\n                  <LinkPreview\n                    trueUrl={attachment.data.trueUrl}\n                    data={JSON.parse(attachment.data)}\n                    size={'small'}\n                    editable={false}\n                    margin={'8px 0 12px'}\n                  />\n                </Attachments>\n              );\n            } else {\n              return null;\n            }\n          })}\n        <ContentInfo>\n          {participantsExist && <FacePile {...props} />}\n          {props.data.messageCount > 0 ? (\n            <MessageCount>\n              <Icon size={20} glyph=\"message-fill\" />\n              <span>{props.data.messageCount}</span>\n            </MessageCount>\n          ) : (\n            <MetaNew>\n              <Icon size={20} glyph=\"notification-fill\" />\n              <span>Fresh thread!</span>\n            </MetaNew>\n          )}\n        </ContentInfo>\n      </CardContent>\n    </StyledThreadFeedCard>\n  );\n};\n\nconst ThreadFeedCard = compose(withRouter)(ThreadFeedCardPure);\nexport default connect()(ThreadFeedCard);\n\n\n\n// WEBPACK FOOTER //\n// src/components/threadFeedCard/index.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\nimport { addToastWithTimeout } from '../../../actions/toasts';\nimport {\n  getSlackImport,\n  sendSlackInvitationsMutation,\n} from '../../../api/slackImport';\nimport { Loading } from '../../../components/loading';\nimport { Button } from '../../../components/buttons';\nimport Icon from '../../../components/icons';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { CustomMessageToggle, CustomMessageTextAreaStyles } from '../style';\nimport {\n  SectionCard,\n  SectionCardFooter,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { Description, Notice } from '../../../components/listItems/style';\nimport { Error } from '../../../components/formElements';\n\ntype Props = {\n  data: {\n    community: Object,\n    startPolling: Function,\n    stopPolling: Function,\n  },\n  hasInvitedPeople: Function,\n  sendSlackInvites: Function,\n  dispatch: Function,\n  isLoading: boolean,\n};\n\ntype State = {\n  isSendingInvites: boolean,\n  hasCustomMessage: boolean,\n  customMessageString: string,\n  customMessageError: boolean,\n};\n\nclass ImportSlack extends React.Component<Props, State> {\n  constructor() {\n    super();\n\n    this.state = {\n      isSendingInvites: false,\n      hasCustomMessage: false,\n      customMessageString: '',\n      customMessageError: false,\n    };\n  }\n\n  sendInvites = () => {\n    const { community } = this.props.data;\n    const {\n      customMessageError,\n      customMessageString,\n      hasCustomMessage,\n    } = this.state;\n\n    this.props.hasInvitedPeople && this.props.hasInvitedPeople();\n\n    let customMessage =\n      hasCustomMessage && !customMessageError ? customMessageString : null;\n\n    this.setState({\n      isSendingInvites: true,\n    });\n\n    this.props\n      .sendSlackInvites({\n        id: community.id,\n        customMessage,\n      })\n      .then(({ data: { sendSlackInvites } }) => {\n        this.setState({\n          isSendingInvites: false,\n          hasCustomMessage: false,\n        });\n        this.props.dispatch(\n          addToastWithTimeout('success', 'Your invitations are being sent!')\n        );\n      })\n      .catch(err => {\n        this.setState({\n          isSendingInvites: false,\n        });\n        this.props.dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  handleChange = e => {\n    const customMessageString = e.target.value;\n    if (customMessageString.length > 500) {\n      this.setState({\n        customMessageString,\n        customMessageError: true,\n      });\n    } else {\n      this.setState({\n        customMessageString,\n        customMessageError: false,\n      });\n    }\n  };\n\n  toggleCustomMessage = () => {\n    const { hasCustomMessage } = this.state;\n    this.setState({\n      hasCustomMessage: !hasCustomMessage,\n    });\n  };\n\n  render() {\n    const {\n      data: { community, startPolling, stopPolling },\n      isLoading,\n    } = this.props;\n    const {\n      isSendingInvites,\n      customMessageString,\n      hasCustomMessage,\n      customMessageError,\n    } = this.state;\n\n    if (community) {\n      // if no import has been created yet, we won't have a team name or a record at all\n      const noImport =\n        !community.slackImport || !community.slackImport.teamName;\n      // if an import has been created, but does not have members data yet\n      const partialImport =\n        community.slackImport &&\n        community.slackImport.teamName &&\n        !community.slackImport.members;\n      // if an import has been created and we have members\n      const fullImport = community.slackImport && community.slackImport.members;\n      const hasAlreadyBeenSent = fullImport && community.slackImport.sent;\n\n      const url = this.props.isOnboarding\n        ? `https://slack.com/oauth/authorize?&client_id=201769987287.200380534417&scope=users:read.email,users:read,team:read,admin&state=${community.id}&redirect_uri=${process\n            .env.NODE_ENV === 'development'\n            ? 'http://localhost:3001/api/slack/onboarding'\n            : 'https://spectrum.chat/api/slack/onboarding'}`\n        : `https://slack.com/oauth/authorize?&client_id=201769987287.200380534417&scope=users:read.email,users:read,team:read,admin&state=${community.id}&redirect_uri=${process\n            .env.NODE_ENV === 'development'\n            ? 'http://localhost:3001/api/slack'\n            : 'https://spectrum.chat/api/slack'}`;\n\n      if (noImport) {\n        return (\n          <div>\n            <SectionTitle>Invite a Slack Team</SectionTitle>\n            <Description>\n              Easily invite your team from an existing Slack team to Spectrum.\n              Get started by connecting your team below.{' '}\n            </Description>\n            <Notice>\n              <strong>Note:</strong> We will not invite any of your team members\n              until you’re ready. We will prompt for admin access to ensure that\n              you own the Slack team.\n            </Notice>\n            <SectionCardFooter>\n              <a href={url}>\n                <Button>Connect a Slack Team</Button>\n              </a>\n            </SectionCardFooter>\n          </div>\n        );\n      } else if (partialImport) {\n        startPolling(5000);\n        return (\n          <div>\n            <SectionTitle>Invite a Slack Team</SectionTitle>\n            <SectionCardFooter>\n              <Button loading>Connecting with Slack...</Button>\n            </SectionCardFooter>\n          </div>\n        );\n      } else if (fullImport) {\n        stopPolling();\n        const members = JSON.parse(community.slackImport.members);\n        const teamName = community.slackImport.teamName;\n        const count = members.length.toLocaleString();\n\n        if (hasAlreadyBeenSent) {\n          return (\n            <div>\n              <SectionTitle>Invite your Slack team</SectionTitle>\n              <Description>\n                This community has been connected to the{' '}\n                <strong>{teamName}</strong> Slack team. We found {count} members\n                with email addresses - you have already invited them to join\n                your community.\n              </Description>\n              <SectionCardFooter>\n                <Button disabled>Invites sent to {count} people</Button>\n              </SectionCardFooter>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <SectionTitle>Invite a Slack Team</SectionTitle>\n              <Description>\n                This community has been connected to the{' '}\n                <strong>{teamName}</strong> Slack team. We found {count} members\n                with email addresses - you can invite them to your Spectrum\n                community in one click.\n              </Description>\n\n              <CustomMessageToggle onClick={this.toggleCustomMessage}>\n                <Icon\n                  glyph={hasCustomMessage ? 'view-close' : 'post'}\n                  size={20}\n                />\n                {hasCustomMessage\n                  ? 'Remove custom message'\n                  : 'Optional: Add a custom message to your invitation'}\n              </CustomMessageToggle>\n\n              {hasCustomMessage && (\n                <Textarea\n                  autoFocus\n                  value={customMessageString}\n                  placeholder=\"Write something sweet here...\"\n                  style={{\n                    ...CustomMessageTextAreaStyles,\n                    border: customMessageError\n                      ? '1px solid #E3353C'\n                      : '1px solid #DFE7EF',\n                  }}\n                  onChange={this.handleChange}\n                />\n              )}\n\n              {hasCustomMessage &&\n                customMessageError && (\n                  <Error>\n                    Your custom invitation message can be up to 500 characters.\n                  </Error>\n                )}\n\n              <SectionCardFooter>\n                <Button\n                  gradientTheme=\"success\"\n                  onClick={this.sendInvites}\n                  loading={isSendingInvites}\n                  disabled={hasCustomMessage && customMessageError}\n                >\n                  Invite {count} people to Spectrum\n                </Button>\n              </SectionCardFooter>\n            </div>\n          );\n        }\n      }\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    return null;\n  }\n}\n\nconst ImportSlackCard = props => (\n  <SectionCard>\n    <ImportSlack {...props} />\n  </SectionCard>\n);\n\nconst ImportSlackNoCard = props => <ImportSlack {...props} />;\n\nexport const ImportSlackWithoutCard = compose(\n  sendSlackInvitationsMutation,\n  getSlackImport,\n  connect(),\n  viewNetworkHandler\n)(ImportSlackNoCard);\nexport const ImportSlackWithCard = compose(\n  sendSlackInvitationsMutation,\n  getSlackImport,\n  connect(),\n  viewNetworkHandler\n)(ImportSlackCard);\nexport default ImportSlackWithCard;\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/importSlack.js","// @flow\nimport React from 'react';\nimport { withRouter } from 'react-router';\nimport compose from 'recompose/compose';\nimport { OutlineButton, Button } from '../../../../components/buttons';\nimport { ButtonRow, InputRow, Input } from './style';\nimport { Description } from '../../style';\nimport { Loading } from '../../../../components/loading';\nimport Clipboard from 'react-clipboard.js';\n\nconst Share = ({ community, history, onboarding }) => {\n  if (!community) return <Loading />;\n\n  return (\n    <div>\n      <ButtonRow>\n        <a\n          href={`https://www.facebook.com/sharer/sharer.php?u=https://spectrum.chat/${community.slug}&t=Come hang out with me in the ${community.name} community on Spectrum!`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Button\n            icon=\"facebook\"\n            gradientTheme={'none'}\n            hoverColor={'social.facebook.default'}\n            color={'social.facebook.default'}\n          >\n            Share on Facebook\n          </Button>\n        </a>\n        <a\n          href={`https://twitter.com/share?text=Come hang out with me in the ${community.name} community on @withspectrum!&url=https://spectrum.chat/${community.slug}`}\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          <Button\n            icon=\"twitter\"\n            gradientTheme={'none'}\n            hoverColor={'social.twitter.default'}\n            color={'social.twitter.default'}\n          >\n            Share on Twitter\n          </Button>\n        </a>\n      </ButtonRow>\n\n      <Clipboard\n        component=\"div\"\n        data-clipboard-text={`https://spectrum.chat/${community.slug}`}\n      >\n        <InputRow>\n          <Input>{`https://spectrum.chat/${community.slug}`}</Input>\n        </InputRow>\n      </Clipboard>\n\n      {onboarding && (\n        <ButtonRow>\n          <Description centered>\n            You're ready to start building your community - you can view it now,\n            or manage your settings at any time\n          </Description>\n          <a href={`/${community.slug}/settings`}>\n            <OutlineButton>View community settings</OutlineButton>\n          </a>\n          <a href={`/${community.slug}`}>\n            <Button>Go to my community</Button>\n          </a>\n        </ButtonRow>\n      )}\n    </div>\n  );\n};\n\nexport default compose(withRouter)(Share);\n\n\n\n// WEBPACK FOOTER //\n// src/views/newCommunity/components/share/index.js","// @flow\n// $FlowFixMe\nimport styled from 'styled-components';\nimport { zIndex } from '../../../../components/globals';\n\nexport const ButtonRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  flex-wrap: wrap;\n  margin-top: 16px;\n  justify-content: center;\n\n  a,\n  button {\n    margin-top: 16px;\n  }\n\n  a:first-of-type,\n  button:first-of-type {\n    margin-left: 0;\n    margin-right: 16px;\n  }\n\n  a > button:first-of-type {\n    margin: 0;\n  }\n`;\n\nexport const InputRow = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex: 1;\n  flex-wrap: wrap;\n  margin: 16px;\n  justify-content: center;\n  position: relative;\n  max-width: 100%;\n`;\n\nexport const Input = styled.div`\n  padding: 4px 12px;\n  border-radius: 8px;\n  border: 2px solid ${props => props.theme.bg.border};\n  background: #fff;\n  font-weight: 500;\n  color: ${props => props.theme.text.alt};\n  padding-right: 72px;\n  position: relative;\n  display: flex;\n  align-self: center;\n  max-width: 100%;\n  z-index: ${zIndex.form};\n\n  &:hover {\n    cursor: pointer;\n\n    &:after {\n      background: ${props => props.theme.bg.wash};\n    }\n  }\n\n  &:after {\n    content: 'COPY';\n    font-size: 11px;\n    font-weight: 600;\n    color: ${props => props.theme.brand.default};\n    text-transform: uppercase;\n    position: absolute;\n    top: 0;\n    right: 0;\n    bottom: 0;\n    background: #fff;\n    padding: 4px 12px;\n    border-left: 2px solid ${props => props.theme.bg.border};\n    border-radius: 0 8px 8px 0;\n    z-index: ${zIndex.form + 1};\n    line-height: 2.1;\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/views/newCommunity/components/share/style.js","// @flow\n// $FlowFixMe\nimport styled from 'styled-components';\nimport Card from '../../components/card';\n\nexport const Container = styled(Card)`\n  background-image: ${props =>\n    props.bg ? `url('/img/fills/${props.bg}.svg')` : 'none'};\n  background-color: #fff;\n  background-size: 110% auto;\n  background-repeat: ${props => (props.repeat ? 'repeat-y' : 'no-repeat')};\n  background-position: ${props =>\n    props.repeat ? 'center top' : 'center center'};\n  width: 100%;\n  height: auto;\n  min-height: 160px;\n  display: flex;\n`;\n\nexport const Actions = styled.div`\n  display: flex;\n  justify-content: space-between;\n  border-top: 2px solid ${props => props.theme.bg.border};\n  padding: 24px;\n  background: #fff;\n  border-radius: 0 0 12px 12px;\n`;\n\nexport const Title = styled.h1`\n  font-weight: 900;\n  color: ${props => props.theme.text.default};\n  font-size: 24px;\n  letter-spacing: -0.1px;\n  padding: 24px 24px 8px;\n  text-align: ${props => (props.centered ? 'center' : 'left')};\n`;\n\nexport const Description = styled.h3`\n  font-size: 16px;\n  font-weight: 500;\n  color: ${props => props.theme.text.alt};\n  line-height: 1.4;\n  padding: 8px 24px 16px;\n  text-align: ${props => (props.centered ? 'center' : 'left')};\n`;\n\nexport const Divider = styled.div`\n  border-bottom: 2px solid ${props => props.theme.bg.border};\n  width: 100%;\n  display: block;\n  padding-top: 24px;\n  margin-bottom: 24px;\n`;\n\nexport const ContentContainer = styled.div`padding: 0 24px 24px;`;\n\nexport const FormContainer = styled.div``;\n\nexport const Form = styled.form`\n  display: block;\n  flex-direction: column;\n  align-self: stretch;\n  flex: 1 0 100%;\n  max-width: 100%;\n  margin: 16px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/views/newCommunity/style.js","//@flow\nimport * as React from 'react';\nimport Link from 'src/components/link';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport compose from 'recompose/compose';\nimport { CommunityListItem } from '../../../components/listItems';\nimport Icon from '../../../components/icons';\n\nimport {\n  StyledCard,\n  ListHeading,\n  ListHeader,\n  ListContainer,\n} from '../../../components/listItems/style';\n\ntype Props = {\n  communities: Array<Object>,\n  currentUser: Object,\n  user: Object,\n};\n\nclass CommunityList extends React.Component<Props> {\n  render() {\n    const { communities, user, currentUser } = this.props;\n\n    if (!communities || communities.length === 0) {\n      return null;\n    }\n\n    let sortedCommunities = communities;\n    if (sortedCommunities[0].contextPermissions) {\n      sortedCommunities = communities.slice().sort((a, b) => {\n        const bc = parseInt(b.contextPermissions.reputation, 10);\n        const ac = parseInt(a.contextPermissions.reputation, 10);\n        return bc <= ac ? -1 : 1;\n      });\n    }\n\n    return (\n      <StyledCard largeOnly>\n        <ListHeader>\n          {user === currentUser ? (\n            <ListHeading>My Communities</ListHeading>\n          ) : (\n            <ListHeading>Member of</ListHeading>\n          )}\n        </ListHeader>\n        <ListContainer>\n          {sortedCommunities.map(community => {\n            return (\n              <Link key={community.id} to={`/${community.slug}`}>\n                <CommunityListItem\n                  community={community}\n                  reputation={\n                    community.contextPermissions\n                      ? community.contextPermissions.reputation\n                      : null\n                  }\n                  showDescription\n                >\n                  <Icon glyph=\"view-forward\" />\n                </CommunityListItem>\n              </Link>\n            );\n          })}\n        </ListContainer>\n      </StyledCard>\n    );\n  }\n}\n\nexport default compose(withRouter, connect())(CommunityList);\n\n\n\n// WEBPACK FOOTER //\n// src/views/user/components/communityList.js","import * as React from 'react';\n//$FlowFixMe\nimport compose from 'recompose/compose';\nimport { throttle } from '../../../helpers/utils';\nimport { searchThreadsQuery } from '../../../api/thread';\nimport ThreadFeed from '../../../components/threadFeed';\nimport { SearchContainer, SearchInput } from '../style';\n\nconst SearchThreadFeed = compose(searchThreadsQuery)(ThreadFeed);\n\ntype Props = {\n  community: Object,\n};\n\ntype State = {\n  searchString: string,\n  sendStringToServer: string,\n};\n\nclass Search extends React.Component<Props, State> {\n  constructor() {\n    super();\n\n    this.state = {\n      searchString: '',\n      sendStringToServer: '',\n    };\n\n    this.search = throttle(this.search, 500);\n  }\n\n  search = searchString => {\n    // don't start searching until at least 3 characters are typed\n    if (searchString.length < 3) return;\n\n    // start the input loading spinner\n    this.setState({\n      sendStringToServer: searchString,\n    });\n  };\n\n  handleChange = (e: any) => {\n    const searchString = e.target.value.toLowerCase().trim();\n\n    // set the searchstring to state\n    this.setState({\n      searchString,\n    });\n\n    // trigger a new search based on the search input\n    this.search(searchString);\n  };\n\n  render() {\n    const { user } = this.props;\n    const { searchString, sendStringToServer } = this.state;\n\n    return (\n      <div>\n        <SearchContainer>\n          <SearchInput\n            defaultValue={searchString}\n            autoFocus={true}\n            type=\"text\"\n            placeholder={`Search ${user.name}'s conversations...`}\n            onChange={this.handleChange}\n          />\n        </SearchContainer>\n        {searchString &&\n          sendStringToServer && (\n            <SearchThreadFeed\n              viewContext=\"profile\"\n              userId={user.id}\n              queryString={sendStringToServer}\n              filter={{ creatorId: user.id }}\n              user={user}\n            />\n          )}\n      </div>\n    );\n  }\n}\n\nexport default compose()(Search);\n\n\n\n// WEBPACK FOOTER //\n// src/views/user/components/search.js","import * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport generateMetaInfo from 'shared/generate-meta-info';\nimport Link from 'src/components/link';\nimport AppViewWrapper from '../../components/appViewWrapper';\nimport Head from '../../components/head';\nimport Column from '../../components/column';\nimport ThreadFeed from '../../components/threadFeed';\nimport { track } from '../../helpers/events';\nimport { UserProfile } from '../../components/profile';\nimport { LoadingScreen } from '../../components/loading';\nimport { NullState } from '../../components/upsell';\nimport { Button, ButtonRow } from '../../components/buttons';\nimport CommunityList from './components/communityList';\nimport Search from './components/search';\nimport { getUserThreads, getUser } from './queries';\nimport ViewError from '../../components/viewError';\nimport viewNetworkHandler from '../../components/viewNetworkHandler';\nimport Titlebar from '../titlebar';\nimport {\n  SegmentedControl,\n  DesktopSegment,\n  MobileSegment,\n} from '../../components/segmentedControl';\n\nconst ThreadFeedWithData = compose(connect(), getUserThreads)(ThreadFeed);\nconst ThreadParticipantFeedWithData = compose(connect(), getUserThreads)(\n  ThreadFeed\n);\n\ntype Props = {\n  match: {\n    params: {\n      username: string,\n    },\n  },\n  currentUser: Object,\n  data: {\n    user: Object,\n  },\n  isLoading: boolean,\n  hasError: boolean,\n  queryVarIsChanging: boolean,\n};\n\ntype State = {\n  hasNoThreads: boolean,\n  selectedView: 'participant' | 'creator',\n};\n\nclass UserView extends React.Component<Props, State> {\n  constructor() {\n    super();\n    this.state = { hasThreads: true, selectedView: 'participant' };\n  }\n\n  componentDidMount() {\n    track('user', 'profile viewed', null);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (!prevProps.data.user) return;\n    // track when a new profile is viewed without the component having been remounted\n    if (prevProps.data.user.id !== this.props.data.user.id) {\n      track('user', 'profile viewed', null);\n    }\n  }\n\n  hasNoThreads = () => this.setState({ hasThreads: false });\n  hasThreads = () => this.setState({ hasThreads: true });\n\n  handleSegmentClick = label => {\n    if (this.state.selectedView === label) return;\n\n    return this.setState({\n      selectedView: label,\n      hasThreads: true,\n    });\n  };\n\n  render() {\n    const {\n      data: { user },\n      isLoading,\n      hasError,\n      queryVarIsChanging,\n      match: { params: { username } },\n      currentUser,\n    } = this.props;\n    const { hasThreads, selectedView } = this.state;\n\n    if (queryVarIsChanging) {\n      return <LoadingScreen />;\n    }\n\n    if (user) {\n      const { title, description } = generateMetaInfo({\n        type: 'user',\n        data: {\n          name: user.name,\n          username: user.username,\n          description: user.description,\n        },\n      });\n\n      const communities =\n        user.communityConnection.edges.length > 0\n          ? user.communityConnection.edges.map(c => c.node)\n          : [];\n\n      const nullHeading = `${user.firstName\n        ? user.firstName\n        : user.name} hasn’t ${selectedView === 'creator'\n        ? 'created'\n        : 'joined'} any conversations yet.`;\n\n      const Feed =\n        selectedView === 'creator'\n          ? ThreadFeedWithData\n          : ThreadParticipantFeedWithData;\n\n      return (\n        <AppViewWrapper data-e2e-id=\"user-view\">\n          <Head\n            title={title}\n            description={description}\n            image={user.profilePhoto}\n          />\n          <Titlebar\n            title={user.name}\n            subtitle={'Posts By'}\n            provideBack={true}\n            backRoute={`/`}\n            noComposer\n          />\n          <Column type=\"secondary\">\n            <UserProfile\n              data={{ user }}\n              username={username}\n              profileSize=\"full\"\n            />\n            <CommunityList\n              currentUser={currentUser}\n              user={user}\n              communities={communities}\n            />\n          </Column>\n\n          <Column type=\"primary\" alignItems=\"center\">\n            <SegmentedControl style={{ margin: '-16px 0 16px' }}>\n              <DesktopSegment\n                segmentLabel=\"search\"\n                onClick={() => this.handleSegmentClick('search')}\n                selected={selectedView === 'search'}\n              >\n                Search\n              </DesktopSegment>\n\n              <DesktopSegment\n                segmentLabel=\"participant\"\n                onClick={() => this.handleSegmentClick('participant')}\n                selected={selectedView === 'participant'}\n              >\n                Replies\n              </DesktopSegment>\n\n              <DesktopSegment\n                segmentLabel=\"creator\"\n                onClick={() => this.handleSegmentClick('creator')}\n                selected={selectedView === 'creator'}\n              >\n                Threads\n              </DesktopSegment>\n              <MobileSegment\n                segmentLabel=\"search\"\n                onClick={() => this.handleSegmentClick('search')}\n                selected={selectedView === 'search'}\n              >\n                Search\n              </MobileSegment>\n              <MobileSegment\n                segmentLabel=\"participant\"\n                onClick={() => this.handleSegmentClick('participant')}\n                selected={selectedView === 'participant'}\n              >\n                Replies\n              </MobileSegment>\n              <MobileSegment\n                segmentLabel=\"creator\"\n                onClick={() => this.handleSegmentClick('creator')}\n                selected={selectedView === 'creator'}\n              >\n                Threads\n              </MobileSegment>\n            </SegmentedControl>\n\n            {hasThreads &&\n              (selectedView === 'creator' ||\n                selectedView === 'participant') && (\n                <Feed\n                  userId={user.id}\n                  username={username}\n                  viewContext=\"profile\"\n                  hasNoThreads={this.hasNoThreads}\n                  hasThreads={this.hasThreads}\n                  kind={selectedView}\n                />\n              )}\n\n            {selectedView === 'search' && <Search user={user} />}\n\n            {!hasThreads && <NullState bg=\"null\" heading={nullHeading} />}\n          </Column>\n        </AppViewWrapper>\n      );\n    }\n\n    if (isLoading) {\n      return <LoadingScreen />;\n    }\n\n    if (hasError) {\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={`User not found`}\n            provideBack={true}\n            backRoute={`/`}\n            noComposer\n          />\n          <ViewError\n            heading={`We ran into an error loading this user.`}\n            refresh\n          />\n        </AppViewWrapper>\n      );\n    }\n\n    if (!user) {\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={`User not found`}\n            provideBack={true}\n            backRoute={`/`}\n            noComposer\n          />\n          <ViewError heading={`We couldn’t find anyone with this username.`}>\n            <ButtonRow>\n              <Link to={`/`}>\n                <Button large>Take me home</Button>\n              </Link>\n            </ButtonRow>\n          </ViewError>\n        </AppViewWrapper>\n      );\n    }\n  }\n}\n\nconst map = state => ({ currentUser: state.users.currentUser });\nexport default compose(connect(map), getUser, viewNetworkHandler)(UserView);\n\n\n\n// WEBPACK FOOTER //\n// src/views/user/index.js","// @flow\n// $FlowFixMe\nimport { graphql, gql } from 'react-apollo';\nimport { userInfoFragment } from '../../api/fragments/user/userInfo';\nimport { userThreadsFragment } from '../../api/fragments/user/userThreads';\nimport { userCommunitiesFragment } from '../../api/fragments/user/userCommunities';\nimport { subscribeToUpdatedThreads } from '../../api/subscriptions';\nimport parseRealtimeThreads from '../../helpers/realtimeThreads';\n\nconst LoadMoreThreads = gql`\n  query loadMoreUserThreads($username: String, $after: String, $kind: ThreadConnectionType) {\n    user(username: $username) {\n      ...userInfo\n      ...userThreads\n    }\n  }\n  ${userInfoFragment}\n  ${userThreadsFragment}\n`;\n\nconst threadsQueryOptions = {\n  props: ({\n    ownProps,\n    data: { fetchMore, error, loading, networkStatus, user, subscribeToMore },\n  }) => ({\n    data: {\n      error,\n      loading,\n      user,\n      networkStatus,\n      threads: user ? user.threadConnection.edges : '',\n      hasNextPage: user ? user.threadConnection.pageInfo.hasNextPage : false,\n      subscribeToUpdatedThreads: () => {\n        return subscribeToMore({\n          document: subscribeToUpdatedThreads,\n          updateQuery: (prev, { subscriptionData }) => {\n            const updatedThread = subscriptionData.data.threadUpdated;\n            if (!updatedThread) return prev;\n\n            const thisUserId = ownProps.userId;\n            const updatedThreadShouldAppearInContext =\n              thisUserId === updatedThread.creator.id;\n\n            const newThreads = updatedThreadShouldAppearInContext\n              ? parseRealtimeThreads(\n                  prev.user.threadConnection.edges,\n                  updatedThread,\n                  ownProps.dispatch\n                ).filter(thread => thread.node.creator.id === thisUserId)\n              : [...prev.user.threadConnection.edges];\n\n            return {\n              ...prev,\n              user: {\n                ...prev.user,\n                threadConnection: {\n                  ...prev.user.threadConnection,\n                  pageInfo: {\n                    ...prev.user.threadConnection.pageInfo,\n                  },\n                  edges: newThreads,\n                },\n              },\n            };\n          },\n        });\n      },\n      fetchMore: () =>\n        fetchMore({\n          query: LoadMoreThreads,\n          variables: {\n            after:\n              user.threadConnection.edges[\n                user.threadConnection.edges.length - 1\n              ].cursor,\n            username: user.username,\n            kind: ownProps.kind,\n          },\n          updateQuery: (prev, { fetchMoreResult }) => {\n            if (!fetchMoreResult.user) {\n              return prev;\n            }\n            return {\n              ...prev,\n              user: {\n                ...prev.user,\n                threadConnection: {\n                  ...prev.user.threadConnection,\n                  pageInfo: {\n                    ...prev.user.threadConnection.pageInfo,\n                    ...fetchMoreResult.user.threadConnection.pageInfo,\n                  },\n                  edges: [\n                    ...prev.user.threadConnection.edges,\n                    ...fetchMoreResult.user.threadConnection.edges,\n                  ],\n                },\n              },\n            };\n          },\n        }),\n    },\n  }),\n  options: ({ username, kind }) => ({\n    variables: {\n      username,\n      kind,\n    },\n    fetchPolicy: 'cache-first',\n  }),\n};\n\nexport const getUserThreads = graphql(\n  gql`\n\t\tquery getUserThreads($username: String, $after: String, $kind: ThreadConnectionType) {\n\t\t\tuser(username: $username) {\n        ...userInfo\n        ...userThreads\n      }\n\t\t}\n    ${userInfoFragment}\n    ${userThreadsFragment}\n\t`,\n  threadsQueryOptions\n);\n\n/*\n  Loads the sidebar profile component widget independent of the thread feed.\n  In the future we can compose these queries together since they are fetching\n  such similar data, but for now we're making a decision to keep the data\n  queries specific to each component.\n*/\nconst profileQueryOptions = {\n  options: ({ match: { params: { username } } }) => ({\n    variables: {\n      username: username,\n    },\n    fetchPolicy: 'cache-first',\n  }),\n};\n\nexport const getUser = graphql(\n  gql`\n\t\tquery getUser($username: String) {\n\t\t\tuser(username: $username) {\n        ...userInfo\n        isPro\n        totalReputation\n        ...userCommunities\n      }\n\t\t}\n    ${userInfoFragment}\n    ${userCommunitiesFragment}\n\t`,\n  profileQueryOptions\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/user/queries.js","import styled from 'styled-components';\nimport { FlexRow, FlexCol } from '../../components/globals';\nimport Card from '../../components/card';\nimport { Transition, Shadow, hexa, zIndex } from '../../components/globals';\n\nexport const Row = styled(FlexRow)`\n  padding: 8px 16px;\n  align-items: center;\n  width: 100%;\n  color: ${({ theme }) => theme.text.alt};\n\n  div {\n    margin-top: 2px;\n    margin-right: 8px;\n    color: inherit;\n  }\n\n  span {\n    line-height: 1;\n    color: inherit;\n  }\n\n  &:hover {\n    background-color: ${({ theme }) => theme.brand.alt};\n    color: ${({ theme }) => theme.text.reverse};\n  }\n`;\n\nexport const Col = styled(FlexCol)`\n  width: 100%;\n\n  a + a > div {\n    border-top: 2px solid ${({ theme }) => theme.bg.wash};\n  }\n`;\n\nexport const RowLabel = styled.span`font-weight: 600;`;\n\nexport const SearchContainer = styled(Card)`\n  margin-bottom: 16px;\n  position: relative;\n  z-index: ${zIndex.search};\n  width: 100%;\n  display: block;\n  min-height: 64px;\n  border-radius: 12px;\n  transition: ${Transition.hover.off};\n\n  &:hover {\n    transition: none;\n    box-shadow: ${Shadow.high}\n      ${({ theme }) => hexa(theme.text.placeholder, 0.5)};\n  }\n\n  @media (max-width: 768px) {\n    border-radius: 0;\n    pointer-events: all;\n    margin-bottom: 0;\n  }\n`;\n\nexport const SearchInput = styled.input`\n  justify-content: flex-start;\n  align-items: center;\n  cursor: pointer;\n  padding: 20px;\n  color: ${props => props.theme.text.default};\n  transition: ${Transition.hover.off};\n  font-size: 20px;\n  font-weight: 800;\n  margin-left: 8px;\n  width: 97%;\n  border-radius: 12px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/views/user/style.js"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAAA;AADA;AACA;AAOA;AACA;AAeA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AADA;AADA;AADA;AAAA;AADA;AACA;AAUA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA8BA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AAAA;AAAA;AAAA;AACA;AA/BA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAxBA;AACA;AA0BA;AAQA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AArHA;AAsHA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AA/HA;AAgIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AAFA;AAIA;AACA;AA9IA;AA+IA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAvJA;AAwJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AArKA;AAuKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AApLA;AAqLA;AACA;AACA;AACA;AADA;AAGA;AACA;AAzLA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAxBA;AAFA;AA4BA;AACA;;;AA+JA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AALA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAhBA;AAqBA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAE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","sourceRoot":""}