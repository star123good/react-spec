{"version":3,"file":"static/js/channelSettings.chunk.js","sources":["/Users/brianlovin/Sites/spectrum/src/components/editForm/style.js","/Users/brianlovin/Sites/spectrum/src/components/settingsViews/header.js","/Users/brianlovin/Sites/spectrum/src/components/settingsViews/subnav.js","/Users/brianlovin/Sites/spectrum/src/components/threadFeed/style.js","/Users/brianlovin/Sites/spectrum/src/views/channelSettings/components/blockedUsers.js","/Users/brianlovin/Sites/spectrum/src/views/channelSettings/components/channelMembers.js","/Users/brianlovin/Sites/spectrum/src/views/channelSettings/components/editForm.js","/Users/brianlovin/Sites/spectrum/src/views/channelSettings/components/overview.js","/Users/brianlovin/Sites/spectrum/src/views/channelSettings/components/pendingUsers.js","/Users/brianlovin/Sites/spectrum/src/views/channelSettings/index.js","/Users/brianlovin/Sites/spectrum/src/views/channelSettings/queries.js"],"sourcesContent":["import styled from 'styled-components';\nimport Card from '../card';\nimport { FlexRow, FlexCol, Truncate } from '../globals';\n\nexport const StyledCard = styled(Card)`padding: 16px;`;\n\nexport const Form = styled.form`\n  display: inline-block;\n  flex-direction: column;\n  align-self: stretch;\n  flex: none;\n  max-width: 100%;\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 20px;\n  color: ${props => props.theme.text.default};\n  font-weight: 800;\n  line-height: 1.2;\n  flex: 1 0 auto;\n  ${Truncate};\n`;\n\nexport const Subtitle = styled.h4`\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  line-height: 1.3;\n  width: 100%;\n  ${Truncate};\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: ${props => props.theme.text.default};\n  padding: 8px 0 16px;\n  line-height: 1.4;\n\n  a {\n    color: ${props => props.theme.brand.default};\n  }\n`;\n\nexport const TertiaryActionContainer = styled(FlexRow)`\n  justify-content: flex-start;\n  flex-grow: 1;\n`;\n\nexport const Actions = styled(FlexRow)`\n  margin-top: 24px;\n  justify-content: flex-start;\n  flex-direction: row-reverse;\n  border-top: 1px solid ${props => props.theme.bg.border};\n  padding-top: 16px;\n\n  button + button {\n    margin-left: 8px;\n  }\n`;\n\nexport const PhotoPreview = styled.div`\n  position: relative;\n  width: 48px;\n  height: 48px;\n  object-fit: cover;\n  border-radius: 4px;\n  background-image: url('${props => props.src}')\n`;\n\nexport const GeneralNotice = styled.span`\n  padding: 8px 12px;\n  font-size: 12px;\n  font-weight: 500;\n  color: ${props => props.theme.text.alt};\n  background: ${props => props.theme.bg.wash};\n  border-radius: 4px;\n  margin-top: 24px;\n  line-height: 1.4;\n  display: inline-block;\n`;\n\nexport const ImageInputWrapper = styled(FlexCol)`\n  position: relative;\n  flex: 0 0 auto;\n  margin-top: 8px;\n  margin-bottom: 24px;\n\n  > label:nth-of-type(2) {\n    position: absolute;\n    bottom: -24px;\n    left: 24px;\n  }\n`;\n\nexport const Location = styled(FlexRow)`\n  font-weight: 500;\n  color: ${({ theme }) => theme.text.alt};\n  font-size: 14px;\n  margin-bottom: 8px;\n\n  > div {\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > span {\n    padding: 0 4px;\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > a:hover {\n    color: ${({ theme }) => theme.brand.alt};\n    text-decoration: underline;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Loading = styled.span`\n  display: inline-block;\n  position: absolute;\n  right: 19px;\n  top: 45px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/editForm/style.js","// @flow\nimport * as React from 'react';\nimport Link from 'src/components/link';\nimport { StyledHeader, Heading, Subheading, HeaderText } from './style';\nimport Avatar from '../avatar';\n\ntype Props = {\n  avatar?: {\n    profilePhoto: string,\n    community: Object,\n  },\n  subheading: {\n    to: string,\n    label: string,\n  },\n  heading: string,\n};\n\nclass Header extends React.Component<Props> {\n  render() {\n    const { avatar, subheading, heading } = this.props;\n    return (\n      <StyledHeader>\n        {avatar && (\n          <Avatar\n            community={avatar.community}\n            src={avatar.profilePhoto}\n            size={'48'}\n            radius={8}\n          />\n        )}\n        <HeaderText>\n          <Link to={subheading.to}>\n            <Subheading>{subheading.label}</Subheading>\n          </Link>\n          <Heading>{heading}</Heading>\n        </HeaderText>\n      </StyledHeader>\n    );\n  }\n}\n\nexport default Header;\n\n\n\n// WEBPACK FOOTER //\n// src/components/settingsViews/header.js","// @flow\nimport * as React from 'react';\nimport Link from 'src/components/link';\nimport { StyledSubnav, SubnavList, SubnavListItem } from './style';\n\ntype SubnavItem = {\n  to: string,\n  label: string,\n  activeLabel: string,\n};\ntype Props = {\n  items: Array<SubnavItem>,\n  activeTab: string,\n};\n\nclass Subnav extends React.Component<Props> {\n  render() {\n    const { activeTab, items } = this.props;\n\n    return (\n      <StyledSubnav>\n        <SubnavList>\n          {items.map((item, i) => {\n            return (\n              <SubnavListItem key={i} active={activeTab === item.activeLabel}>\n                <Link to={item.to}>{item.label}</Link>\n              </SubnavListItem>\n            );\n          })}\n        </SubnavList>\n      </StyledSubnav>\n    );\n  }\n}\n\nexport default Subnav;\n\n\n\n// WEBPACK FOOTER //\n// src/components/settingsViews/subnav.js","// @flow\n// $FlowFixMe\nimport styled from 'styled-components';\nimport { OutlineButton } from '../buttons';\n\nexport const FetchMoreButton = styled(OutlineButton)`\n  width: 100%;\n  padding: 16px 0;\n\n  @media (max-width: 768px) {\n    padding: 32px 0;\n    border-radius: 0;\n    background: #fff;\n    font-size: 16px;\n    font-weight: 600;\n    color: ${props => props.theme.brand.default};\n    border: none;\n    box-shadow: none;\n    border-top: 2px solid ${props => props.theme.bg.border};\n\n    &:hover {\n      background: ${props => props.theme.bg.wash};\n      border-radius: 0;\n      box-shadow: none;\n    }\n  }\n`;\n\nexport const Divider = styled.div`\n  border-bottom: 2px solid ${props => props.theme.bg.border};\n  width: 100%;\n  display: block;\n  padding-top: 24px;\n  margin-bottom: 24px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/threadFeed/style.js","//@flow\nimport * as React from 'react';\n// $FlowFixMe\nimport compose from 'recompose/compose';\nimport { UserListItem } from '../../../components/listItems';\nimport { TextButton } from '../../../components/buttons';\nimport { Loading } from '../../../components/loading';\nimport { getBlockedUsersQuery } from '../../../api/channel';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport ViewError from '../../../components/viewError';\nimport {\n  ListContainer,\n  Description,\n  Notice,\n} from '../../../components/listItems/style';\n\ntype Props = {\n  data: {\n    channel: {\n      blockedUsers: Array<Object>,\n    },\n  },\n  unblock: Function,\n  isLoading: boolean,\n};\n\nclass BlockedUsers extends React.Component<Props> {\n  render() {\n    const { data, unblock, isLoading } = this.props;\n\n    if (data && data.channel) {\n      const { blockedUsers } = data.channel;\n      return (\n        <SectionCard>\n          <SectionTitle>Blocked Users</SectionTitle>\n          {blockedUsers.length > 0 && (\n            <Description>\n              Blocked users can not see threads or messages posted in this\n              channel. They will still be able to join any other public channels\n              in the Spectrum community and request access to other private\n              channels.\n            </Description>\n          )}\n\n          {blockedUsers.length > 0 && (\n            <Notice>\n              Unblocking a user will <b>not</b> add them to this channel. It\n              will only allow them to re-request access in the future as long as\n              this channel remains private.\n            </Notice>\n          )}\n\n          <ListContainer>\n            {blockedUsers &&\n              blockedUsers.map(user => {\n                return (\n                  <section key={user.id}>\n                    <UserListItem user={user}>\n                      <TextButton\n                        onClick={() => unblock(user.id)}\n                        label\n                        hoverColor={'warn.alt'}\n                      >\n                        Unblock\n                      </TextButton>\n                    </UserListItem>\n                  </section>\n                );\n              })}\n\n            {blockedUsers.length <= 0 && (\n              <Description>\n                There are no blocked users in this channel.\n              </Description>\n            )}\n          </ListContainer>\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return (\n      <SectionCard>\n        <ViewError />\n      </SectionCard>\n    );\n  }\n}\n\nexport default compose(getBlockedUsersQuery, viewNetworkHandler)(BlockedUsers);\n\n\n\n// WEBPACK FOOTER //\n// src/views/channelSettings/components/blockedUsers.js","//@flow\nimport React, { Component } from 'react';\nimport { UserListItem } from '../../../components/listItems';\nimport compose from 'recompose/compose';\nimport { Loading } from '../../../components/loading';\nimport { getChannelMembersQuery } from '../../../api/channel';\nimport { FetchMoreButton } from '../../../components/threadFeed/style';\nimport ViewError from '../../../components/viewError';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { ListContainer, ListFooter } from '../../../components/listItems/style';\n\ntype Props = {\n  data: {\n    channel: Object,\n    fetchMore: Function,\n  },\n  isLoading: boolean,\n  isFetchingMore: boolean,\n};\n\nclass ChannelMembers extends Component<Props> {\n  render() {\n    const {\n      data: { channel, fetchMore },\n      data,\n      isLoading,\n      isFetchingMore,\n    } = this.props;\n\n    if (data && data.channel) {\n      const members =\n        channel.memberConnection &&\n        channel.memberConnection.edges.map(member => member.node);\n      const totalCount =\n        channel.metaData && channel.metaData.members.toLocaleString();\n\n      return (\n        <SectionCard>\n          <SectionTitle>\n            {totalCount === 1\n              ? `${totalCount} member`\n              : `${totalCount} members`}\n          </SectionTitle>\n\n          <ListContainer>\n            {members &&\n              members.map(user => {\n                return (\n                  <section key={user.id}>\n                    <UserListItem\n                      user={user}\n                      reputationTipText={'Rep in this community'}\n                    />\n                  </section>\n                );\n              })}\n          </ListContainer>\n\n          {channel.memberConnection.pageInfo.hasNextPage && (\n            <ListFooter>\n              <FetchMoreButton\n                color={'brand.default'}\n                loading={isFetchingMore}\n                onClick={() => fetchMore()}\n              >\n                Load more\n              </FetchMoreButton>\n            </ListFooter>\n          )}\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return (\n      <SectionCard>\n        <ViewError />\n      </SectionCard>\n    );\n  }\n}\n\nexport default compose(getChannelMembersQuery, viewNetworkHandler)(\n  ChannelMembers\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/channelSettings/components/channelMembers.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Link from 'src/components/link';\nimport { track } from '../../../helpers/events';\nimport {\n  editChannelMutation,\n  deleteChannelMutation,\n} from '../../../api/channel';\nimport { openModal } from '../../../actions/modals';\nimport { addToastWithTimeout } from '../../../actions/toasts';\nimport { Notice } from '../../../components/listItems/style';\nimport { Button, IconButton } from '../../../components/buttons';\nimport { NullCard } from '../../../components/upsell';\nimport {\n  Input,\n  UnderlineInput,\n  TextArea,\n} from '../../../components/formElements';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport {\n  Form,\n  TertiaryActionContainer,\n  Description,\n  Actions,\n  GeneralNotice,\n  Location,\n} from '../../../components/editForm/style';\n\ntype State = {\n  name: string,\n  slug: string,\n  description: string,\n  isPrivate: boolean,\n  channelId: string,\n  channelData: Object,\n  isLoading: boolean,\n};\n\ntype Props = {\n  editChannel: Function,\n  dispatch: Function,\n  channel: {\n    name: string,\n    slug: string,\n    description: string,\n    isPrivate: boolean,\n    id: string,\n    community: {\n      slug: string,\n    },\n  },\n};\nclass ChannelWithData extends React.Component<Props, State> {\n  constructor(props) {\n    super(props);\n\n    const { channel } = this.props;\n\n    this.state = {\n      name: channel.name,\n      slug: channel.slug,\n      description: channel.description,\n      isPrivate: channel.isPrivate || false,\n      channelId: channel.id,\n      channelData: channel,\n      isLoading: false,\n    };\n  }\n\n  handleChange = e => {\n    const key = e.target.id;\n    const value = e.target.value;\n    const { isPrivate } = this.state;\n\n    const newState = {};\n    // checkboxes should reverse the value\n    if (key === 'isPrivate') {\n      newState[key] = !isPrivate;\n    } else {\n      newState[key] = value;\n    }\n\n    this.setState(prevState => {\n      return Object.assign({}, prevState, {\n        ...newState,\n      });\n    });\n  };\n\n  save = e => {\n    e.preventDefault();\n    const { name, slug, description, isPrivate, channelId } = this.state;\n    const input = {\n      name,\n      slug,\n      description,\n      isPrivate,\n      channelId,\n    };\n\n    this.setState({\n      isLoading: true,\n    });\n\n    // if privacy changed in this edit\n    if (this.props.channel.isPrivate !== isPrivate) {\n      track('channel', `privacy changed to ${isPrivate.toString()}`, null);\n    }\n\n    this.props\n      .editChannel(input)\n      .then(({ data: { editChannel } }) => {\n        const channel = editChannel;\n\n        track('channel', 'edited', null);\n\n        this.setState({\n          isLoading: false,\n        });\n\n        // the mutation returns a channel object. if it exists,\n        if (channel !== undefined) {\n          this.props.dispatch(addToastWithTimeout('success', 'Channel saved!'));\n        }\n      })\n      .catch(err => {\n        this.setState({\n          isLoading: false,\n        });\n\n        this.props.dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  triggerDeleteChannel = (e, channelId) => {\n    e.preventDefault();\n    track('channel', 'delete inited', null);\n    const { name, channelData } = this.state;\n    const message = (\n      <div>\n        <p>\n          Are you sure you want to delete{' '}\n          <b>\n            {channelData.community.name}/{name}\n          </b>\n          ?\n        </p>\n        {channelData.metaData.threads > 0 && (\n          <p>\n            The <b>{channelData.metaData.threads} threads</b> posted in this\n            channel will be deleted.\n          </p>\n        )}\n        <p>\n          All messages, reactions, and media shared in this channel will be\n          deleted.\n        </p>\n        <p>\n          <b>This cannot be undone.</b>\n        </p>\n      </div>\n    );\n\n    return this.props.dispatch(\n      openModal('DELETE_DOUBLE_CHECK_MODAL', {\n        id: channelId,\n        entity: 'channel',\n        message,\n        redirect: `/${channelData.community.slug}`,\n      })\n    );\n  };\n\n  render() {\n    const { name, slug, description, isPrivate, isLoading } = this.state;\n    const { channel } = this.props;\n\n    if (!channel) {\n      return (\n        <NullCard\n          bg=\"channel\"\n          heading={`This channel doesn't exist yet.`}\n          copy={`Want to make it?`}\n        >\n          {/* TODO: wire up button */}\n          <Button>Create</Button>\n        </NullCard>\n      );\n    } else {\n      return (\n        <SectionCard>\n          <Location>\n            <Link to={`/${channel.community.slug}/${channel.slug}`}>\n              View Channel\n            </Link>\n          </Location>\n          <SectionTitle>Channel Settings</SectionTitle>\n          <Form onSubmit={this.save}>\n            <Input defaultValue={name} id=\"name\" onChange={this.handleChange}>\n              Name\n            </Input>\n            <UnderlineInput defaultValue={slug} disabled>\n              {`URL: /${channel.community.slug}/`}\n            </UnderlineInput>\n            <TextArea\n              id=\"description\"\n              defaultValue={description}\n              onChange={this.handleChange}\n            >\n              Description\n            </TextArea>\n\n            {/* {slug !== 'general' &&\n              <Checkbox\n                id=\"isPrivate\"\n                checked={isPrivate}\n                onChange={this.handleChange}\n              >\n                Private channel\n              </Checkbox>} */}\n            {isPrivate ? (\n              <Description>\n                Only approved people on Spectrum can see the threads, messages,\n                and members in this channel. You can manually approve users who\n                request to join this channel.\n              </Description>\n            ) : (\n              <Description>\n                Anyone on Spectrum can join this channel, post threads and\n                messages, and will be able to see other members. If you want to\n                create private channels,{' '}\n                <a href=\"mailto:hi@spectrum.chat\">get in touch</a>\n                .\n              </Description>\n            )}\n\n            {// if the user is moving from private to public\n            this.props.channel.isPrivate &&\n              !isPrivate && (\n                <Notice>\n                  When a private channel is made public all pending users will\n                  be added as members of the channel. Blocked users will remain\n                  blocked from viewing all content in this channel but in the\n                  future any new person will be able to join.\n                </Notice>\n              )}\n\n            <Actions>\n              <Button onClick={this.save} loading={isLoading}>\n                Save\n              </Button>\n              {slug !== 'general' && (\n                <TertiaryActionContainer>\n                  <IconButton\n                    glyph=\"delete\"\n                    tipText={`Delete ${name}`}\n                    tipLocation=\"top-right\"\n                    color=\"text.placeholder\"\n                    hoverColor=\"warn.alt\"\n                    onClick={e => this.triggerDeleteChannel(e, channel.id)}\n                  />\n                </TertiaryActionContainer>\n              )}\n            </Actions>\n\n            {slug === 'general' && (\n              <GeneralNotice>\n                The General channel is the default channel for your community.\n                It can't be deleted or private, but you can still change the\n                name and description.\n              </GeneralNotice>\n            )}\n          </Form>\n        </SectionCard>\n      );\n    }\n  }\n}\n\nconst Channel = compose(deleteChannelMutation, editChannelMutation, withRouter)(\n  ChannelWithData\n);\nexport default connect()(Channel);\n\n\n\n// WEBPACK FOOTER //\n// src/views/channelSettings/components/editForm.js","// @flow\nimport * as React from 'react';\nimport {\n  SectionsContainer,\n  Column,\n} from '../../../components/settingsViews/style';\nimport EditForm from './editForm';\nimport PendingUsers from './pendingUsers';\nimport BlockedUsers from './blockedUsers';\nimport ChannelMembers from './channelMembers';\n// import { ChannelInvitationForm } from '../../../components/emailInvitationForm';\n\ntype Props = {\n  community: Object,\n  channel: Object,\n  communitySlug: string,\n  togglePending: Function,\n  unblock: Function,\n};\nclass Overview extends React.Component<Props> {\n  render() {\n    const { channel } = this.props;\n\n    return (\n      <SectionsContainer>\n        <Column>\n          <EditForm channel={channel} />\n        </Column>\n\n        {/*channel.isPrivate && (\n          // <Column>\n          //   <SectionCard>\n          //     <SectionTitle>Invite by email</SectionTitle>\n          //     <ChannelInvitationForm community={community} />\n          //   </SectionCard>\n          // </Column>\n        )*/}\n\n        <Column>\n          {channel.isPrivate && (\n            <span>\n              <ChannelMembers channel={channel} id={channel.id} />\n              <PendingUsers\n                togglePending={this.props.togglePending}\n                channel={channel}\n                id={channel.id}\n              />\n              <BlockedUsers\n                unblock={this.props.unblock}\n                channel={channel}\n                id={channel.id}\n              />\n            </span>\n          )}\n          {!channel.isPrivate && <ChannelMembers id={channel.id} />}\n        </Column>\n      </SectionsContainer>\n    );\n  }\n}\n\nexport default Overview;\n\n\n\n// WEBPACK FOOTER //\n// src/views/channelSettings/components/overview.js","//@flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { UserListItem } from '../../../components/listItems';\nimport { TextButton } from '../../../components/buttons';\nimport { Loading } from '../../../components/loading';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { getPendingUsersQuery } from '../../../api/channel';\nimport ViewError from '../../../components/viewError';\nimport {\n  ListContainer,\n  Description,\n} from '../../../components/listItems/style';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\n\ntype Props = {\n  data: {\n    channel: {\n      pendingUsers: Array<Object>,\n    },\n  },\n  togglePending: Function,\n  isLoading: boolean,\n};\n\nclass PendingUsers extends React.Component<Props> {\n  render() {\n    const { data, isLoading, togglePending } = this.props;\n\n    if (data && data.channel) {\n      const { pendingUsers } = data.channel;\n\n      return (\n        <SectionCard>\n          <SectionTitle>Pending Users</SectionTitle>\n          {pendingUsers.length > 0 && (\n            <Description>\n              Approving requests will allow a person to view all threads and\n              messages in this channel, as well as allow them to post their own\n              threads.\n            </Description>\n          )}\n\n          <ListContainer>\n            {pendingUsers &&\n              pendingUsers.map(user => {\n                return (\n                  <section key={user.id}>\n                    <UserListItem user={user}>\n                      <div style={{ display: 'flex' }}>\n                        <TextButton\n                          onClick={() => togglePending(user.id, 'block')}\n                          label\n                          hoverColor={'warn.alt'}\n                          icon=\"minus\"\n                        >\n                          Block\n                        </TextButton>\n\n                        <TextButton\n                          onClick={() => togglePending(user.id, 'approve')}\n                          label\n                          hoverColor={'brand.default'}\n                          icon=\"plus\"\n                        >\n                          Approve\n                        </TextButton>\n                      </div>\n                    </UserListItem>\n                  </section>\n                );\n              })}\n\n            {pendingUsers.length <= 0 && (\n              <Description>\n                There are no pending requests to join this channel.\n              </Description>\n            )}\n          </ListContainer>\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return (\n      <SectionCard>\n        <ViewError />\n      </SectionCard>\n    );\n  }\n}\n\nexport default compose(getPendingUsersQuery, viewNetworkHandler)(PendingUsers);\n\n\n\n// WEBPACK FOOTER //\n// src/views/channelSettings/components/pendingUsers.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { getThisChannel } from './queries';\nimport { track } from '../../helpers/events';\nimport AppViewWrapper from '../../components/appViewWrapper';\nimport { Loading } from '../../components/loading';\nimport { addToastWithTimeout } from '../../actions/toasts';\nimport { Upsell404Channel } from '../../components/upsell';\nimport viewNetworkHandler from '../../components/viewNetworkHandler';\nimport {\n  togglePendingUserInChannelMutation,\n  unblockUserInChannelMutation,\n} from '../../api/channel';\nimport Titlebar from '../titlebar';\nimport ViewError from '../../components/viewError';\nimport { View } from '../../components/settingsViews/style';\nimport Header from '../../components/settingsViews/header';\nimport Overview from './components/overview';\nimport Subnav from '../../components/settingsViews/subnav';\n\ntype Props = {\n  data: {\n    channel: Object,\n  },\n  location: Object,\n  match: Object,\n  isLoading: boolean,\n  hasError: boolean,\n  dispatch: Function,\n  togglePendingUser: Function,\n  unblockUser: Function,\n};\n\nclass ChannelSettings extends React.Component<Props> {\n  togglePending = (userId, action) => {\n    const { data: { channel }, togglePendingUser, dispatch } = this.props;\n    const input = {\n      channelId: channel.id,\n      userId,\n      action,\n    };\n\n    togglePendingUser(input)\n      .then(({ data: { togglePendingUser } }) => {\n        // the mutation returns a channel object. if it exists,\n        if (togglePendingUser !== undefined) {\n          if (action === 'block') {\n            track('channel', 'blocked pending user', null);\n          }\n\n          if (action === 'approve') {\n            track('channel', 'approved pending user', null);\n          }\n\n          dispatch(addToastWithTimeout('success', 'Saved!'));\n        }\n      })\n      .catch(err => {\n        dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  unblock = (userId: string) => {\n    const { data: { channel }, unblockUser, dispatch } = this.props;\n\n    const input = {\n      channelId: channel.id,\n      userId,\n    };\n\n    unblockUser(input)\n      .then(({ data: { unblockUser } }) => {\n        // the mutation returns a channel object. if it exists,\n        if (unblockUser !== undefined) {\n          track('channel', 'unblocked user', null);\n          dispatch(addToastWithTimeout('success', 'User was un-blocked.'));\n        }\n      })\n      .catch(err => {\n        dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  render() {\n    const {\n      data: { channel },\n      match,\n      location,\n      isLoading,\n      hasError,\n    } = this.props;\n    const { communitySlug, channelSlug } = match.params;\n\n    // this is hacky, but will tell us if we're viewing analytics or the root settings view\n    const pathname = location.pathname;\n    const lastIndex = pathname.lastIndexOf('/');\n    const activeTab = pathname.substr(lastIndex + 1);\n\n    if (channel) {\n      const { isModerator, isOwner } = channel.channelPermissions;\n      const userHasPermissions =\n        isOwner ||\n        isModerator ||\n        channel.community.communityPermissions.isOwner ||\n        channel.community.communityPermissions.isModerator;\n\n      if (!userHasPermissions) {\n        return (\n          <AppViewWrapper>\n            <Titlebar\n              title={`Channel settings`}\n              provideBack={true}\n              backRoute={`/${communitySlug}`}\n              noComposer\n            />\n            <ViewError\n              heading={`You don’t have permission to manage this channel.`}\n              subheading={`Head back to the ${channel.community\n                .name} community to get back on track.`}\n            >\n              <Upsell404Channel community={communitySlug} />\n            </ViewError>\n          </AppViewWrapper>\n        );\n      }\n\n      const ActiveView = () => {\n        switch (activeTab) {\n          case 'settings':\n            return (\n              <Overview\n                community={channel.community}\n                channel={channel}\n                communitySlug={communitySlug}\n                togglePending={this.togglePending}\n                unblock={this.unblock}\n              />\n            );\n          default:\n            return null;\n        }\n      };\n\n      const subnavItems = [\n        {\n          to: `/${channel.community.slug}/${channel.slug}/settings`,\n          label: 'Overview',\n          activeLabel: 'settings',\n        },\n      ];\n\n      const subheading = {\n        to: `/${channel.community.slug}/settings`,\n        label: `Return to ${channel.community.name} settings`,\n      };\n\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={`${channel.name} · ${channel.community.name}`}\n            subtitle={'Settings'}\n            provideBack={true}\n            backRoute={`/${channel.community.slug}/${channel.slug}`}\n            noComposer\n          />\n\n          <View>\n            <Header\n              subheading={subheading}\n              heading={`${channel.name} Settings`}\n            />\n            <Subnav items={subnavItems} activeTab={activeTab} />\n\n            <ActiveView />\n          </View>\n        </AppViewWrapper>\n      );\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (hasError) {\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={'Channel not found'}\n            provideBack={true}\n            backRoute={`/${communitySlug}/${channelSlug}`}\n            noComposer\n          />\n          <ViewError\n            refresh\n            heading={'There was an error fetching this channel.'}\n          />\n        </AppViewWrapper>\n      );\n    }\n\n    return (\n      <AppViewWrapper>\n        <Titlebar\n          title={`Channel not found`}\n          provideBack={true}\n          backRoute={`/${communitySlug}`}\n          noComposer\n        />\n        <ViewError\n          heading={`We couldn’t find a channel with this name.`}\n          subheading={`Head back to the ${communitySlug} community to get back on track.`}\n        >\n          <Upsell404Channel community={communitySlug} />\n        </ViewError>\n      </AppViewWrapper>\n    );\n  }\n}\n\nexport default compose(\n  // $FlowIssue\n  connect(),\n  getThisChannel,\n  togglePendingUserInChannelMutation,\n  unblockUserInChannelMutation,\n  viewNetworkHandler\n)(ChannelSettings);\n\n\n\n// WEBPACK FOOTER //\n// src/views/channelSettings/index.js","import { graphql, gql } from 'react-apollo';\nimport { channelInfoFragment } from '../../api/fragments/channel/channelInfo';\nimport { communityInfoFragment } from '../../api/fragments/community/communityInfo';\nimport { channelMetaDataFragment } from '../../api/fragments/channel/channelMetaData';\n\nexport const getThisChannel = graphql(\n  gql`\n    query thisChannel($channelSlug: String, $communitySlug: String) {\n\t\t\tchannel(channelSlug: $channelSlug, communitySlug: $communitySlug) {\n        ...channelInfo\n        community {\n          ...communityInfo\n        }\n        ...channelMetaData\n      }\n\t\t}\n    ${channelInfoFragment}\n    ${communityInfoFragment}\n    ${channelMetaDataFragment}\n\t`,\n  {\n    options: ({ match }) => ({\n      variables: {\n        channelSlug: match.params.channelSlug.toLowerCase(),\n        communitySlug: match.params.communitySlug.toLowerCase(),\n      },\n      fetchPolicy: 'network-only',\n    }),\n  }\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/channelSettings/queries.js"],"mappings":"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","sourceRoot":""}