{"version":3,"file":"static/js/communitySettings.chunk.js","sources":["/Users/brianlovin/Sites/spectrum/node_modules/validator/lib/isByteLength.js","/Users/brianlovin/Sites/spectrum/node_modules/validator/lib/isEmail.js","/Users/brianlovin/Sites/spectrum/src/api/slackImport.js","/Users/brianlovin/Sites/spectrum/src/components/editForm/style.js","/Users/brianlovin/Sites/spectrum/src/components/emailInvitationForm/index.js","/Users/brianlovin/Sites/spectrum/src/components/emailInvitationForm/style.js","/Users/brianlovin/Sites/spectrum/src/components/settingsViews/header.js","/Users/brianlovin/Sites/spectrum/src/components/settingsViews/subnav.js","/Users/brianlovin/Sites/spectrum/src/components/threadFeed/style.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/components/conversationGrowth.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/components/memberGrowth.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/components/threadListItem.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/components/topAndNewThreads.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/components/topMembers.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/index.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/queries.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/style.js","/Users/brianlovin/Sites/spectrum/src/views/communityAnalytics/utils.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/channelList.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/communityMembers.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/editForm.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/importSlack.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/invoices.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/overview.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/recurringPaymentsList.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/index.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/queries.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nexports.default = isByteLength;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/* eslint-disable prefer-rest-params */\nfunction isByteLength(str, options) {\n  (0, _assertString2.default)(str);\n  var min = void 0;\n  var max = void 0;\n  if ((typeof options === 'undefined' ? 'undefined' : _typeof(options)) === 'object') {\n    min = options.min || 0;\n    max = options.max;\n  } else {\n    // backwards compatibility: isByteLength(str, min [, max])\n    min = arguments[1];\n    max = arguments[2];\n  }\n  var len = encodeURI(str).split(/%..|./).length - 1;\n  return len >= min && (typeof max === 'undefined' || len <= max);\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/validator/lib/isByteLength.js\n// module id = ./node_modules/validator/lib/isByteLength.js\n// module chunks = 1 2 3 4 6 7","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = isEmail;\n\nvar _assertString = require('./util/assertString');\n\nvar _assertString2 = _interopRequireDefault(_assertString);\n\nvar _merge = require('./util/merge');\n\nvar _merge2 = _interopRequireDefault(_merge);\n\nvar _isByteLength = require('./isByteLength');\n\nvar _isByteLength2 = _interopRequireDefault(_isByteLength);\n\nvar _isFQDN = require('./isFQDN');\n\nvar _isFQDN2 = _interopRequireDefault(_isFQDN);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar default_email_options = {\n  allow_display_name: false,\n  require_display_name: false,\n  allow_utf8_local_part: true,\n  require_tld: true\n};\n\n/* eslint-disable max-len */\n/* eslint-disable no-control-regex */\nvar displayName = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\,\\.\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF\\s]*<(.+)>$/i;\nvar emailUserPart = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~]+$/i;\nvar quotedEmailUser = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f]))*$/i;\nvar emailUserUtf8Part = /^[a-z\\d!#\\$%&'\\*\\+\\-\\/=\\?\\^_`{\\|}~\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]+$/i;\nvar quotedEmailUserUtf8 = /^([\\s\\x01-\\x08\\x0b\\x0c\\x0e-\\x1f\\x7f\\x21\\x23-\\x5b\\x5d-\\x7e\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]|(\\\\[\\x01-\\x09\\x0b\\x0c\\x0d-\\x7f\\u00A0-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFFEF]))*$/i;\n/* eslint-enable max-len */\n/* eslint-enable no-control-regex */\n\nfunction isEmail(str, options) {\n  (0, _assertString2.default)(str);\n  options = (0, _merge2.default)(options, default_email_options);\n\n  if (options.require_display_name || options.allow_display_name) {\n    var display_email = str.match(displayName);\n    if (display_email) {\n      str = display_email[1];\n    } else if (options.require_display_name) {\n      return false;\n    }\n  }\n\n  var parts = str.split('@');\n  var domain = parts.pop();\n  var user = parts.join('@');\n\n  var lower_domain = domain.toLowerCase();\n  if (lower_domain === 'gmail.com' || lower_domain === 'googlemail.com') {\n    user = user.replace(/\\./g, '').toLowerCase();\n  }\n\n  if (!(0, _isByteLength2.default)(user, { max: 64 }) || !(0, _isByteLength2.default)(domain, { max: 254 })) {\n    return false;\n  }\n\n  if (!(0, _isFQDN2.default)(domain, { require_tld: options.require_tld })) {\n    return false;\n  }\n\n  if (user[0] === '\"') {\n    user = user.slice(1, user.length - 1);\n    return options.allow_utf8_local_part ? quotedEmailUserUtf8.test(user) : quotedEmailUser.test(user);\n  }\n\n  var pattern = options.allow_utf8_local_part ? emailUserUtf8Part : emailUserPart;\n\n  var user_parts = user.split('.');\n  for (var i = 0; i < user_parts.length; i++) {\n    if (!pattern.test(user_parts[i])) {\n      return false;\n    }\n  }\n\n  return true;\n}\nmodule.exports = exports['default'];\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/validator/lib/isEmail.js\n// module id = ./node_modules/validator/lib/isEmail.js\n// module chunks = 1 2 3 4 6 7","// @flow\n// $FlowFixMe\nimport { graphql, gql } from 'react-apollo';\n\nconst getSlackImportOptions = {\n  options: ({ id }) => ({\n    variables: {\n      id,\n    },\n  }),\n};\n\nexport const getSlackImport = graphql(\n  gql`\n    query getSlackImport($id: ID!) {\n      community(id: $id) {\n        id\n        slackImport {\n          members\n          teamName\n          sent\n        }\n      }\n    }\n  `,\n  getSlackImportOptions\n);\n\nconst SEND_SLACK_INVITATIONS_MUTATION = gql`\n  mutation sendSlackInvites($input: SendSlackInvitesInput!) {\n    sendSlackInvites(input: $input) {\n      id\n      slackImport {\n        members\n        teamName\n        sent\n      }\n    }\n  }\n`;\nconst SEND_SLACK_INVITATIONS_OPTIONS = {\n  props: ({ input, mutate }) => ({\n    sendSlackInvites: input =>\n      mutate({\n        variables: {\n          input,\n        },\n      }),\n  }),\n};\n\nexport const sendSlackInvitationsMutation = graphql(\n  SEND_SLACK_INVITATIONS_MUTATION,\n  SEND_SLACK_INVITATIONS_OPTIONS\n);\n\n\n\n// WEBPACK FOOTER //\n// src/api/slackImport.js","import styled from 'styled-components';\nimport Card from '../card';\nimport { FlexRow, FlexCol, Truncate } from '../globals';\n\nexport const StyledCard = styled(Card)`padding: 16px;`;\n\nexport const Form = styled.form`\n  display: inline-block;\n  flex-direction: column;\n  align-self: stretch;\n  flex: none;\n  max-width: 100%;\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 20px;\n  color: ${props => props.theme.text.default};\n  font-weight: 800;\n  line-height: 1.2;\n  flex: 1 0 auto;\n  ${Truncate};\n`;\n\nexport const Subtitle = styled.h4`\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  line-height: 1.3;\n  width: 100%;\n  ${Truncate};\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: ${props => props.theme.text.default};\n  padding: 8px 0 16px;\n  line-height: 1.4;\n\n  a {\n    color: ${props => props.theme.brand.default};\n  }\n`;\n\nexport const TertiaryActionContainer = styled(FlexRow)`\n  justify-content: flex-start;\n  flex-grow: 1;\n`;\n\nexport const Actions = styled(FlexRow)`\n  margin-top: 24px;\n  justify-content: flex-start;\n  flex-direction: row-reverse;\n  border-top: 1px solid ${props => props.theme.bg.border};\n  padding-top: 16px;\n\n  button + button {\n    margin-left: 8px;\n  }\n`;\n\nexport const PhotoPreview = styled.div`\n  position: relative;\n  width: 48px;\n  height: 48px;\n  object-fit: cover;\n  border-radius: 4px;\n  background-image: url('${props => props.src}')\n`;\n\nexport const GeneralNotice = styled.span`\n  padding: 8px 12px;\n  font-size: 12px;\n  font-weight: 500;\n  color: ${props => props.theme.text.alt};\n  background: ${props => props.theme.bg.wash};\n  border-radius: 4px;\n  margin-top: 24px;\n  line-height: 1.4;\n  display: inline-block;\n`;\n\nexport const ImageInputWrapper = styled(FlexCol)`\n  position: relative;\n  flex: 0 0 auto;\n  margin-top: 8px;\n  margin-bottom: 24px;\n\n  > label:nth-of-type(2) {\n    position: absolute;\n    bottom: -24px;\n    left: 24px;\n  }\n`;\n\nexport const Location = styled(FlexRow)`\n  font-weight: 500;\n  color: ${({ theme }) => theme.text.alt};\n  font-size: 14px;\n  margin-bottom: 8px;\n\n  > div {\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > span {\n    padding: 0 4px;\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > a:hover {\n    color: ${({ theme }) => theme.brand.alt};\n    text-decoration: underline;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Loading = styled.span`\n  display: inline-block;\n  position: absolute;\n  right: 19px;\n  top: 45px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/editForm/style.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\nimport { addToastWithTimeout } from '../../actions/toasts';\nimport Icon from '../icons';\nimport isEmail from 'validator/lib/isEmail';\nimport { sendCommunityEmailInvitationsMutation } from '../../api/community';\nimport { sendChannelEmailInvitationMutation } from '../../api/channel';\nimport { Button } from '../buttons';\nimport { Error } from '../formElements';\nimport { SectionCardFooter } from '../settingsViews/style';\nimport {\n  EmailInviteForm,\n  EmailInviteInput,\n  AddRow,\n  RemoveRow,\n  CustomMessageToggle,\n  CustomMessageTextAreaStyles,\n} from './style';\n\ntype Props = {\n  id: string,\n  dispatch: Function,\n  currentUser: Object,\n  sendEmailInvites: Function,\n};\n\ntype ContactProps = {\n  email: string,\n  firstName: string,\n  lastName: string,\n  error: boolean,\n};\n\ntype State = {\n  isLoading: boolean,\n  contacts: Array<ContactProps>,\n  hasCustomMessage: boolean,\n  customMessageString: string,\n  customMessageError: boolean,\n};\n\nclass EmailInvitationForm extends React.Component<Props, State> {\n  constructor() {\n    super();\n    this.state = {\n      isLoading: false,\n      contacts: [\n        {\n          email: '',\n          firstName: '',\n          lastName: '',\n          error: false,\n        },\n        {\n          email: '',\n          firstName: '',\n          lastName: '',\n          error: false,\n        },\n        {\n          email: '',\n          firstName: '',\n          lastName: '',\n          error: false,\n        },\n      ],\n      hasCustomMessage: false,\n      customMessageString: '',\n      customMessageError: false,\n    };\n  }\n\n  getUniqueEmails = array => array.filter((x, i, a) => a.indexOf(x) === i);\n\n  sendInvitations = () => {\n    const {\n      contacts,\n      hasCustomMessage,\n      customMessageError,\n      customMessageString,\n    } = this.state;\n    const { dispatch, currentUser, sendEmailInvites } = this.props;\n\n    this.setState({ isLoading: true });\n\n    let validContacts = contacts\n      .filter(contact => contact.error === false)\n      .filter(contact => contact.email !== currentUser.email)\n      .filter(contact => contact.email.length > 0)\n      .filter(contact => isEmail(contact.email))\n      .map(({ error, ...contact }) => {\n        return { ...contact };\n      });\n\n    let customMessage =\n      hasCustomMessage && !customMessageError ? customMessageString : null;\n\n    // make sure to uniqify the emails so you can't enter on email multiple times\n    validContacts = this.getUniqueEmails(validContacts);\n\n    if (validContacts.length === 0) {\n      this.setState({\n        isLoading: false,\n      });\n\n      return dispatch(\n        addToastWithTimeout('error', 'No emails entered - try again!')\n      );\n    }\n\n    sendEmailInvites({\n      id: this.props.id,\n      contacts: validContacts,\n      customMessage,\n    })\n      .then(({ data: { sendEmailInvites } }) => {\n        this.setState({\n          isLoading: false,\n          contacts: [\n            {\n              email: '',\n              firstName: '',\n              lastName: '',\n              error: false,\n            },\n            {\n              email: '',\n              firstName: '',\n              lastName: '',\n              error: false,\n            },\n            {\n              email: '',\n              firstName: '',\n              lastName: '',\n              error: false,\n            },\n          ],\n          hasCustomMessage: false,\n          customMessageString: '',\n          customMessageError: false,\n        });\n\n        dispatch(\n          addToastWithTimeout(\n            'success',\n            `Invitations sent to ${\n              validContacts.length > 1\n                ? `${validContacts.length} people`\n                : `${validContacts.length} person`\n            }!`\n          )\n        );\n      })\n      .catch(err => {\n        this.setState({\n          isLoading: false,\n        });\n        dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  handleChange = (e, i, key) => {\n    const { contacts } = this.state;\n    contacts[i][key] = e.target.value;\n\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  addRow = () => {\n    const { contacts } = this.state;\n    contacts.push({\n      email: '',\n      firstName: '',\n      lastName: '',\n      error: false,\n    });\n\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  removeRow = index => {\n    const { contacts } = this.state;\n    contacts.splice(index, 1);\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  validate = (e, i) => {\n    const { contacts } = this.state;\n    if (!isEmail(e.target.value)) {\n      contacts[i].error = true;\n    } else {\n      contacts[i].error = false;\n    }\n\n    this.setState({\n      ...this.state,\n      contacts,\n    });\n  };\n\n  handleCustomMessageChange = e => {\n    const customMessageString = e.target.value;\n    if (customMessageString.length > 500) {\n      this.setState({\n        customMessageString,\n        customMessageError: true,\n      });\n    } else {\n      this.setState({\n        customMessageString,\n        customMessageError: false,\n      });\n    }\n  };\n\n  toggleCustomMessage = () => {\n    const { hasCustomMessage } = this.state;\n    this.setState({\n      hasCustomMessage: !hasCustomMessage,\n    });\n  };\n\n  render() {\n    const {\n      contacts,\n      isLoading,\n      hasCustomMessage,\n      customMessageString,\n      customMessageError,\n    } = this.state;\n\n    return (\n      <div>\n        {contacts.map((contact, i) => {\n          return (\n            <EmailInviteForm key={i}>\n              <EmailInviteInput\n                error={contact.error}\n                type=\"email\"\n                onBlur={e => this.validate(e, i)}\n                placeholder=\"Email address\"\n                value={contact.email}\n                onChange={e => this.handleChange(e, i, 'email')}\n              />\n              <EmailInviteInput\n                type=\"text\"\n                placeholder=\"First name (optional)\"\n                value={contact.firstName}\n                onChange={e => this.handleChange(e, i, 'firstName')}\n                hideOnMobile\n              />\n              <RemoveRow onClick={() => this.removeRow(i)}>\n                <Icon glyph=\"view-close\" size=\"16\" />\n              </RemoveRow>\n            </EmailInviteForm>\n          );\n        })}\n\n        <AddRow onClick={this.addRow}>+ Add another</AddRow>\n\n        <CustomMessageToggle onClick={this.toggleCustomMessage}>\n          <Icon glyph={hasCustomMessage ? 'view-close' : 'post'} size={20} />\n          {hasCustomMessage\n            ? 'Remove custom message'\n            : 'Optional: Add a custom message to your invitation'}\n        </CustomMessageToggle>\n\n        {hasCustomMessage && (\n          <Textarea\n            autoFocus\n            value={customMessageString}\n            placeholder=\"Write something sweet here...\"\n            style={{\n              ...CustomMessageTextAreaStyles,\n              border: customMessageError\n                ? '2px solid #E3353C'\n                : '2px solid #DFE7EF',\n            }}\n            onChange={this.handleCustomMessageChange}\n          />\n        )}\n\n        {hasCustomMessage &&\n          customMessageError && (\n            <Error>\n              Your custom invitation message can be up to 500 characters.\n            </Error>\n          )}\n\n        <SectionCardFooter>\n          <Button\n            loading={isLoading}\n            onClick={this.sendInvitations}\n            disabled={hasCustomMessage && customMessageError}\n          >\n            Send Invitations\n          </Button>\n        </SectionCardFooter>\n      </div>\n    );\n  }\n}\n\nconst map = state => ({ currentUser: state.users.currentUser });\n\nexport const CommunityInvitationForm = compose(\n  // $FlowIssue\n  connect(map),\n  sendCommunityEmailInvitationsMutation\n)(EmailInvitationForm);\n\nexport const ChannelInvitationForm = compose(\n  // $FlowIssue\n  connect(map),\n  sendChannelEmailInvitationMutation\n)(EmailInvitationForm);\n\n\n\n// WEBPACK FOOTER //\n// src/components/emailInvitationForm/index.js","import styled from 'styled-components';\n\nexport const EmailInviteForm = styled.div`\n  display: flex;\n  align-items: center;\n\n  &:first-of-type {\n    margin-top: 16px;\n  }\n`;\n\nexport const EmailInviteInput = styled.input`\n  display: flex;\n  flex: 1 1 50%;\n  padding: 8px 12px;\n  font-size: 14px;\n  border-radius: 4px;\n  border: 2px solid\n    ${props => (props.error ? props.theme.warn.default : props.theme.bg.border)};\n  margin-bottom: 8px;\n  margin-top: 8px;\n  margin-left: 4px;\n  margin-right: 4px;\n\n  &:first-of-type {\n    margin-left: 0;\n  }\n\n  &:last-of-type {\n    margin-right: 0;\n  }\n\n  &:focus {\n    border: 2px solid ${props => props.theme.brand.default};\n  }\n\n  @media screen and (max-width: 768px) {\n    display: ${props => (props.hideOnMobile ? 'none' : 'auto')};\n  }\n`;\n\nexport const AddRow = styled.div`\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  padding: 8px;\n  background: ${props => props.theme.bg.wash};\n  margin-top: 8px;\n  margin-bottom: 16px;\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  font-weight: 500;\n  border-radius: 4px;\n\n  &:hover {\n    color: ${props => props.theme.text.default};\n    cursor: pointer;\n  }\n`;\n\nexport const RemoveRow = styled.div`\n  margin-left: 4px;\n  color: ${props => props.theme.text.alt};\n\n  &:hover {\n    cursor: pointer;\n    color: ${props => props.theme.text.default};\n  }\n`;\n\nexport const CustomMessageToggle = styled.h4`\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  margin-top: 16px;\n\n  &:hover {\n    color: ${props => props.theme.brand.default};\n    cursor: pointer;\n  }\n\n  div {\n    position: relative;\n    top: 5px;\n    margin-right: 4px;\n  }\n`;\n\nexport const CustomMessageTextAreaStyles = {\n  width: '100%',\n  borderRadius: '8px',\n  padding: '16px',\n  marginTop: '8px',\n  fontSize: '14px',\n};\n\n\n\n// WEBPACK FOOTER //\n// src/components/emailInvitationForm/style.js","// @flow\nimport * as React from 'react';\nimport Link from 'src/components/link';\nimport { StyledHeader, Heading, Subheading, HeaderText } from './style';\nimport Avatar from '../avatar';\n\ntype Props = {\n  avatar?: {\n    profilePhoto: string,\n    community: Object,\n  },\n  subheading: {\n    to: string,\n    label: string,\n  },\n  heading: string,\n};\n\nclass Header extends React.Component<Props> {\n  render() {\n    const { avatar, subheading, heading } = this.props;\n    return (\n      <StyledHeader>\n        {avatar && (\n          <Avatar\n            community={avatar.community}\n            src={avatar.profilePhoto}\n            size={'48'}\n            radius={8}\n          />\n        )}\n        <HeaderText>\n          <Link to={subheading.to}>\n            <Subheading>{subheading.label}</Subheading>\n          </Link>\n          <Heading>{heading}</Heading>\n        </HeaderText>\n      </StyledHeader>\n    );\n  }\n}\n\nexport default Header;\n\n\n\n// WEBPACK FOOTER //\n// src/components/settingsViews/header.js","// @flow\nimport * as React from 'react';\nimport Link from 'src/components/link';\nimport { StyledSubnav, SubnavList, SubnavListItem } from './style';\n\ntype SubnavItem = {\n  to: string,\n  label: string,\n  activeLabel: string,\n};\ntype Props = {\n  items: Array<SubnavItem>,\n  activeTab: string,\n};\n\nclass Subnav extends React.Component<Props> {\n  render() {\n    const { activeTab, items } = this.props;\n\n    return (\n      <StyledSubnav>\n        <SubnavList>\n          {items.map((item, i) => {\n            return (\n              <SubnavListItem key={i} active={activeTab === item.activeLabel}>\n                <Link to={item.to}>{item.label}</Link>\n              </SubnavListItem>\n            );\n          })}\n        </SubnavList>\n      </StyledSubnav>\n    );\n  }\n}\n\nexport default Subnav;\n\n\n\n// WEBPACK FOOTER //\n// src/components/settingsViews/subnav.js","// @flow\n// $FlowFixMe\nimport styled from 'styled-components';\nimport { OutlineButton } from '../buttons';\n\nexport const FetchMoreButton = styled(OutlineButton)`\n  width: 100%;\n  padding: 16px 0;\n\n  @media (max-width: 768px) {\n    padding: 32px 0;\n    border-radius: 0;\n    background: #fff;\n    font-size: 16px;\n    font-weight: 600;\n    color: ${props => props.theme.brand.default};\n    border: none;\n    box-shadow: none;\n    border-top: 2px solid ${props => props.theme.bg.border};\n\n    &:hover {\n      background: ${props => props.theme.bg.wash};\n      border-radius: 0;\n      box-shadow: none;\n    }\n  }\n`;\n\nexport const Divider = styled.div`\n  border-bottom: 2px solid ${props => props.theme.bg.border};\n  width: 100%;\n  display: block;\n  padding-top: 24px;\n  margin-bottom: 24px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/threadFeed/style.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { Loading } from '../../../components/loading';\nimport {\n  SectionCard,\n  SectionSubtitle,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { getCommunityConversationGrowth } from '../queries';\nimport { parseGrowth } from '../utils';\n\ntype GrowthType = {\n  growth: number,\n  currentPeriodCount: number,\n  prevPeriodCount: number,\n};\n\ntype Props = {\n  isLoading: boolean,\n  data: {\n    community: {\n      conversationGrowth: {\n        count: number,\n        weeklyGrowth: GrowthType,\n        monthlyGrowth: GrowthType,\n        quarterlyGrowth: GrowthType,\n      },\n    },\n  },\n};\n\nclass ConversationGrowth extends React.Component<Props> {\n  render() {\n    const { data: { community }, isLoading } = this.props;\n\n    if (community) {\n      const {\n        count,\n        weeklyGrowth,\n        monthlyGrowth,\n        quarterlyGrowth,\n      } = community.conversationGrowth;\n      return (\n        <SectionCard>\n          <SectionSubtitle>Your community‘s conversations</SectionSubtitle>\n          <SectionTitle>\n            {count.toLocaleString()} total conversations\n          </SectionTitle>\n          {parseGrowth(weeklyGrowth, 'this week')}\n          {parseGrowth(monthlyGrowth, 'this month')}\n          {parseGrowth(quarterlyGrowth, 'this quarter')}\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default compose(getCommunityConversationGrowth, viewNetworkHandler)(\n  ConversationGrowth\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/components/conversationGrowth.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { Loading } from '../../../components/loading';\nimport {\n  SectionCard,\n  SectionSubtitle,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { getCommunityMemberGrowth } from '../queries';\nimport { parseGrowth } from '../utils';\n\ntype GrowthType = {\n  growth: number,\n  currentPeriodCount: number,\n  prevPeriodCount: number,\n};\n\ntype Props = {\n  isLoading: boolean,\n  data: {\n    community: {\n      memberGrowth: {\n        count: number,\n        weeklyGrowth: GrowthType,\n        monthlyGrowth: GrowthType,\n        quarterlyGrowth: GrowthType,\n      },\n    },\n  },\n};\n\nclass MemberGrowth extends React.Component<Props> {\n  render() {\n    const { data: { community }, isLoading } = this.props;\n\n    if (community) {\n      const {\n        count,\n        weeklyGrowth,\n        monthlyGrowth,\n        quarterlyGrowth,\n      } = community.memberGrowth;\n      return (\n        <SectionCard>\n          <SectionSubtitle>Your community</SectionSubtitle>\n          <SectionTitle>{count.toLocaleString()} members</SectionTitle>\n          {parseGrowth(weeklyGrowth, 'this week')}\n          {parseGrowth(monthlyGrowth, 'this month')}\n          {parseGrowth(quarterlyGrowth, 'this quarter')}\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default compose(getCommunityMemberGrowth, viewNetworkHandler)(\n  MemberGrowth\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/components/memberGrowth.js","import * as React from 'react';\nimport Link from 'src/components/link';\nimport {\n  StyledThreadListItem,\n  ThreadListItemTitle,\n  ThreadListItemSubtitle,\n} from '../style';\n\ntype ThreadProps = {\n  id: string,\n  creator: {\n    name: string,\n    username: string,\n  },\n  content: {\n    title: string,\n  },\n  createdAt: Date,\n  messageCount: number,\n};\n\ntype Props = {\n  thread: ThreadProps,\n};\n\nclass ThreadListItem extends React.Component<Props> {\n  render() {\n    const {\n      thread: {\n        id,\n        creator: { name, username },\n        content: { title },\n        messageCount,\n      },\n    } = this.props;\n\n    return (\n      <StyledThreadListItem>\n        <Link\n          to={{\n            pathname: window.location.pathname,\n            search: `?thread=${id}`,\n          }}\n        >\n          <ThreadListItemTitle>{title}</ThreadListItemTitle>\n        </Link>\n        {messageCount > 0 && (\n          <ThreadListItemSubtitle>\n            {messageCount > 1 ? `${messageCount} messages` : `1 message`}\n          </ThreadListItemSubtitle>\n        )}\n        <ThreadListItemSubtitle>\n          By <Link to={`/users/${username}`}>{name}</Link>\n        </ThreadListItemSubtitle>\n      </StyledThreadListItem>\n    );\n  }\n}\n\nexport default ThreadListItem;\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/components/threadListItem.js","import * as React from 'react';\nimport compose from 'recompose/compose';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { Loading } from '../../../components/loading';\nimport ViewError from '../../../components/viewError';\nimport ThreadListItem from './threadListItem';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { getCommunityTopAndNewThreads } from '../queries';\n\ntype Thread = {\n  id: string,\n  content: {\n    title: string,\n  },\n  messageCount: number,\n  createdAt: string,\n  creator: {\n    id: string,\n    username: string,\n    name: string,\n    profilePhoto: string,\n  },\n};\n\ntype Props = {\n  isLoading: boolean,\n  data: {\n    community: {\n      topAndNewThreads: {\n        topThreads: Array<Thread>,\n        newThreads: Array<Thread>,\n      },\n    },\n  },\n};\n\nclass TopAndNewThreads extends React.Component<Props> {\n  render() {\n    const { data: { community }, isLoading } = this.props;\n\n    if (community) {\n      const { topAndNewThreads: { topThreads, newThreads } } = community;\n      // resort on the client because while the server *did* technically return the top threads, they get unsorted during the 'getThreads' model query\n      const sortedTopThreads = topThreads.slice().sort((a, b) => {\n        const bc = parseInt(b.messageCount, 10);\n        const ac = parseInt(a.messageCount, 10);\n        return bc <= ac ? -1 : 1;\n      });\n\n      return (\n        <span>\n          <SectionCard>\n            <SectionTitle>Top conversations this week</SectionTitle>\n            {sortedTopThreads.length > 0 ? (\n              sortedTopThreads.map(thread => {\n                return <ThreadListItem key={thread.id} thread={thread} />;\n              })\n            ) : (\n              <ViewError\n                small\n                emoji={'😴'}\n                heading={`It’s been a bit quiet this week.`}\n                subheading={`Top conversations will show up here when people start chatting.`}\n              />\n            )}\n          </SectionCard>\n          <SectionCard>\n            <SectionTitle>Unanswered conversations this week</SectionTitle>\n            {newThreads.length > 0 ? (\n              newThreads.map(thread => {\n                return <ThreadListItem key={thread.id} thread={thread} />;\n              })\n            ) : (\n              <ViewError\n                small\n                emoji={'✌️'}\n                heading={`All caught up!.`}\n                subheading={`It looks like everyone is getting responses in their conversations - nice work!`}\n              />\n            )}\n          </SectionCard>\n        </span>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default compose(getCommunityTopAndNewThreads, viewNetworkHandler)(\n  TopAndNewThreads\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/components/topAndNewThreads.js","// @flow\nimport * as React from 'react';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport Icon from '../../../components/icons';\nimport { initNewThreadWithUser } from '../../../actions/directMessageThreads';\nimport compose from 'recompose/compose';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { Loading } from '../../../components/loading';\nimport ViewError from '../../../components/viewError';\nimport { UserListItem } from '../../../components/listItems';\nimport {\n  MessageIcon,\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { getCommunityTopMembers } from '../queries';\n\ntype User = {\n  id: string,\n  profilePhoto: string,\n  name: string,\n  username: string,\n  contextPermissions: {\n    isOwner: boolean,\n    isMember: boolean,\n    isModerator: boolean,\n    reputation: number,\n  },\n};\n\ntype Props = {\n  isLoading: boolean,\n  data: {\n    community: {\n      topMembers: Array<User>,\n    },\n  },\n  dispatch: Function,\n  history: Object,\n};\n\nclass ConversationGrowth extends React.Component<Props> {\n  initMessage = user => {\n    this.props.dispatch(initNewThreadWithUser(user));\n    this.props.history.push('/messages/new');\n  };\n\n  render() {\n    const { data: { community }, isLoading } = this.props;\n\n    if (community && community.topMembers.length > 0) {\n      const sortedTopMembers = community.topMembers.slice().sort((a, b) => {\n        const bc = parseInt(b.contextPermissions.reputation, 10);\n        const ac = parseInt(a.contextPermissions.reputation, 10);\n        return bc <= ac ? -1 : 1;\n      });\n      return (\n        <SectionCard>\n          <SectionTitle>Top members this week</SectionTitle>\n          {sortedTopMembers.map(user => {\n            return (\n              <UserListItem key={user.id} user={user}>\n                <MessageIcon\n                  tipText={`Message ${user.name}`}\n                  tipLocation={'top-left'}\n                  onClick={() => this.initMessage(user)}\n                >\n                  <Icon glyph=\"message-new\" size={32} />\n                </MessageIcon>\n              </UserListItem>\n            );\n          })}\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return (\n      <SectionCard>\n        <SectionTitle>Top members this week</SectionTitle>\n        <ViewError\n          small\n          emoji={'😭'}\n          heading={`Your community has been quiet this week`}\n          subheading={`When people are posting new threads and joining conversations, the most active people will appear here.`}\n        />\n      </SectionCard>\n    );\n  }\n}\n\nexport default compose(\n  connect(),\n  withRouter,\n  getCommunityTopMembers,\n  viewNetworkHandler\n)(ConversationGrowth);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/components/topMembers.js","import React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport Link from 'src/components/link';\nimport { getThisCommunity } from './queries';\nimport { openModal } from '../../actions/modals';\nimport ViewError from '../../components/viewError';\nimport viewNetworkHandler from '../../components/viewNetworkHandler';\nimport { Button, OutlineButton, ButtonRow } from '../../components/buttons';\nimport MemberGrowth from './components/memberGrowth';\nimport ConversationGrowth from './components/conversationGrowth';\nimport TopMembers from './components/topMembers';\nimport TopAndNewThreads from './components/topAndNewThreads';\nimport {\n  SectionsContainer,\n  Column,\n} from '../../components/settingsViews/style';\nimport { Loading } from '../../components/loading';\n\ntype Props = {\n  community: {\n    name: string,\n    profilePhoto: string,\n    slug: string,\n    isPro: boolean,\n  },\n  communitySlug: string,\n  isLoading: boolean,\n  hasError: boolean,\n  dispatch: Function,\n};\n\ntype State = {\n  timeframe: 'weekly' | 'monthly',\n};\n\nclass CommunityAnalytics extends React.Component<Props, State> {\n  upgrade = () => {\n    const { dispatch, currentUser, data: { community } } = this.props;\n    dispatch(\n      openModal('COMMUNITY_UPGRADE_MODAL', { user: currentUser, community })\n    );\n  };\n\n  render() {\n    const { data: { community }, isLoading } = this.props;\n\n    if (community) {\n      if (!community.isPro) {\n        return (\n          <ViewError\n            emoji={'💪'}\n            heading={`Supercharge your community with Spectrum Analytics.`}\n            subheading={`To explore analytics for your community, unlock private channels, add multiple moderators, and more, please upgrade to the standard plan.`}\n          >\n            <ButtonRow>\n              <Button onClick={this.upgrade} large>\n                Upgrade to Standard\n              </Button>\n            </ButtonRow>\n          </ViewError>\n        );\n      }\n\n      return (\n        <SectionsContainer>\n          <Column>\n            <MemberGrowth communitySlug={community.slug} />\n            <TopMembers communitySlug={community.slug} />\n          </Column>\n          <Column>\n            <ConversationGrowth communitySlug={community.slug} />\n            <TopAndNewThreads communitySlug={community.slug} />\n          </Column>\n        </SectionsContainer>\n      );\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    return (\n      <ViewError\n        heading={`You don’t have permission to manage this community.`}\n        subheading={`If you want to create your own community, you can get started below.`}\n      >\n        <ButtonRow>\n          <Link to={`/`}>\n            <OutlineButton large>Take me back</OutlineButton>\n          </Link>\n\n          <Link to={`/new/community`}>\n            <Button large>Create a community</Button>\n          </Link>\n        </ButtonRow>\n      </ViewError>\n    );\n  }\n}\n\nconst map = state => ({ currentUser: state.users.currentUser });\nexport default compose(connect(map), getThisCommunity, viewNetworkHandler)(\n  CommunityAnalytics\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/index.js","// @flow\n// $FlowFixMe\nimport { graphql, gql } from 'react-apollo';\nimport { communityInfoFragment } from '../../api/fragments/community/communityInfo';\nimport { userInfoFragment } from '../../api/fragments/user/userInfo';\nimport { threadInfoFragment } from '../../api/fragments/thread/threadInfo';\nimport { communityMetaDataFragment } from '../../api/fragments/community/communityMetaData';\n\nexport const getThisCommunity = graphql(\n  gql`\n    query community($slug: String) {\n      community(slug: $slug) {\n        ...communityInfo\n        ...communityMetaData\n      }\n    }\n    ${communityInfoFragment}\n    ${communityMetaDataFragment}\n  `,\n  {\n    options: props => ({\n      variables: {\n        slug: props.communitySlug.toLowerCase(),\n      },\n      fetchPolicy: 'network-only',\n    }),\n  }\n);\n\nconst COMMUNITY_GROWTH_QUERY = gql`\n  query getCommunityMemberGrowth($slug: String) {\n    community(slug: $slug) {\n      ...communityInfo\n      memberGrowth {\n        count\n        weeklyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        monthlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        quarterlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n`;\n\nconst COMMUNITY_GROWTH_OPTIONS = {\n  options: ({ communitySlug }: { communitySlug: string }) => ({\n    variables: {\n      slug: communitySlug.toLowerCase(),\n    },\n    fetchPolicy: 'cache-and-network',\n  }),\n};\n\nexport const getCommunityMemberGrowth = graphql(\n  COMMUNITY_GROWTH_QUERY,\n  COMMUNITY_GROWTH_OPTIONS\n);\n\nconst COMMUNITY_CONVERSATION_GROWTH_QUERY = gql`\n  query getCommunityConversationGrowth($slug: String) {\n    community(slug: $slug) {\n      ...communityInfo\n      conversationGrowth {\n        count\n        weeklyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        monthlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n        quarterlyGrowth {\n          growth\n          currentPeriodCount\n          prevPeriodCount\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n`;\n\nconst COMMUNITY_CONVERSATION_GROWTH_OPTIONS = {\n  options: ({ communitySlug }: { communitySlug: string }) => ({\n    variables: {\n      slug: communitySlug.toLowerCase(),\n    },\n    fetchPolicy: 'cache-and-network',\n  }),\n};\n\nexport const getCommunityConversationGrowth = graphql(\n  COMMUNITY_CONVERSATION_GROWTH_QUERY,\n  COMMUNITY_CONVERSATION_GROWTH_OPTIONS\n);\n\nconst COMMUNITY_TOP_MEMBERS_QUERY = gql`\n  query getCommunityTopMembers($slug: String) {\n    community(slug: $slug) {\n      ...communityInfo\n      topMembers {\n        ...userInfo\n        isPro\n        contextPermissions {\n          reputation\n          isOwner\n          isModerator\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${userInfoFragment}\n`;\n\nconst COMMUNITY_TOP_MEMBERS_OPTIONS = {\n  options: ({ communitySlug }: { communitySlug: string }) => ({\n    variables: {\n      slug: communitySlug.toLowerCase(),\n    },\n    fetchPolicy: 'cache-and-network',\n  }),\n};\n\nexport const getCommunityTopMembers = graphql(\n  COMMUNITY_TOP_MEMBERS_QUERY,\n  COMMUNITY_TOP_MEMBERS_OPTIONS\n);\n\nconst COMMUNITY_TOP_NEW_THREADS_QUERY = gql`\n  query getCommunityTopAndNewThreads($slug: String) {\n    community(slug: $slug) {\n      ...communityInfo\n      topAndNewThreads {\n        topThreads {\n          ...threadInfo\n        }\n        newThreads {\n          ...threadInfo\n        }\n      }\n    }\n  }\n  ${communityInfoFragment}\n  ${threadInfoFragment}\n`;\n\nconst COMMUNITY_TOP_NEW_THREADS_OPTIONS = {\n  options: ({ communitySlug }: { communitySlug: string }) => ({\n    variables: {\n      slug: communitySlug.toLowerCase(),\n    },\n    fetchPolicy: 'cache-and-network',\n  }),\n};\n\nexport const getCommunityTopAndNewThreads = graphql(\n  COMMUNITY_TOP_NEW_THREADS_QUERY,\n  COMMUNITY_TOP_NEW_THREADS_OPTIONS\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/queries.js","// @flow\n// $FlowFixMe\nimport styled from 'styled-components';\n\nexport const Heading = styled.h1`\n  margin-left: 16px;\n  font-size: 32px;\n  color: ${props => props.theme.text.default};\n  font-weight: 800;\n`;\n\nexport const Subheading = styled.h3`\n  margin-left: 16px;\n  font-size: 16px;\n  color: ${props => props.theme.text.alt};\n  font-weight: 500;\n  line-height: 1;\n  margin-bottom: 8px;\n`;\n\nexport const StyledHeader = styled.div`\n  display: flex;\n  padding: 32px;\n  border-bottom: 1px solid ${props => props.theme.bg.border};\n  background: ${props => props.theme.bg.default};\n  width: 100%;\n  align-items: center;\n`;\n\nexport const HeaderText = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n`;\n\nexport const StyledThreadListItem = styled.div`\n  display: flex;\n  border-bottom: 1px solid ${props => props.theme.bg.border};\n  padding: 16px 0;\n  flex-direction: column;\n\n  &:last-of-type {\n    border-bottom: 0;\n    padding-bottom: 0;\n  }\n`;\nexport const ThreadListItemTitle = styled.h4`\n  font-size: 16px;\n  color: ${props => props.theme.text.default};\n  line-height: 1.28;\n  font-weight: 500;\n\n  &:hover {\n    color: ${props => props.theme.brand.alt};\n  }\n`;\n\nexport const ThreadListItemSubtitle = styled.h5`\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  line-height: 1.28;\n  margin-top: 4px;\n\n  a:hover {\n    color: ${props => props.theme.text.default};\n  }\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/style.js","// @flow\nimport React from 'react';\nimport {\n  SectionSubtitle,\n  GrowthText,\n} from '../../components/settingsViews/style';\n\nexport const parseGrowth = (\n  {\n    growth,\n    currentPeriodCount,\n    prevPeriodCount,\n  }: { growth: number, currentPeriodCount: number, prevPeriodCount: number },\n  range: string\n) => {\n  if (!growth) {\n    return null;\n  } else if (growth > 0) {\n    return (\n      <div>\n        <SectionSubtitle>\n          <GrowthText positive>+{growth}%</GrowthText>\n          {range}\n        </SectionSubtitle>\n      </div>\n    );\n  } else if (growth < 0) {\n    return (\n      <div>\n        <SectionSubtitle>\n          <GrowthText negative>{growth}%</GrowthText>\n          {range}\n        </SectionSubtitle>\n      </div>\n    );\n  } else {\n    return (\n      <div>\n        <SectionSubtitle>\n          <GrowthText>+0%</GrowthText>\n          {range}\n        </SectionSubtitle>\n      </div>\n    );\n  }\n};\n\n\n\n// WEBPACK FOOTER //\n// src/views/communityAnalytics/utils.js","//@flow\nimport React from 'react';\n//$FlowFixMe\nimport Link from 'src/components/link';\n//$FlowFixMe\nimport { connect } from 'react-redux';\n//$FlowFixMe\nimport compose from 'recompose/compose';\nimport { openModal } from '../../../actions/modals';\nimport { Loading } from '../../../components/loading';\nimport { ChannelListItem } from '../../../components/listItems';\nimport { IconButton, Button } from '../../../components/buttons';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport ViewError from '../../../components/viewError';\nimport { getCommunityChannels } from '../queries';\nimport { ListContainer } from '../style';\nimport {\n  SectionCard,\n  SectionTitle,\n  SectionCardFooter,\n} from '../../../components/settingsViews/style';\n\ntype Props = {\n  data: {\n    community: Object,\n  },\n  isLoading: boolean,\n  dispatch: Function,\n  communitySlug: string,\n};\n\nclass ChannelList extends React.Component<Props> {\n  render() {\n    const {\n      data: { community },\n      isLoading,\n      dispatch,\n      communitySlug,\n    } = this.props;\n\n    if (community) {\n      const channels = community.channelConnection.edges.map(c => c.node);\n\n      return (\n        <SectionCard>\n          <SectionTitle>Channels</SectionTitle>\n\n          <ListContainer>\n            {channels.length > 0 &&\n              channels.map(item => {\n                return (\n                  <Link\n                    key={item.id}\n                    to={`/${communitySlug}/${item.slug}/settings`}\n                  >\n                    <ChannelListItem contents={item} withDescription={false}>\n                      <IconButton glyph=\"settings\" />\n                    </ChannelListItem>\n                  </Link>\n                );\n              })}\n          </ListContainer>\n\n          <SectionCardFooter>\n            <Button\n              style={{ alignSelf: 'flex-start' }}\n              icon={'plus'}\n              onClick={() =>\n                dispatch(openModal('CREATE_CHANNEL_MODAL', community))\n              }\n            >\n              Create Channel\n            </Button>\n          </SectionCardFooter>\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return (\n      <SectionCard>\n        <ViewError\n          refresh\n          small\n          heading={`We couldn’t load the channels for this community.`}\n        />\n      </SectionCard>\n    );\n  }\n}\n\nexport default compose(connect(), getCommunityChannels, viewNetworkHandler)(\n  ChannelList\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/channelList.js","import * as React from 'react';\nimport { UserListItem } from '../../../components/listItems';\nimport compose from 'recompose/compose';\nimport { Loading } from '../../../components/loading';\nimport ViewError from '../../../components/viewError';\nimport { getCommunityMembersQuery } from '../../../api/community';\nimport { FetchMoreButton } from '../../../components/threadFeed/style';\nimport { ListContainer } from '../../../components/listItems/style';\nimport {\n  SectionCard,\n  SectionCardFooter,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\n\ntype Props = {};\nclass CommunityMembers extends React.Component<Props> {\n  render() {\n    const { data: { error, community, networkStatus, fetchMore } } = this.props;\n    const members =\n      community &&\n      community.memberConnection &&\n      community.memberConnection.edges.map(member => member.node);\n    const totalCount =\n      community && community.metaData && community.metaData.members;\n\n    if (networkStatus === 1) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    } else if (error) {\n      return (\n        <SectionCard>\n          <ViewError small />\n        </SectionCard>\n      );\n    } else {\n      return (\n        <SectionCard>\n          <SectionTitle>{totalCount.toLocaleString()} Members</SectionTitle>\n\n          <ListContainer>\n            {members &&\n              members.map(user => {\n                return (\n                  <section key={user.id}>\n                    <UserListItem\n                      user={user}\n                      reputationTipText={'Rep in this community'}\n                    />\n                  </section>\n                );\n              })}\n          </ListContainer>\n\n          {community.memberConnection.pageInfo.hasNextPage && (\n            <SectionCardFooter>\n              <FetchMoreButton\n                color={'brand.default'}\n                loading={networkStatus === 3}\n                onClick={() => fetchMore()}\n              >\n                Load more\n              </FetchMoreButton>\n            </SectionCardFooter>\n          )}\n        </SectionCard>\n      );\n    }\n  }\n}\n\nexport default compose(getCommunityMembersQuery)(CommunityMembers);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/communityMembers.js","import * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { withRouter } from 'react-router';\nimport { track } from '../../../helpers/events';\nimport {\n  editCommunityMutation,\n  deleteCommunityMutation,\n} from '../../../api/community';\nimport { openModal } from '../../../actions/modals';\nimport { addToastWithTimeout } from '../../../actions/toasts';\nimport { Button, IconButton } from '../../../components/buttons';\nimport { Notice } from '../../../components/listItems/style';\nimport {\n  Input,\n  UnderlineInput,\n  TextArea,\n  PhotoInput,\n  Error,\n  CoverInput,\n} from '../../../components/formElements';\nimport {\n  Form,\n  FormTitle,\n  Description,\n  Actions,\n  TertiaryActionContainer,\n  ImageInputWrapper,\n} from '../../../components/editForm/style';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\n\ntype Props = {};\nclass EditForm extends React.Component<Props> {\n  state: {\n    name: string,\n    slug: string,\n    description: string,\n    communityId: string,\n    website: string,\n    image: string,\n    coverPhoto: string,\n    file: ?Object,\n    coverFile: ?Object,\n    communityData: Object,\n    photoSizeError: boolean,\n    nameError: boolean,\n    isLoading: boolean,\n  };\n\n  constructor(props) {\n    super(props);\n\n    const { community } = this.props;\n    this.state = {\n      name: community.name,\n      slug: community.slug,\n      description: community.description,\n      communityId: community.id,\n      website: community.website,\n      image: community.profilePhoto,\n      coverPhoto: community.coverPhoto,\n      file: null,\n      coverFile: null,\n      nameError: false,\n      communityData: community,\n      photoSizeError: false,\n      isLoading: false,\n    };\n  }\n\n  changeName = e => {\n    const name = e.target.value;\n\n    if (name.length >= 20) {\n      this.setState({\n        name,\n        nameError: true,\n      });\n\n      return;\n    }\n\n    this.setState({\n      name,\n      nameError: false,\n    });\n  };\n\n  changeDescription = e => {\n    const description = e.target.value;\n    this.setState({\n      description,\n    });\n  };\n\n  changeSlug = e => {\n    const slug = e.target.value;\n    this.setState({\n      slug,\n    });\n  };\n\n  changeWebsite = e => {\n    const website = e.target.value;\n    this.setState({\n      website,\n    });\n  };\n\n  setCommunityPhoto = e => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    this.setState({\n      isLoading: true,\n    });\n\n    if (file && file.size > 3000000) {\n      return this.setState({\n        photoSizeError: true,\n        isLoading: false,\n      });\n    }\n\n    reader.onloadend = () => {\n      track('community', 'profile photo uploaded', null);\n\n      this.setState({\n        file: file,\n        image: reader.result,\n        photoSizeError: false,\n        isLoading: false,\n      });\n    };\n\n    if (file) {\n      reader.readAsDataURL(file);\n    }\n  };\n\n  setCommunityCover = e => {\n    let reader = new FileReader();\n    let file = e.target.files[0];\n\n    this.setState({\n      isLoading: true,\n    });\n\n    if (file && file.size > 3000000) {\n      return this.setState({\n        photoSizeError: true,\n        isLoading: false,\n      });\n    }\n\n    reader.onloadend = () => {\n      track('community', 'cover photo uploaded', null);\n\n      this.setState({\n        coverFile: file,\n        coverPhoto: reader.result,\n        photoSizeError: false,\n        isLoading: false,\n      });\n    };\n\n    reader.readAsDataURL(file);\n  };\n\n  save = e => {\n    e.preventDefault();\n    const {\n      name,\n      description,\n      website,\n      file,\n      coverFile,\n      communityId,\n      photoSizeError,\n    } = this.state;\n    const input = {\n      name,\n      description,\n      website,\n      file,\n      coverFile,\n      communityId,\n    };\n\n    if (photoSizeError) {\n      return;\n    }\n\n    this.setState({\n      isLoading: true,\n    });\n\n    this.props\n      .editCommunity(input)\n      .then(({ data: { editCommunity } }) => {\n        const community = editCommunity;\n\n        this.setState({\n          isLoading: false,\n        });\n\n        // community was returned\n        if (community !== undefined) {\n          track('community', 'edited', null);\n\n          this.props.dispatch(\n            addToastWithTimeout('success', 'Community saved!')\n          );\n          window.location.href = `/${this.props.community.slug}`;\n        }\n      })\n      .catch(err => {\n        this.setState({\n          isLoading: false,\n        });\n\n        this.props.dispatch(\n          addToastWithTimeout(\n            'error',\n            `Something went wrong and we weren’t able to save these changes. ${err}`\n          )\n        );\n      });\n  };\n\n  triggerDeleteCommunity = (e, communityId) => {\n    e.preventDefault();\n    track('community', 'delete inited', null);\n    const { name, communityData } = this.state;\n    const message = (\n      <div>\n        <p>\n          Are you sure you want to delete your community, <b>{name}</b>?\n        </p>{' '}\n        <p>\n          <b>{communityData.metaData.members} members</b> will be removed from\n          the community and the{' '}\n          <b>{communityData.metaData.channels} channels</b> you’ve created will\n          be deleted.\n        </p>\n        <p>\n          All threads, messages, reactions, and media shared in your community\n          will be deleted.\n        </p>\n        <p>This cannot be undone.</p>\n      </div>\n    );\n\n    return this.props.dispatch(\n      openModal('DELETE_DOUBLE_CHECK_MODAL', {\n        id: communityId,\n        entity: 'community',\n        message,\n      })\n    );\n  };\n\n  render() {\n    const {\n      name,\n      slug,\n      description,\n      image,\n      coverPhoto,\n      website,\n      photoSizeError,\n      nameError,\n      isLoading,\n    } = this.state;\n    const { community } = this.props;\n\n    if (!community) {\n      return (\n        <SectionCard>\n          <FormTitle>This community doesn’t exist yet.</FormTitle>\n          <Description>Want to make it?</Description>\n          <Actions>\n            <Button>Create</Button>\n          </Actions>\n        </SectionCard>\n      );\n    }\n\n    return (\n      <SectionCard>\n        <SectionTitle>Community Settings</SectionTitle>\n        <Form onSubmit={this.save}>\n          <ImageInputWrapper>\n            <CoverInput\n              onChange={this.setCommunityCover}\n              defaultValue={coverPhoto}\n              preview={true}\n              allowGif\n            />\n\n            <PhotoInput\n              onChange={this.setCommunityPhoto}\n              defaultValue={image}\n              community\n              user={null}\n              allowGif\n            />\n          </ImageInputWrapper>\n\n          <Input defaultValue={name} onChange={this.changeName}>\n            Name\n          </Input>\n          <UnderlineInput defaultValue={slug} disabled>\n            spectrum.chat/\n          </UnderlineInput>\n\n          {nameError && (\n            <Error>Community names can be up to 20 characters long.</Error>\n          )}\n\n          <TextArea\n            defaultValue={description}\n            onChange={this.changeDescription}\n          >\n            Description\n          </TextArea>\n\n          <Input defaultValue={website} onChange={this.changeWebsite}>\n            Optional: Add your community’s website\n          </Input>\n\n          <Actions>\n            <Button\n              loading={isLoading}\n              onClick={this.save}\n              disabled={photoSizeError}\n              type=\"submit\"\n            >\n              Save\n            </Button>\n            <TertiaryActionContainer>\n              <IconButton\n                glyph=\"delete\"\n                tipText={`Delete ${name}`}\n                tipLocation=\"top-right\"\n                color=\"text.placeholder\"\n                hoverColor={'warn.alt'}\n                onClick={e => this.triggerDeleteCommunity(e, community.id)}\n              />\n            </TertiaryActionContainer>\n          </Actions>\n\n          {photoSizeError && (\n            <Notice style={{ marginTop: '16px' }}>\n              Photo uploads should be less than 3mb\n            </Notice>\n          )}\n        </Form>\n      </SectionCard>\n    );\n  }\n}\n\nexport default compose(\n  connect(),\n  deleteCommunityMutation,\n  editCommunityMutation,\n  withRouter\n)(EditForm);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/editForm.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\nimport { addToastWithTimeout } from '../../../actions/toasts';\nimport {\n  getSlackImport,\n  sendSlackInvitationsMutation,\n} from '../../../api/slackImport';\nimport { Loading } from '../../../components/loading';\nimport { Button } from '../../../components/buttons';\nimport Icon from '../../../components/icons';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { CustomMessageToggle, CustomMessageTextAreaStyles } from '../style';\nimport {\n  SectionCard,\n  SectionCardFooter,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { Description, Notice } from '../../../components/listItems/style';\nimport { Error } from '../../../components/formElements';\n\ntype Props = {\n  data: {\n    community: Object,\n    startPolling: Function,\n    stopPolling: Function,\n  },\n  hasInvitedPeople: Function,\n  sendSlackInvites: Function,\n  dispatch: Function,\n  isLoading: boolean,\n};\n\ntype State = {\n  isSendingInvites: boolean,\n  hasCustomMessage: boolean,\n  customMessageString: string,\n  customMessageError: boolean,\n};\n\nclass ImportSlack extends React.Component<Props, State> {\n  constructor() {\n    super();\n\n    this.state = {\n      isSendingInvites: false,\n      hasCustomMessage: false,\n      customMessageString: '',\n      customMessageError: false,\n    };\n  }\n\n  sendInvites = () => {\n    const { community } = this.props.data;\n    const {\n      customMessageError,\n      customMessageString,\n      hasCustomMessage,\n    } = this.state;\n\n    this.props.hasInvitedPeople && this.props.hasInvitedPeople();\n\n    let customMessage =\n      hasCustomMessage && !customMessageError ? customMessageString : null;\n\n    this.setState({\n      isSendingInvites: true,\n    });\n\n    this.props\n      .sendSlackInvites({\n        id: community.id,\n        customMessage,\n      })\n      .then(({ data: { sendSlackInvites } }) => {\n        this.setState({\n          isSendingInvites: false,\n          hasCustomMessage: false,\n        });\n        this.props.dispatch(\n          addToastWithTimeout('success', 'Your invitations are being sent!')\n        );\n      })\n      .catch(err => {\n        this.setState({\n          isSendingInvites: false,\n        });\n        this.props.dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  handleChange = e => {\n    const customMessageString = e.target.value;\n    if (customMessageString.length > 500) {\n      this.setState({\n        customMessageString,\n        customMessageError: true,\n      });\n    } else {\n      this.setState({\n        customMessageString,\n        customMessageError: false,\n      });\n    }\n  };\n\n  toggleCustomMessage = () => {\n    const { hasCustomMessage } = this.state;\n    this.setState({\n      hasCustomMessage: !hasCustomMessage,\n    });\n  };\n\n  render() {\n    const {\n      data: { community, startPolling, stopPolling },\n      isLoading,\n    } = this.props;\n    const {\n      isSendingInvites,\n      customMessageString,\n      hasCustomMessage,\n      customMessageError,\n    } = this.state;\n\n    if (community) {\n      // if no import has been created yet, we won't have a team name or a record at all\n      const noImport =\n        !community.slackImport || !community.slackImport.teamName;\n      // if an import has been created, but does not have members data yet\n      const partialImport =\n        community.slackImport &&\n        community.slackImport.teamName &&\n        !community.slackImport.members;\n      // if an import has been created and we have members\n      const fullImport = community.slackImport && community.slackImport.members;\n      const hasAlreadyBeenSent = fullImport && community.slackImport.sent;\n\n      const url = this.props.isOnboarding\n        ? `https://slack.com/oauth/authorize?&client_id=201769987287.200380534417&scope=users:read.email,users:read,team:read,admin&state=${\n            community.id\n          }&redirect_uri=${\n            process.env.NODE_ENV === 'development'\n              ? 'http://localhost:3001/api/slack/onboarding'\n              : 'https://spectrum.chat/api/slack/onboarding'\n          }`\n        : `https://slack.com/oauth/authorize?&client_id=201769987287.200380534417&scope=users:read.email,users:read,team:read,admin&state=${\n            community.id\n          }&redirect_uri=${\n            process.env.NODE_ENV === 'development'\n              ? 'http://localhost:3001/api/slack'\n              : 'https://spectrum.chat/api/slack'\n          }`;\n\n      if (noImport) {\n        return (\n          <div>\n            <SectionTitle>Invite a Slack Team</SectionTitle>\n            <Description>\n              Easily invite your team from an existing Slack team to Spectrum.\n              Get started by connecting your team below.{' '}\n            </Description>\n            <Notice>\n              <strong>Note:</strong> We will not invite any of your team members\n              until you’re ready. We will prompt for admin access to ensure that\n              you own the Slack team.\n            </Notice>\n            <SectionCardFooter>\n              <a href={url}>\n                <Button>Connect a Slack Team</Button>\n              </a>\n            </SectionCardFooter>\n          </div>\n        );\n      } else if (partialImport) {\n        startPolling(5000);\n        return (\n          <div>\n            <SectionTitle>Invite a Slack Team</SectionTitle>\n            <SectionCardFooter>\n              <Button loading>Connecting with Slack...</Button>\n            </SectionCardFooter>\n          </div>\n        );\n      } else if (fullImport) {\n        stopPolling();\n        const members = JSON.parse(community.slackImport.members);\n        const teamName = community.slackImport.teamName;\n        const count = members.length.toLocaleString();\n\n        if (hasAlreadyBeenSent) {\n          return (\n            <div>\n              <SectionTitle>Invite your Slack team</SectionTitle>\n              <Description>\n                This community has been connected to the{' '}\n                <strong>{teamName}</strong> Slack team. We found {count} members\n                with email addresses - you have already invited them to join\n                your community.\n              </Description>\n              <SectionCardFooter>\n                <Button disabled>Invites sent to {count} people</Button>\n              </SectionCardFooter>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <SectionTitle>Invite a Slack Team</SectionTitle>\n              <Description>\n                This community has been connected to the{' '}\n                <strong>{teamName}</strong> Slack team. We found {count} members\n                with email addresses - you can invite them to your Spectrum\n                community in one click.\n              </Description>\n\n              <CustomMessageToggle onClick={this.toggleCustomMessage}>\n                <Icon\n                  glyph={hasCustomMessage ? 'view-close' : 'post'}\n                  size={20}\n                />\n                {hasCustomMessage\n                  ? 'Remove custom message'\n                  : 'Optional: Add a custom message to your invitation'}\n              </CustomMessageToggle>\n\n              {hasCustomMessage && (\n                <Textarea\n                  autoFocus\n                  value={customMessageString}\n                  placeholder=\"Write something sweet here...\"\n                  style={{\n                    ...CustomMessageTextAreaStyles,\n                    border: customMessageError\n                      ? '1px solid #E3353C'\n                      : '1px solid #DFE7EF',\n                  }}\n                  onChange={this.handleChange}\n                />\n              )}\n\n              {hasCustomMessage &&\n                customMessageError && (\n                  <Error>\n                    Your custom invitation message can be up to 500 characters.\n                  </Error>\n                )}\n\n              <SectionCardFooter>\n                <Button\n                  gradientTheme=\"success\"\n                  onClick={this.sendInvites}\n                  loading={isSendingInvites}\n                  disabled={hasCustomMessage && customMessageError}\n                >\n                  Invite {count} people to Spectrum\n                </Button>\n              </SectionCardFooter>\n            </div>\n          );\n        }\n      }\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    return null;\n  }\n}\n\nconst ImportSlackCard = props => (\n  <SectionCard>\n    <ImportSlack {...props} />\n  </SectionCard>\n);\n\nconst ImportSlackNoCard = props => <ImportSlack {...props} />;\n\nexport const ImportSlackWithoutCard = compose(\n  sendSlackInvitationsMutation,\n  getSlackImport,\n  connect(),\n  viewNetworkHandler\n)(ImportSlackNoCard);\nexport const ImportSlackWithCard = compose(\n  sendSlackInvitationsMutation,\n  getSlackImport,\n  connect(),\n  viewNetworkHandler\n)(ImportSlackCard);\nexport default ImportSlackWithCard;\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/importSlack.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { getCommunityInvoices } from '../../../api/community';\nimport { Loading } from '../../../components/loading';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { InvoiceListItem } from '../../../components/listItems';\nimport { sortByDate } from '../../../helpers/utils';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { ListContainer } from '../../../components/listItems/style';\n\ntype InvoiceType = {\n  id: string,\n  paidAt: string,\n  amount: number,\n  sourceBrand: string,\n  sourceLast4: string,\n  planName: string,\n};\n\ntype Props = {\n  data: {\n    community: {\n      invoices: Array<InvoiceType>,\n    },\n  },\n  isLoading: boolean,\n};\n\nclass Invoices extends React.Component<Props> {\n  render() {\n    const { data: { community }, isLoading } = this.props;\n\n    if (community) {\n      const { invoices } = community;\n      const sortedInvoices = sortByDate(invoices.slice(), 'paidAt', 'desc');\n      if (!sortedInvoices || sortedInvoices.length === 0) {\n        return null;\n      }\n\n      return (\n        <SectionCard>\n          <SectionTitle>Payment History</SectionTitle>\n\n          <ListContainer style={{ marginTop: '16px' }}>\n            {sortedInvoices &&\n              sortedInvoices.map(invoice => {\n                return <InvoiceListItem invoice={invoice} key={invoice.id} />;\n              })}\n          </ListContainer>\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return null;\n  }\n}\n\nexport default compose(getCommunityInvoices, viewNetworkHandler, connect())(\n  Invoices\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/invoices.js","// @flow\nimport * as React from 'react';\nimport EditForm from './editForm';\nimport RecurringPaymentsList from './recurringPaymentsList';\nimport ChannelList from './channelList';\nimport ImportSlack from './importSlack';\nimport { CommunityInvitationForm } from '../../../components/emailInvitationForm';\nimport Invoices from './invoices';\nimport CommunityMembers from './communityMembers';\nimport {\n  SectionCard,\n  SectionTitle,\n  SectionsContainer,\n  Column,\n} from '../../../components/settingsViews/style';\n\ntype Props = {\n  communitySlug: string,\n  community: Object,\n};\nclass Overview extends React.Component<Props> {\n  render() {\n    const { community, communitySlug } = this.props;\n\n    return (\n      <SectionsContainer>\n        <Column>\n          <EditForm community={community} />\n          <RecurringPaymentsList community={community} />\n          <Invoices id={community.id} />\n        </Column>\n        <Column>\n          <ImportSlack community={community} id={community.id} />\n\n          <SectionCard>\n            <SectionTitle>Invite by email</SectionTitle>\n            <CommunityInvitationForm id={community.id} />\n          </SectionCard>\n\n          <ChannelList communitySlug={communitySlug} />\n        </Column>\n        <Column>\n          <CommunityMembers id={community.id} />\n        </Column>\n      </SectionsContainer>\n    );\n  }\n}\n\nexport default Overview;\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/overview.js","import React from 'react';\n//$FlowFixMe\nimport { connect } from 'react-redux';\n//$FlowFixMe\nimport compose from 'recompose/compose';\nimport { BillingListItem } from '../../../components/listItems';\nimport { IconButton } from '../../../components/buttons';\nimport { UpsellUpgradeCommunity } from './upgradeCommunity';\nimport { openModal } from '../../../actions/modals';\nimport { convertTimestampToDate } from '../../../helpers/utils';\nimport {\n  SectionCard,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { ListContainer } from '../../../components/listItems/style';\n\nconst RecurringPaymentsList = ({ community, currentUser, dispatch }) => {\n  const openCommunityProModal = () => {\n    dispatch(\n      openModal('COMMUNITY_UPGRADE_MODAL', { user: currentUser, community })\n    );\n  };\n\n  if (!community || community === undefined) return null;\n\n  // make sure to only display active subs for now\n  const filteredRecurringPayments =\n    community.recurringPayments && community.recurringPayments.length > 0\n      ? community.recurringPayments.filter(\n          subscription => subscription.status === 'active'\n        )\n      : [];\n\n  if (filteredRecurringPayments.length > 0) {\n    return (\n      <SectionCard>\n        <SectionTitle>Plan</SectionTitle>\n        <ListContainer>\n          {filteredRecurringPayments.map(payment => {\n            const amount = payment.amount / 100;\n            const timestamp = new Date(payment.createdAt * 1000).getTime();\n            const created = convertTimestampToDate(timestamp);\n            const meta = `$${amount}/month · Upgraded on ${created}`;\n            return (\n              <BillingListItem\n                key={payment.createdAt}\n                contents={{ name: payment.plan }}\n                withDescription={false}\n                meta={meta}\n              >\n                <IconButton glyph=\"settings\" onClick={openCommunityProModal} />\n              </BillingListItem>\n            );\n          })}\n        </ListContainer>\n      </SectionCard>\n    );\n  } else {\n    return (\n      <SectionCard>\n        <UpsellUpgradeCommunity community={community} />\n      </SectionCard>\n    );\n  }\n};\n\nconst map = state => ({\n  currentUser: state.users.currentUser,\n});\nexport default compose(connect(map))(RecurringPaymentsList);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/recurringPaymentsList.js","// @flow\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { getThisCommunity } from './queries';\nimport { Loading } from '../../components/loading';\nimport AppViewWrapper from '../../components/appViewWrapper';\nimport { Upsell404Community } from '../../components/upsell';\nimport viewNetworkHandler from '../../components/viewNetworkHandler';\nimport ViewError from '../../components/viewError';\nimport Analytics from '../communityAnalytics';\nimport Overview from './components/overview';\nimport Titlebar from '../titlebar';\nimport Header from '../../components/settingsViews/header';\nimport Subnav from '../../components/settingsViews/subnav';\nimport { View } from './style';\n\ntype Props = {\n  data: {\n    community: {\n      name: string,\n      slug: string,\n      profilePhoto: string,\n      communityPermissions: {\n        isMember: boolean,\n        isOwner: boolean,\n        isModerator: boolean,\n      },\n    },\n  },\n  location: Object,\n  isLoading: boolean,\n  hasError: boolean,\n};\n\nclass CommunitySettings extends React.Component<Props> {\n  render() {\n    const { data: { community }, location, isLoading, hasError } = this.props;\n\n    // this is hacky, but will tell us if we're viewing analytics or the root settings view\n    const pathname = location.pathname;\n    const lastIndex = pathname.lastIndexOf('/');\n    const activeTab = pathname.substr(lastIndex + 1);\n    const communitySlug = community && community.slug;\n\n    if (community) {\n      if (!community.communityPermissions.isOwner) {\n        return (\n          <AppViewWrapper>\n            <Titlebar\n              title={`No Permission`}\n              provideBack={true}\n              backRoute={`/${communitySlug}`}\n              noComposer\n            />\n\n            <ViewError\n              heading={`You don’t have permission to manage this community.`}\n              subheading={`If you want to create your own community, you can get started below.`}\n            >\n              <Upsell404Community />\n            </ViewError>\n          </AppViewWrapper>\n        );\n      }\n\n      const ActiveView = () => {\n        switch (activeTab) {\n          case 'settings':\n            return (\n              <Overview community={community} communitySlug={communitySlug} />\n            );\n          case 'analytics':\n            return (\n              <Analytics community={community} communitySlug={communitySlug} />\n            );\n          default:\n            return null;\n        }\n      };\n\n      const subnavItems = [\n        {\n          to: `/${community.slug}/settings`,\n          label: 'Overview',\n          activeLabel: 'settings',\n        },\n        {\n          to: `/${community.slug}/settings/analytics`,\n          label: 'Analytics',\n          activeLabel: 'analytics',\n        },\n      ];\n\n      const subheading = {\n        to: `/${community.slug}`,\n        label: `Return to ${community.name}`,\n      };\n\n      const avatar = {\n        profilePhoto: community.profilePhoto,\n        community,\n      };\n\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={community.name}\n            subtitle={'Settings'}\n            provideBack={true}\n            backRoute={`/${communitySlug}`}\n            noComposer\n          />\n\n          <View>\n            <Header\n              avatar={avatar}\n              subheading={subheading}\n              heading={'Settings'}\n            />\n            <Subnav items={subnavItems} activeTab={activeTab} />\n\n            <ActiveView />\n          </View>\n        </AppViewWrapper>\n      );\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (hasError) {\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={`Error fetching community`}\n            provideBack={true}\n            backRoute={`/${communitySlug}`}\n            noComposer\n          />\n          <ViewError\n            refresh\n            error={hasError}\n            heading={'There was an error fetching this community’s settings.'}\n          />\n        </AppViewWrapper>\n      );\n    }\n\n    return (\n      <AppViewWrapper>\n        <Titlebar\n          title={`No Community Found`}\n          provideBack={true}\n          backRoute={`/${communitySlug}`}\n          noComposer\n        />\n        <ViewError\n          heading={`We weren’t able to find this community.`}\n          subheading={`If you want to start the ${communitySlug} community yourself, you can get started below.`}\n        >\n          <Upsell404Community />\n        </ViewError>\n      </AppViewWrapper>\n    );\n  }\n}\n\nexport default compose(connect(), getThisCommunity, viewNetworkHandler)(\n  CommunitySettings\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/index.js","import { graphql, gql } from 'react-apollo';\nimport { communityInfoFragment } from '../../api/fragments/community/communityInfo';\nimport { communityMetaDataFragment } from '../../api/fragments/community/communityMetaData';\nimport { channelInfoFragment } from '../../api/fragments/channel/channelInfo';\n\nexport const getThisCommunity = graphql(\n  gql`\n    query thisCommunity($slug: String) {\n\t\t\tcommunity(slug: $slug) {\n        ...communityInfo\n        ...communityMetaData\n        recurringPayments {\n          plan\n          amount\n          createdAt\n          status\n        }\n      }\n\t\t}\n    ${communityInfoFragment}\n    ${communityMetaDataFragment}\n\t`,\n  {\n    options: props => ({\n      variables: {\n        slug: props.match.params.communitySlug.toLowerCase(),\n      },\n      fetchPolicy: 'network-only',\n    }),\n  }\n);\n\nexport const GET_COMMUNITY_CHANNELS_QUERY = gql`\n  query getCommunityChannels($slug: String) {\n    community(slug: $slug) {\n      ...communityInfo\n      channelConnection {\n        edges {\n          node {\n            ...channelInfo\n          }\n        }\n      }\n    }\n  }\n  ${channelInfoFragment}\n  ${communityInfoFragment}\n`;\n\nexport const GET_COMMUNITY_CHANNELS_OPTIONS = {\n  options: ({ communitySlug }: { communitySlug: string }) => ({\n    variables: {\n      slug: communitySlug.toLowerCase(),\n    },\n    fetchPolicy: 'cache-and-network',\n  }),\n};\n\nexport const getCommunityChannels = graphql(\n  GET_COMMUNITY_CHANNELS_QUERY,\n  GET_COMMUNITY_CHANNELS_OPTIONS\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/queries.js"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;AADA;AADA;AAAA;AADA;AACA;AAOA;AACA;AAeA;AAYA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAEA;AACA;AADA;AADA;AADA;AADA;AAAA;AADA;AACA;AAUA;;;;;;;;;;;;;ACnDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AAEA;AAAA;AACA;AAKA;AAAA;AAAA;AAAA;AAEA;AAAA;AAKA;AAAA;AACA;AAGA;AAAA;AAAA;AAAA;AACA;AAIA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAOA;AAAA;AAAA;AAAA;AAMA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAIA;AAAA;AACA;AAAA;AACA;AAMA;AAAA;AAAA;AAAA;AACA;AAYA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAKA;AAAA;AAAA;AAKA;AAAA;AAAA;AAIA;AAAA;AAAA;AACA;AAQA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACrHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA8BA;;;AACA;AAAA;AACA;AADA;AACA;AADA;AA8BA;AAAA;AAAA;AAAA;AACA;AA/BA;AAgCA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAOA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAGA;AACA;AACA;AACA;AACA;AACA;AAHA;AAKA;AACA;AAAA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AAxBA;AACA;AA0BA;AAUA;AAEA;AACA;AADA;AAGA;AACA;AACA;AACA;AAvHA;AAwHA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAjIA;AAkIA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AACA;AAMA;AAEA;AAFA;AAIA;AACA;AAhJA;AAiJA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAzJA;AA0JA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAFA;AAIA;AACA;AAvKA;AAyKA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAtLA;AAuLA;AACA;AACA;AACA;AADA;AAGA;AACA;AA3LA;AACA;AACA;AAEA;AACA;AACA;AACA;AAJA;AAOA;AACA;AACA;AACA;AAJA;AAOA;AACA;AA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AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AATA;AAqBA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA9DA;AAFA;AAuEA;;;;AAxUA;AACA;;;;AAqCA;AACA;AACA;AACA;AACA;AACA;AACA;AAFA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAJA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AADA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AANA;AACA;AAQA;AACA;AACA;AACA;AACA;AACA;AADA;AACA;AAGA;AAEA;AACA;AAAA;AACA;AACA;AACA;AADA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AAEA;AACA;AADA;AACA;AAGA;AAMA;AACA;AACA;AACA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AAGA;AACA;AAAA;AAAA;AAAA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","sourceRoot":""}