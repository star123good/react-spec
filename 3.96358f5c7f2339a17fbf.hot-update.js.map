{"version":3,"file":"3.96358f5c7f2339a17fbf.hot-update.js","sources":["/Users/brianlovin/Sites/spectrum/src/components/editForm/style.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/channelList.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/components/importSlack.js","/Users/brianlovin/Sites/spectrum/src/views/communitySettings/index.js"],"sourcesContent":["import styled from 'styled-components';\nimport Card from '../card';\nimport { FlexRow, FlexCol, Truncate } from '../globals';\n\nexport const StyledCard = styled(Card)`padding: 16px;`;\n\nexport const Form = styled.form`\n  display: inline-block;\n  flex-direction: column;\n  align-self: stretch;\n  flex: none;\n  max-width: 100%;\n`;\n\nexport const FormTitle = styled.h1`\n  font-size: 20px;\n  color: ${props => props.theme.text.default};\n  font-weight: 800;\n  line-height: 1.2;\n  flex: 1 0 auto;\n  ${Truncate};\n`;\n\nexport const Subtitle = styled.h4`\n  font-size: 14px;\n  color: ${props => props.theme.text.alt};\n  line-height: 1.3;\n  width: 100%;\n  ${Truncate};\n`;\n\nexport const Description = styled.p`\n  font-size: 14px;\n  color: ${props => props.theme.text.default};\n  padding: 8px 0 16px;\n  line-height: 1.4;\n\n  a {\n    color: ${props => props.theme.brand.default};\n  }\n`;\n\nexport const TertiaryActionContainer = styled(FlexRow)`\n  justify-content: flex-start;\n  flex-grow: 1;\n`;\n\nexport const Actions = styled(FlexRow)`\n  margin-top: 24px;\n  justify-content: flex-start;\n  flex-direction: row-reverse;\n  border-top: 1px solid ${props => props.theme.bg.border};\n  padding-top: 16px;\n\n  button + button {\n    margin-left: 8px;\n  }\n`;\n\nexport const PhotoPreview = styled.div`\n  position: relative;\n  width: 48px;\n  height: 48px;\n  object-fit: cover;\n  border-radius: 4px;\n  background-image: url('${props => props.src}')\n`;\n\nexport const GeneralNotice = styled.span`\n  padding: 8px 12px;\n  font-size: 12px;\n  font-weight: 500;\n  color: ${props => props.theme.text.alt};\n  background: ${props => props.theme.bg.wash};\n  border-radius: 4px;\n  margin-top: 24px;\n  line-height: 1.4;\n  display: inline-block;\n`;\n\nexport const ImageInputWrapper = styled(FlexCol)`\n  position: relative;\n  flex: 0 0 auto;\n  margin-top: 8px;\n  margin-bottom: 24px;\n\n  > label:nth-of-type(2) {\n    position: absolute;\n    bottom: -24px;\n    left: 24px;\n  }\n`;\n\nexport const Location = styled(FlexRow)`\n  font-weight: 500;\n  color: ${({ theme }) => theme.text.alt};\n  font-size: 14px;\n  margin-bottom: 8px;\n\n  > div {\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > span {\n    padding: 0 4px;\n    color: ${({ theme }) => theme.text.placeholder};\n  }\n\n  > a:hover {\n    color: ${({ theme }) => theme.brand.alt};\n    text-decoration: underline;\n  }\n\n  @media (max-width: 768px) {\n    display: none;\n  }\n`;\n\nexport const Loading = styled.span`\n  display: inline-block;\n  position: absolute;\n  right: 19px;\n  top: 45px;\n`;\n\n\n\n// WEBPACK FOOTER //\n// src/components/editForm/style.js","//@flow\nimport React from 'react';\n//$FlowFixMe\nimport Link from 'src/components/link';\n//$FlowFixMe\nimport { connect } from 'react-redux';\n//$FlowFixMe\nimport compose from 'recompose/compose';\nimport { openModal } from '../../../actions/modals';\nimport { Loading } from '../../../components/loading';\nimport { ChannelListItem } from '../../../components/listItems';\nimport { IconButton, Button } from '../../../components/buttons';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport ViewError from '../../../components/viewError';\nimport { getCommunityChannels } from '../queries';\nimport { ListContainer } from '../style';\nimport {\n  SectionCard,\n  SectionTitle,\n  SectionCardFooter,\n} from '../../../components/settingsViews/style';\n\ntype Props = {\n  data: {\n    community: Object,\n  },\n  isLoading: boolean,\n  dispatch: Function,\n  communitySlug: string,\n};\n\nclass ChannelList extends React.Component<Props> {\n  render() {\n    const {\n      data: { community },\n      isLoading,\n      dispatch,\n      communitySlug,\n    } = this.props;\n\n    if (community) {\n      const channels = community.channelConnection.edges.map(c => c.node);\n\n      return (\n        <SectionCard>\n          <SectionTitle>Channels</SectionTitle>\n\n          <ListContainer>\n            {channels.length > 0 &&\n              channels.map(item => {\n                return (\n                  <Link\n                    key={item.id}\n                    to={`/${communitySlug}/${item.slug}/settings`}\n                  >\n                    <ChannelListItem contents={item} withDescription={false}>\n                      <IconButton glyph=\"settings\" />\n                    </ChannelListItem>\n                  </Link>\n                );\n              })}\n          </ListContainer>\n\n          <SectionCardFooter>\n            <Button\n              style={{ alignSelf: 'flex-start' }}\n              icon={'plus'}\n              onClick={() =>\n                dispatch(openModal('CREATE_CHANNEL_MODAL', community))}\n            >\n              Create Channel\n            </Button>\n          </SectionCardFooter>\n        </SectionCard>\n      );\n    }\n\n    if (isLoading) {\n      return (\n        <SectionCard>\n          <Loading />\n        </SectionCard>\n      );\n    }\n\n    return (\n      <SectionCard>\n        <ViewError\n          refresh\n          small\n          heading={`We couldnâ€™t load the channels for this community.`}\n        />\n      </SectionCard>\n    );\n  }\n}\n\nexport default compose(connect(), getCommunityChannels, viewNetworkHandler)(\n  ChannelList\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/channelList.js","// @flow\nimport * as React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport Textarea from 'react-textarea-autosize';\nimport { addToastWithTimeout } from '../../../actions/toasts';\nimport {\n  getSlackImport,\n  sendSlackInvitationsMutation,\n} from '../../../api/slackImport';\nimport { Loading } from '../../../components/loading';\nimport { Button } from '../../../components/buttons';\nimport Icon from '../../../components/icons';\nimport viewNetworkHandler from '../../../components/viewNetworkHandler';\nimport { CustomMessageToggle, CustomMessageTextAreaStyles } from '../style';\nimport {\n  SectionCard,\n  SectionCardFooter,\n  SectionTitle,\n} from '../../../components/settingsViews/style';\nimport { Description, Notice } from '../../../components/listItems/style';\nimport { Error } from '../../../components/formElements';\n\ntype Props = {\n  data: {\n    community: Object,\n    startPolling: Function,\n    stopPolling: Function,\n  },\n  hasInvitedPeople: Function,\n  sendSlackInvites: Function,\n  dispatch: Function,\n  isLoading: boolean,\n};\n\ntype State = {\n  isSendingInvites: boolean,\n  hasCustomMessage: boolean,\n  customMessageString: string,\n  customMessageError: boolean,\n};\n\nclass ImportSlack extends React.Component<Props, State> {\n  constructor() {\n    super();\n\n    this.state = {\n      isSendingInvites: false,\n      hasCustomMessage: false,\n      customMessageString: '',\n      customMessageError: false,\n    };\n  }\n\n  sendInvites = () => {\n    const { community } = this.props.data;\n    const {\n      customMessageError,\n      customMessageString,\n      hasCustomMessage,\n    } = this.state;\n\n    this.props.hasInvitedPeople && this.props.hasInvitedPeople();\n\n    let customMessage =\n      hasCustomMessage && !customMessageError ? customMessageString : null;\n\n    this.setState({\n      isSendingInvites: true,\n    });\n\n    this.props\n      .sendSlackInvites({\n        id: community.id,\n        customMessage,\n      })\n      .then(({ data: { sendSlackInvites } }) => {\n        this.setState({\n          isSendingInvites: false,\n          hasCustomMessage: false,\n        });\n        this.props.dispatch(\n          addToastWithTimeout('success', 'Your invitations are being sent!')\n        );\n      })\n      .catch(err => {\n        this.setState({\n          isSendingInvites: false,\n        });\n        this.props.dispatch(addToastWithTimeout('error', err.message));\n      });\n  };\n\n  handleChange = e => {\n    const customMessageString = e.target.value;\n    if (customMessageString.length > 500) {\n      this.setState({\n        customMessageString,\n        customMessageError: true,\n      });\n    } else {\n      this.setState({\n        customMessageString,\n        customMessageError: false,\n      });\n    }\n  };\n\n  toggleCustomMessage = () => {\n    const { hasCustomMessage } = this.state;\n    this.setState({\n      hasCustomMessage: !hasCustomMessage,\n    });\n  };\n\n  render() {\n    const {\n      data: { community, startPolling, stopPolling },\n      isLoading,\n    } = this.props;\n    const {\n      isSendingInvites,\n      customMessageString,\n      hasCustomMessage,\n      customMessageError,\n    } = this.state;\n\n    if (community) {\n      // if no import has been created yet, we won't have a team name or a record at all\n      const noImport =\n        !community.slackImport || !community.slackImport.teamName;\n      // if an import has been created, but does not have members data yet\n      const partialImport =\n        community.slackImport &&\n        community.slackImport.teamName &&\n        !community.slackImport.members;\n      // if an import has been created and we have members\n      const fullImport = community.slackImport && community.slackImport.members;\n      const hasAlreadyBeenSent = fullImport && community.slackImport.sent;\n\n      const url = this.props.isOnboarding\n        ? `https://slack.com/oauth/authorize?&client_id=201769987287.200380534417&scope=users:read.email,users:read,team:read,admin&state=${community.id}&redirect_uri=${process\n            .env.NODE_ENV === 'development'\n            ? 'http://localhost:3001/api/slack/onboarding'\n            : 'https://spectrum.chat/api/slack/onboarding'}`\n        : `https://slack.com/oauth/authorize?&client_id=201769987287.200380534417&scope=users:read.email,users:read,team:read,admin&state=${community.id}&redirect_uri=${process\n            .env.NODE_ENV === 'development'\n            ? 'http://localhost:3001/api/slack'\n            : 'https://spectrum.chat/api/slack'}`;\n\n      if (noImport) {\n        return (\n          <div>\n            <SectionTitle>Invite a Slack Team</SectionTitle>\n            <Description>\n              Easily invite your team from an existing Slack team to Spectrum.\n              Get started by connecting your team below.{' '}\n            </Description>\n            <Notice>\n              <strong>Note:</strong> We will not invite any of your team members\n              until youâ€™re ready. We will prompt for admin access to ensure that\n              you own the Slack team.\n            </Notice>\n            <SectionCardFooter>\n              <a href={url}>\n                <Button>Connect a Slack Team</Button>\n              </a>\n            </SectionCardFooter>\n          </div>\n        );\n      } else if (partialImport) {\n        startPolling(5000);\n        return (\n          <div>\n            <SectionTitle>Invite a Slack Team</SectionTitle>\n            <SectionCardFooter>\n              <Button loading>Connecting with Slack...</Button>\n            </SectionCardFooter>\n          </div>\n        );\n      } else if (fullImport) {\n        stopPolling();\n        const members = JSON.parse(community.slackImport.members);\n        const teamName = community.slackImport.teamName;\n        const count = members.length.toLocaleString();\n\n        if (hasAlreadyBeenSent) {\n          return (\n            <div>\n              <SectionTitle>Invite your Slack team</SectionTitle>\n              <Description>\n                This community has been connected to the{' '}\n                <strong>{teamName}</strong> Slack team. We found {count} members\n                with email addresses - you have already invited them to join\n                your community.\n              </Description>\n              <SectionCardFooter>\n                <Button disabled>Invites sent to {count} people</Button>\n              </SectionCardFooter>\n            </div>\n          );\n        } else {\n          return (\n            <div>\n              <SectionTitle>Invite a Slack Team</SectionTitle>\n              <Description>\n                This community has been connected to the{' '}\n                <strong>{teamName}</strong> Slack team. We found {count} members\n                with email addresses - you can invite them to your Spectrum\n                community in one click.\n              </Description>\n\n              <CustomMessageToggle onClick={this.toggleCustomMessage}>\n                <Icon\n                  glyph={hasCustomMessage ? 'view-close' : 'post'}\n                  size={20}\n                />\n                {hasCustomMessage\n                  ? 'Remove custom message'\n                  : 'Optional: Add a custom message to your invitation'}\n              </CustomMessageToggle>\n\n              {hasCustomMessage && (\n                <Textarea\n                  autoFocus\n                  value={customMessageString}\n                  placeholder=\"Write something sweet here...\"\n                  style={{\n                    ...CustomMessageTextAreaStyles,\n                    border: customMessageError\n                      ? '1px solid #E3353C'\n                      : '1px solid #DFE7EF',\n                  }}\n                  onChange={this.handleChange}\n                />\n              )}\n\n              {hasCustomMessage &&\n                customMessageError && (\n                  <Error>\n                    Your custom invitation message can be up to 500 characters.\n                  </Error>\n                )}\n\n              <SectionCardFooter>\n                <Button\n                  gradientTheme=\"success\"\n                  onClick={this.sendInvites}\n                  loading={isSendingInvites}\n                  disabled={hasCustomMessage && customMessageError}\n                >\n                  Invite {count} people to Spectrum\n                </Button>\n              </SectionCardFooter>\n            </div>\n          );\n        }\n      }\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    return null;\n  }\n}\n\nconst ImportSlackCard = props => (\n  <SectionCard>\n    <ImportSlack {...props} />\n  </SectionCard>\n);\n\nconst ImportSlackNoCard = props => <ImportSlack {...props} />;\n\nexport const ImportSlackWithoutCard = compose(\n  sendSlackInvitationsMutation,\n  getSlackImport,\n  connect(),\n  viewNetworkHandler\n)(ImportSlackNoCard);\nexport const ImportSlackWithCard = compose(\n  sendSlackInvitationsMutation,\n  getSlackImport,\n  connect(),\n  viewNetworkHandler\n)(ImportSlackCard);\nexport default ImportSlackWithCard;\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/components/importSlack.js","// @flow\nimport React from 'react';\nimport compose from 'recompose/compose';\nimport { connect } from 'react-redux';\nimport { getThisCommunity } from './queries';\nimport { Loading } from '../../components/loading';\nimport AppViewWrapper from '../../components/appViewWrapper';\nimport { Upsell404Community } from '../../components/upsell';\nimport viewNetworkHandler from '../../components/viewNetworkHandler';\nimport ViewError from '../../components/viewError';\nimport Analytics from '../communityAnalytics';\nimport Overview from './components/overview';\nimport Titlebar from '../titlebar';\nimport Header from '../../components/settingsViews/header';\nimport Subnav from '../../components/settingsViews/subnav';\nimport { View } from './style';\n\ntype Props = {\n  data: {\n    community: {\n      name: string,\n      slug: string,\n      profilePhoto: string,\n      communityPermissions: {\n        isMember: boolean,\n        isOwner: boolean,\n        isModerator: boolean,\n      },\n    },\n  },\n  location: Object,\n  isLoading: boolean,\n  hasError: boolean,\n};\n\nclass CommunitySettings extends React.Component<Props> {\n  render() {\n    const { data: { community }, location, isLoading, hasError } = this.props;\n\n    // this is hacky, but will tell us if we're viewing analytics or the root settings view\n    const pathname = location.pathname;\n    const lastIndex = pathname.lastIndexOf('/');\n    const activeTab = pathname.substr(lastIndex + 1);\n    const communitySlug = community && community.slug;\n\n    if (community) {\n      if (!community.communityPermissions.isOwner) {\n        return (\n          <AppViewWrapper>\n            <Titlebar\n              title={`No Permission`}\n              provideBack={true}\n              backRoute={`/${communitySlug}`}\n              noComposer\n            />\n\n            <ViewError\n              heading={`You donâ€™t have permission to manage this community.`}\n              subheading={`If you want to create your own community, you can get started below.`}\n            >\n              <Upsell404Community />\n            </ViewError>\n          </AppViewWrapper>\n        );\n      }\n\n      const ActiveView = () => {\n        switch (activeTab) {\n          case 'settings':\n            return (\n              <Overview community={community} communitySlug={communitySlug} />\n            );\n          case 'analytics':\n            return (\n              <Analytics community={community} communitySlug={communitySlug} />\n            );\n          default:\n            return null;\n        }\n      };\n\n      const subnavItems = [\n        {\n          to: `/${community.slug}/settings`,\n          label: 'Overview',\n          activeLabel: 'settings',\n        },\n        {\n          to: `/${community.slug}/settings/analytics`,\n          label: 'Analytics',\n          activeLabel: 'analytics',\n        },\n      ];\n\n      const subheading = {\n        to: `/${community.slug}`,\n        label: `Return to ${community.name}`,\n      };\n\n      const avatar = {\n        profilePhoto: community.profilePhoto,\n        community,\n      };\n\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={community.name}\n            subtitle={'Settings'}\n            provideBack={true}\n            backRoute={`/${communitySlug}`}\n            noComposer\n          />\n\n          <View>\n            <Header\n              avatar={avatar}\n              subheading={subheading}\n              heading={'Settings'}\n            />\n            <Subnav items={subnavItems} activeTab={activeTab} />\n\n            <ActiveView />\n          </View>\n        </AppViewWrapper>\n      );\n    }\n\n    if (isLoading) {\n      return <Loading />;\n    }\n\n    if (hasError) {\n      return (\n        <AppViewWrapper>\n          <Titlebar\n            title={`Error fetching community`}\n            provideBack={true}\n            backRoute={`/${communitySlug}`}\n            noComposer\n          />\n          <ViewError\n            refresh\n            error={hasError}\n            heading={'There was an error fetching this communityâ€™s settings.'}\n          />\n        </AppViewWrapper>\n      );\n    }\n\n    return (\n      <AppViewWrapper>\n        <Titlebar\n          title={`No Community Found`}\n          provideBack={true}\n          backRoute={`/${communitySlug}`}\n          noComposer\n        />\n        <ViewError\n          heading={`We werenâ€™t able to find this community.`}\n          subheading={`If you want to start the ${communitySlug} community yourself, you can get started below.`}\n        >\n          <Upsell404Community />\n        </ViewError>\n      </AppViewWrapper>\n    );\n  }\n}\n\nexport default compose(connect(), getThisCommunity, viewNetworkHandler)(\n  CommunitySettings\n);\n\n\n\n// WEBPACK FOOTER //\n// src/views/communitySettings/index.js"],"mappings":"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","sourceRoot":""}